/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { GifStaking, GifStakingInterface } from "../GifStaking";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DIP_CONTRACT_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DIP_DECIMALS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DIP_TO_TOKEN_PARITY_LEVEL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DIP_TO_TOKEN_PARITY_LEVEL_DECIMALS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ONE_YEAR_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "YIELD_100_PERCENTAGE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "YIELD_MAX_PERCENTAGE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "calculateYield",
    outputs: [
      {
        internalType: "uint256",
        name: "yieldAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "staker",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "instanceId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "bundleId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct GifStaking.StakeInfo",
        name: "stakeInfo",
        type: "tuple",
      },
    ],
    name: "calculateYieldIncrement",
    outputs: [
      {
        internalType: "uint256",
        name: "yieldAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "dipAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "convertToTokenAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
    ],
    name: "getBundleInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "enum IBundle.BundleState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "closedSince",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct GifStaking.BundleInfo",
        name: "info",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDip",
    outputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "dip",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "getDipConversionRate",
    outputs: [
      {
        internalType: "uint256",
        name: "conversionRate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDipToTokenParityLevel",
    outputs: [
      {
        internalType: "uint256",
        name: "parityLevel",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
    ],
    name: "getInstanceId",
    outputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
    ],
    name: "getInstanceInfo",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "registry",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
        ],
        internalType: "struct GifStaking.InstanceInfo",
        name: "info",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOneYearDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "yearDuration",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "getStakeInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "staker",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "instanceId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "bundleId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct GifStaking.StakeInfo",
        name: "stakeInfo",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStakingWallet",
    outputs: [
      {
        internalType: "address",
        name: "instanceWallet",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getYield100PercentLevel",
    outputs: [
      {
        internalType: "uint256",
        name: "yield100PercentLevel",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "instances",
    outputs: [
      {
        internalType: "uint256",
        name: "numberOfInstances",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "registry",
        type: "address",
      },
    ],
    name: "registerGifInstance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dipTokenAddress",
        type: "address",
      },
    ],
    name: "setDipContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenDecimals",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "conversionRate",
        type: "uint256",
      },
    ],
    name: "setDipConversionRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "yield",
        type: "uint256",
      },
    ],
    name: "setYield",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakes",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
      {
        internalType: "enum IBundle.BundleState",
        name: "state",
        type: "uint8",
      },
    ],
    name: "updateBundleState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
    ],
    name: "updateBundleState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a33610053565b600180546001600160a01b031990811673c719d010b63e5bbf2c0551872cd5316ed26acd831790915560048054909116301790556100a3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b612673806100b26000396000f3fe608060405234801561001057600080fd5b50600436106102275760003560e01c80636f9a9db911610130578063b3fc986e116100b8578063e8a9650a1161007c578063e8a9650a14610316578063ee7abafe146104d7578063f2fde38b146104ea578063fddec1c3146104fd578063fe4071d41461051857610227565b8063b3fc986e14610485578063b54ded6e14610496578063b680a4f3146104a7578063b86faa06146104b1578063e42da3b4146104c457610227565b80638da5cb5b116100ff5780638da5cb5b146103ec5780638fee6407146104115780639f6fc02514610424578063ad09c7ce1461042e578063ad6b6b011461043657610227565b80636f9a9db9146103ab578063715018a6146103be57806376ef274e146103c65780637dbe07dc146103d957610227565b806327835a94116101b35780634495c42a116101825780634495c42a1461036a5780634d2ace66146103725780634e8f0ea01461037a5780635c334e8f1461038d578063631e136c146103a057610227565b806327835a941461031e5780632daedd521461033157806333c128e61461034457806338ccae701461035757610227565b80630c4cd422116101fa5780630c4cd422146102775780630cd82abd146102da5780631895b45b146102fa57806319685cbd1461030357806319787fcc1461031657610227565b8063040cf0201461022c578063043cbe5b14610241578063045b93e1146102675780630556592d1461026f575b600080fd5b61023f61023a36600461215c565b61052b565b005b61025461024f3660046123b2565b61053c565b6040519081526020015b60405180910390f35b61025461057e565b61025461058f565b61028a61028536600461217d565b61059b565b60405161025e919081516001600160a01b031681526020808301519082015260408083015190820152606080830151908201526080808301519082015260a0918201519181019190915260c00190565b6102ed6102e836600461215c565b6106be565b60405161025e91906123e5565b620f4240610254565b610254610311366004612347565b610859565b610254601281565b61023f61032c366004612376565b6108d4565b61023f61033f3660046121e2565b610b23565b61023f61035236600461217d565b610d13565b61023f6103653660046121b5565b610f15565b610254611053565b600354610254565b61025461038836600461212c565b611066565b61023f61039b3660046121e2565b6110fd565b6102546301e1338081565b61023f6103b936600461215c565b61127a565b61023f6113ff565b6102546103d43660046122e1565b611413565b6102546103e736600461215c565b611436565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161025e565b61025461041f36600461212c565b6114c4565b610254620f424081565b600c54610254565b61044961044436600461212c565b61157b565b60405161025e919081518152602080830151908201526040808301516001600160a01b0316908201526060918201519181019190915260800190565b6004546001600160a01b03166103f9565b6001546001600160a01b03166103f9565b6301e13380610254565b6102546104bf36600461217d565b611659565b61023f6104d236600461212c565b6116fb565b6102546104e536600461217d565b611771565b61023f6104f83660046120d4565b61182f565b6103f973c719d010b63e5bbf2c0551872cd5316ed26acd8381565b61023f6105263660046120d4565b6118a8565b61053882826000196110fd565b5050565b6000806301e133808360025461055291906125b9565b61055c9190612485565b9050620f424061056c82866125b9565b6105769190612485565b949350505050565b61058c6003620f4240612485565b81565b61058c6012600a6124eb565b6105e06040518060c0016040528060006001600160a01b0316815260200160008019168152602001600081526020016000815260200160008152602001600081525090565b50600083815260096020908152604080832085845282528083206001600160a01b03808616855290835292819020815160c0810183528154909416845260018101549284019290925260028201549083015260038101546060830152600481015460808301526005015460a082018190526106b75760405162461bcd60e51b815260206004820152602c60248201527f4552524f523a53544b2d3038303a4143434f554e545f574954484f55545f535460448201526b1052d25391d7d49150d3d49160a21b60648201526084015b60405180910390fd5b9392505050565b6106f16040805160a081019091526000808252602082019081526020016000815260200160008152602001600081525090565b60008381526007602052604090206003015461075d5760405162461bcd60e51b815260206004820152602560248201527f4552524f523a53544b2d3037303a494e5354414e43455f4e4f545f5245474953604482015264151154915160da1b60648201526084016106ae565b6000838152600860209081526040808320858452825291829020825160a08101909352805483526001810154909183019060ff1660038111156107b057634e487b7160e01b600052602160045260246000fd5b60038111156107cf57634e487b7160e01b600052602160045260246000fd5b81526020016002820154815260200160038201548152602001600482015481525050905060008160600151116108535760405162461bcd60e51b815260206004820152602360248201527f4552524f523a53544b2d3037313a42554e444c455f4e4f545f5245474953544560448201526214915160ea1b60648201526084016106ae565b92915050565b60008281526005602090815260408083206001600160a01b0385168452909152902054806108535760405162461bcd60e51b815260206004820152602260248201527f4552524f523a53544b2d3036303a434f4e56455253494f4e5f524154455f5a45604482015261524f60f01b60648201526084016106ae565b6108dc6119af565b6000841161092c5760405162461bcd60e51b815260206004820152601b60248201527f4552524f523a53544b2d3031323a434841494e5f49445f5a45524f000000000060448201526064016106ae565b6001600160a01b0383166109825760405162461bcd60e51b815260206004820181905260248201527f4552524f523a53544b2d3031333a544f4b454e5f414444524553535f5a45524f60448201526064016106ae565b600082116109dc5760405162461bcd60e51b815260206004820152602160248201527f4552524f523a53544b2d3031343a544f4b454e5f444543494d414c535f5a45526044820152604f60f81b60648201526084016106ae565b60008111610a375760405162461bcd60e51b815260206004820152602260248201527f4552524f523a53544b2d3031353a434f4e56455253494f4e5f524154455f5a45604482015261524f60f01b60648201526084016106ae565b60008481526005602090815260408083206001600160a01b03871680855290835281842085905587845260068352818420908452909152902081905546841415610b1d576000839050806001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610ab957600080fd5b505afa158015610acd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af191906123c4565b60008681526006602090815260408083206001600160a01b0389168452909152902060ff919091169055505b50505050565b60008111610b7d5760405162461bcd60e51b815260206004820152602160248201527f4552524f523a53544b2d3034303a5354414b494e475f414d4f554e545f5a45526044820152604f60f81b60648201526084016106ae565b6000610b8984846106be565b9050600081602001516003811115610bb157634e487b7160e01b600052602160045260246000fd5b1480610be05750600181602001516003811115610bde57634e487b7160e01b600052602160045260246000fd5b145b610c3a5760405162461bcd60e51b815260206004820152602560248201527f4552524f523a53544b2d3034313a42554e444c455f434c4f5345445f4f525f42604482015264155493915160da1b60648201526084016106ae565b600084815260096020908152604080832086845282528083203380855292529091206004810154610c935780546001600160a01b0319166001600160a01b03831617815560018101869055600281018590554260048201555b6040805160c08101825282546001600160a01b03168152600183015460208201526002830154918101919091526003820154606082015260048201546080820152600582015460a0820152600090610cea90611413565b610cf4908661246d565b9050610d008282611a09565b610d0a8386611aa9565b50505050505050565b610d1b6119af565b60008381526007602052604090206003015415610d8c5760405162461bcd60e51b815260206004820152602960248201527f4552524f523a53544b2d3032303a494e5354414e43455f414c52454144595f526044820152681151d254d51154915160ba1b60648201526084016106ae565b60008211610ddc5760405162461bcd60e51b815260206004820152601b60248201527f4552524f523a53544b2d3032313a434841494e5f49445f5a45524f000000000060448201526064016106ae565b6001600160a01b038116610e475760405162461bcd60e51b815260206004820152602c60248201527f4552524f523a53544b2d3032323a52454749535452595f434f4e54524143545f60448201526b414444524553535f5a45524f60a01b60648201526084016106ae565b6000610e54848484611b42565b905080610ea35760405162461bcd60e51b815260206004820152601e60248201527f4552524f523a53544b2d3032333a494e5354414e43455f494e56414c4944000060448201526064016106ae565b5060008381526007602052604081208481556001808201949094556002810180546001600160a01b0319166001600160a01b0394909416939093179092554260039283015581549283018255527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0155565b610f1d6119af565b6000838152600760205260409020600301548390610f8b5760405162461bcd60e51b815260206004820152602560248201527f4552524f523a53544b2d3030333a494e5354414e43455f4e4f545f5245474953604482015264151154915160da1b60648201526084016106ae565b600081815260076020526040902060010154461415610ff85760405162461bcd60e51b8152602060048201526024808201527f4552524f523a53544b2d3030343a494e5354414e43455f4f4e5f544849535f436044820152632420a4a760e11b60648201526084016106ae565b600083116110485760405162461bcd60e51b815260206004820152601c60248201527f4552524f523a53544b2d3033303a42554e444c455f49445f5a45524f0000000060448201526064016106ae565b610b1d848484611c3c565b60006110616012600a6124eb565b905090565b60035460009082106110c95760405162461bcd60e51b815260206004820152602660248201527f4552524f523a53544b2d3036313a494e5354414e43455f494e4445585f544f4f6044820152655f4c4152474560d01b60648201526084016106ae565b600382815481106110ea57634e487b7160e01b600052603260045260246000fd5b906000526020600020015490505b919050565b600081116111595760405162461bcd60e51b8152602060048201526024808201527f4552524f523a53544b2d3035303a5749544844524157414c5f414d4f554e545f6044820152635a45524f60e01b60648201526084016106ae565b6000838152600960209081526040808320858452825280832033808552925290912060058101546111e15760405162461bcd60e51b815260206004820152602c60248201527f4552524f523a53544b2d3035313a4143434f554e545f574954484f55545f535460448201526b1052d25391d7d49150d3d49160a21b60648201526084016106ae565b6040805160c08101825282546001600160a01b03168152600183015460208201526002830154918101919091526003820154606082015260048201546080820152600582015460a082015261123590611413565b816003016000828254611248919061246d565b909155505060001983141561125f57806003015492505b6112698184611ce6565b6112738284611dee565b5050505050565b6112826119af565b60008281526007602052604090206003015482906112f05760405162461bcd60e51b815260206004820152602560248201527f4552524f523a53544b2d3030313a494e5354414e43455f4e4f545f5245474953604482015264151154915160da1b60648201526084016106ae565b60008181526007602052604090206001015446146113615760405162461bcd60e51b815260206004820152602860248201527f4552524f523a53544b2d3030323a494e5354414e43455f4e4f545f4f4e5f544860448201526724a9afa1a420a4a760c11b60648201526084016106ae565b600061136c84611ed3565b604051632d0821b760e01b8152600481018590529091506000906001600160a01b03831690632d0821b79060240160006040518083038186803b1580156113b257600080fd5b505afa1580156113c6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526113ee919081019061220d565b905061127385858360600151611c3c565b6114076119af565b6114116000611f63565b565b6000808260a001514261142691906125d8565b90506106b783606001518261053c565b60008061144384846106be565b905060008160600151116114a55760405162461bcd60e51b815260206004820152602360248201527f4552524f523a53544b2d3038323a42554e444c455f4e4f545f5245474953544560448201526214915160ea1b60648201526084016106ae565b50506000918252600a6020908152604080842092845291905290205490565b600081815260076020908152604080832081516080810183528154815260018201549381019390935260028101546001600160a01b03169183019190915260030154606082018190526115675760405162461bcd60e51b815260206004820152602560248201527f4552524f523a53544b2d3038333a494e5354414e43455f4e4f545f5245474953604482015264151154915160da1b60648201526084016106ae565b50506000908152600b602052604090205490565b60408051608081018252600080825260208201819052918101829052606081019190915260008281526007602052604090206003015461160b5760405162461bcd60e51b815260206004820152602560248201527f4552524f523a53544b2d3036323a494e5354414e43455f4e4f545f5245474953604482015264151154915160da1b60648201526084016106ae565b5060009081526007602090815260409182902082516080810184528154815260018201549281019290925260028101546001600160a01b031692820192909252600390910154606082015290565b60008061166685856106be565b905060008160600151116116c85760405162461bcd60e51b815260206004820152602360248201527f4552524f523a53544b2d3038313a42554e444c455f4e4f545f5245474953544560448201526214915160ea1b60648201526084016106ae565b505060009283526009602090815260408085209385529281528284206001600160a01b0390921684525290206003015490565b6117036119af565b6117116003620f4240612485565b81111561176c5760405162461bcd60e51b8152602060048201526024808201527f4552524f523a53544b2d3031363a5949454c445f4558454544535f4d41585f56604482015263414c554560e01b60648201526084016106ae565b600255565b60008061177e8484610859565b60008581526006602090815260408083206001600160a01b0388168452909152902054909150600180826117b360128061246d565b106117e057826117c460128061246d565b6117ce91906125d8565b6117d990600a6124eb565b9050611803565b6117eb60128061246d565b6117f590846125d8565b61180090600a6124eb565b91505b808261180f868b6125b9565b61181991906125b9565b6118239190612485565b98975050505050505050565b6118376119af565b6001600160a01b03811661189c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106ae565b6118a581611f63565b50565b6118b06119af565b46600114156119275760405162461bcd60e51b815260206004820152603760248201527f4552524f523a53544b2d3031303a4449505f414444524553535f4348414e474560448201527f5f4e4f545f414c4c4f5745445f4f4e5f4d41494e4e455400000000000000000060648201526084016106ae565b6001600160a01b03811661198d5760405162461bcd60e51b815260206004820152602760248201527f4552524f523a53544b2d3031313a4449505f434f4e54524143545f414444524560448201526653535f5a45524f60c81b60648201526084016106ae565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146114115760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106ae565b60018201546000908152600a602090815260408083206002860154845290915281208054839290611a3b90849061246d565b909155505060018201546000908152600b602052604081208054839290611a6390849061246d565b9250508190555080600c6000828254611a7c919061246d565b9250508190555080826003016000828254611a97919061246d565b90915550504260059092019190915550565b600154600480546040516323b872dd60e01b81526001600160a01b03868116938201939093529082166024820152604481018490529116906323b872dd906064015b602060405180830381600087803b158015611b0557600080fd5b505af1158015611b19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b3d919061210c565b505050565b600046831415611be0576000611b5783611fb3565b905084816001600160a01b0316631551100f6040518163ffffffff1660e01b815260040160206040518083038186803b158015611b9357600080fd5b505afa158015611ba7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bcb9190612144565b14611bda5760009150506106b7565b50611c32565b8282604051602001611c0e92919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b604051602081830303815290604052805190602001208414611c32575060006106b7565b5060019392505050565b600083815260086020908152604080832085845290915290206003810154611c68578281554260038201555b6002826003811115611c8a57634e487b7160e01b600052602160045260246000fd5b148015611c9957506002810154155b15611ca5574260028201555b60018082018054849260ff1990911690836003811115611cd557634e487b7160e01b600052602160045260246000fd5b021790555042600490910155505050565b8160030154811115611d605760405162461bcd60e51b815260206004820152603760248201527f4552524f523a53544b2d3039303a5749544844524157414c5f414d4f554e545f60448201527f455843454544535f5354414b494e475f42414c414e434500000000000000000060648201526084016106ae565b60018201546000908152600a602090815260408083206002860154845290915281208054839290611d929084906125d8565b909155505060018201546000908152600b602052604081208054839290611dba9084906125d8565b9250508190555080600c6000828254611dd391906125d8565b9250508190555080826003016000828254611a9791906125d8565b6004546001600160a01b03163014611e9a57600154600480546040516323b872dd60e01b81526001600160a01b0391821692810192909252848116602483015260448201849052909116906323b872dd90606401602060405180830381600087803b158015611e5c57600080fd5b505af1158015611e70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e94919061210c565b50610538565b60015460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb90604401611aeb565b600081815260076020526040812060030154611f3f5760405162461bcd60e51b815260206004820152602560248201527f4552524f523a53544b2d3130303a494e5354414e43455f4e4f545f5245474953604482015264151154915160da1b60648201526084016106ae565b600082815260076020526040902060020154610853906001600160a01b0316611fb3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604051631c2d8fb360e31b81526e496e7374616e63655365727669636560881b600482015260009082906001600160a01b0382169063e16c7d989060240160206040518083038186803b15801561200957600080fd5b505afa15801561201d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b791906120f0565b600082601f830112612051578081fd5b815167ffffffffffffffff81111561206b5761206b612605565b602061207f601f8301601f1916820161243c565b8281528582848701011115612092578384fd5b835b838110156120af578581018301518282018401528201612094565b838111156120bf57848385840101525b5095945050505050565b80516110f881612630565b6000602082840312156120e5578081fd5b81356106b78161261b565b600060208284031215612101578081fd5b81516106b78161261b565b60006020828403121561211d578081fd5b815180151581146106b7578182fd5b60006020828403121561213d578081fd5b5035919050565b600060208284031215612155578081fd5b5051919050565b6000806040838503121561216e578081fd5b50508035926020909101359150565b600080600060608486031215612191578081fd5b833592506020840135915060408401356121aa8161261b565b809150509250925092565b6000806000606084860312156121c9578283fd5b833592506020840135915060408401356121aa81612630565b6000806000606084860312156121f6578283fd5b505081359360208301359350604090920135919050565b60006020828403121561221e578081fd5b815167ffffffffffffffff80821115612235578283fd5b818401915061014080838703121561224b578384fd5b6122548161243c565b905082518152602083015160208201526040830151604082015261227a606084016120c9565b6060820152608083015182811115612290578485fd5b61229c87828601612041565b60808301525060a0838101519082015260c0808401519082015260e0808401519082015261010080840151908201526101209283015192810192909252509392505050565b600060c082840312156122f2578081fd5b6122fc60c061243c565b82356123078161261b565b808252506020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a08201528091505092915050565b60008060408385031215612359578182fd5b82359150602083013561236b8161261b565b809150509250929050565b6000806000806080858703121561238b578182fd5b84359350602085013561239d8161261b565b93969395505050506040820135916060013590565b6000806040838503121561216e578182fd5b6000602082840312156123d5578081fd5b815160ff811681146106b7578182fd5b81518152602082015160a08201906004811061241157634e487b7160e01b600052602160045260246000fd5b8060208401525060408301516040830152606083015160608301526080830151608083015292915050565b604051601f8201601f1916810167ffffffffffffffff8111828210171561246557612465612605565b604052919050565b60008219821115612480576124806125ef565b500190565b6000826124a057634e487b7160e01b81526012600452602481fd5b500490565b80825b60018086116124b757506124e2565b8187048211156124c9576124c96125ef565b808616156124d657918102915b9490941c9380026124a8565b94509492505050565b60006106b76000198484600082612504575060016106b7565b81612511575060006106b7565b816001811461252757600281146125315761255e565b60019150506106b7565b60ff841115612542576125426125ef565b6001841b915084821115612558576125586125ef565b506106b7565b5060208310610133831016604e8410600b8410161715612591575081810a8381111561258c5761258c6125ef565b6106b7565b61259e84848460016124a5565b8086048211156125b0576125b06125ef565b02949350505050565b60008160001904831182151516156125d3576125d36125ef565b500290565b6000828210156125ea576125ea6125ef565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146118a557600080fd5b600481106118a557600080fdfea2646970667358221220412180b3ac6d5627c419de13d7a98cea30e69f3fdb4a926b0fa0847703605f8964736f6c63430008020033";

type GifStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GifStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GifStaking__factory extends ContractFactory {
  constructor(...args: GifStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GifStaking> {
    return super.deploy(overrides || {}) as Promise<GifStaking>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GifStaking {
    return super.attach(address) as GifStaking;
  }
  override connect(signer: Signer): GifStaking__factory {
    return super.connect(signer) as GifStaking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GifStakingInterface {
    return new utils.Interface(_abi) as GifStakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GifStaking {
    return new Contract(address, _abi, signerOrProvider) as GifStaking;
  }
}
