/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { GifStaking, GifStakingInterface } from "../GifStaking";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DIP_CONTRACT_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DIP_DECIMALS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DIP_TO_TOKEN_PARITY_LEVEL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DIP_TO_TOKEN_PARITY_LEVEL_DECIMALS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAINNET_ID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ONE_YEAR_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REWARD_100_PERCENTAGE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REWARD_MAX_PERCENTAGE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bundles",
    outputs: [
      {
        internalType: "uint256",
        name: "numberOfBundles",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "calculateRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "rewardAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "staker",
            type: "address",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "instanceId",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "bundleId",
                type: "uint256",
              },
            ],
            internalType: "struct GifStaking.BundleKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct GifStaking.StakeInfo",
        name: "stakeInfo",
        type: "tuple",
      },
    ],
    name: "calculateRewardsIncrement",
    outputs: [
      {
        internalType: "uint256",
        name: "rewardsAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "dipAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "calculateTokenAmountFromStaking",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
    ],
    name: "getBundleInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes32",
                name: "instanceId",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "bundleId",
                type: "uint256",
              },
            ],
            internalType: "struct GifStaking.BundleKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "enum IBundle.BundleState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "closedSince",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct GifStaking.BundleInfo",
        name: "info",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
    ],
    name: "getBundleKey",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "instanceId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "bundleId",
            type: "uint256",
          },
        ],
        internalType: "struct GifStaking.BundleKey",
        name: "key",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
    ],
    name: "getBundleStakes",
    outputs: [
      {
        internalType: "uint256",
        name: "stakedDipAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDip",
    outputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "dip",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "getDipStakingRate",
    outputs: [
      {
        internalType: "uint256",
        name: "stakingRate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDipToTokenParityLevel",
    outputs: [
      {
        internalType: "uint256",
        name: "parityLevel",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
    ],
    name: "getInstanceId",
    outputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
    ],
    name: "getInstanceInfo",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "registry",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
        ],
        internalType: "struct GifStaking.InstanceInfo",
        name: "info",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOneYearDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "yearDuration",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getReward100PercentLevel",
    outputs: [
      {
        internalType: "uint256",
        name: "reward100PercentLevel",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "getStakeInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "staker",
            type: "address",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "instanceId",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "bundleId",
                type: "uint256",
              },
            ],
            internalType: "struct GifStaking.BundleKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct GifStaking.StakeInfo",
        name: "stakeInfo",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStakingWallet",
    outputs: [
      {
        internalType: "address",
        name: "instanceWallet",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "getSupportedCapitalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "captialCap",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "instances",
    outputs: [
      {
        internalType: "uint256",
        name: "numberOfInstances",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "registry",
        type: "address",
      },
    ],
    name: "registerGifInstance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dipTokenAddress",
        type: "address",
      },
    ],
    name: "setDipContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenDecimals",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakingRate",
        type: "uint256",
      },
    ],
    name: "setDipStakingRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rewardPercentage",
        type: "uint256",
      },
    ],
    name: "setRewardPercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakes",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "enum IBundle.BundleState",
        name: "state",
        type: "uint8",
      },
    ],
    name: "updateBundleState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
    ],
    name: "updateBundleState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a33610053565b600180546001600160a01b031990811673c719d010b63e5bbf2c0551872cd5316ed26acd831790915560058054909116301790556100a3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b612afb80620000b36000396000f3fe608060405234801561001057600080fd5b506004361061025d5760003560e01c80636f9a9db911610146578063ad09c7ce116100c3578063b86faa0611610087578063b86faa0614610558578063c79606f01461056b578063e8a9650a14610366578063f2fde38b14610573578063fddec1c314610586578063fe4071d4146105a15761025d565b8063ad09c7ce146104d5578063ad6b6b01146104dd578063b3fc986e1461052c578063b54ded6e1461053d578063b680a4f31461054e5761025d565b80638fee64071161010a5780638fee64071461047c578063900ebd931461048f57806398549cd0146104995780639dfb5438146104ac578063ab617365146104b55761025d565b80636f9a9db914610416578063715018a6146104295780637dbe07dc146104315780638da5cb5b146104445780638ea13f22146104695761025d565b80632daedd52116101df5780634e8f0ea0116101a35780634e8f0ea0146103b757806354ad7acb146103ca5780635ba30bae146103d25780635c334e8f146103e557806361e49158146103f8578063631e136c1461040b5761025d565b80632daedd521461036e57806333c128e6146103815780634495c42a1461039457806348a887061461039c5780634d2ace66146103af5761025d565b80630c4cd422116102265780630c4cd422146102cb5780630cd82abd1461032b5780630d1437001461034b57806318442e631461035e57806319787fcc146103665761025d565b8062e9da8314610262578063040cf020146102885780630556592d1461029d578063081ff95c146102a557806309653674146102b8575b600080fd5b61027561027036600461270a565b6105b4565b6040519081526020015b60405180910390f35b61029b610296366004612569565b6105de565b005b6102756105ef565b6102756102b336600461258a565b6105fe565b61029b6102c6366004612539565b6106bc565b6102de6102d936600461258a565b610739565b6040805182516001600160a01b03168152602080840151805182840152015181830152908201516060808301919091528201516080808301919091529091015160a082015260c00161027f565b61033e610339366004612569565b61081b565b60405161027f919061282e565b61029b6103593660046125c2565b6109c5565b600454610275565b610275601281565b61029b61037c36600461260b565b610b61565b61029b61038f36600461258a565b610d6f565b610275610f71565b6102756103aa3660046127fb565b610f84565b600354610275565b6102756103c5366004612539565b610fc6565b61027561105d565b6102756103e036600461258a565b61106b565b61029b6103f336600461260b565b6110a0565b610275610406366004612790565b611221565b6102756301e1338081565b61029b610424366004612569565b611291565b61029b6114a5565b61027561043f366004612569565b6114b9565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161027f565b610275610477366004612569565b611547565b61027561048a366004612539565b611553565b610275620f424081565b61029b6104a73660046127bf565b61160a565b620f4240610275565b6104c86104c3366004612539565b61184e565b60405161027f91906128ad565b600d54610275565b6104f06104eb366004612539565b611914565b60405161027f919081518152602080830151908201526040808301516001600160a01b0316908201526060918201519181019190915260800190565b6005546001600160a01b0316610451565b6001546001600160a01b0316610451565b6301e13380610275565b61027561056636600461258a565b6119f2565b610275600181565b61029b6105813660046124e1565b611a94565b61045173c719d010b63e5bbf2c0551872cd5316ed26acd8381565b61029b6105af3660046124e1565b611b0d565b6000808260800151426105c79190612a60565b90506105d7836040015182610f84565b9392505050565b6105eb82826000196110a0565b5050565b6105fb6012600a612973565b81565b60008061060b8484611221565b60008581526007602090815260408083206001600160a01b0388168452909152902054909150600180826106406012806128f5565b1061066d57826106516012806128f5565b61065b9190612a60565b61066690600a612973565b9050610690565b6106786012806128f5565b6106829084612a60565b61068d90600a612973565b91505b808261069c868b612a41565b6106a69190612a41565b6106b0919061290d565b98975050505050505050565b6106c4611c14565b6106d26003620f424061290d565b8111156107345760405162461bcd60e51b815260206004820152602560248201527f4552524f523a53544b2d3031363a5245574152445f4558454544535f4d41585f60448201526456414c554560d81b60648201526084015b60405180910390fd5b600255565b6107416123c2565b506000838152600a6020908152604080832085845282528083206001600160a01b03808616855290835292819020815160a081018352815490941684528151808301835260018201548152600282015481850152928401929092526003820154908301526004810154606083015260050154608082018190526105d75760405162461bcd60e51b815260206004820152602c60248201527f4552524f523a53544b2d3038303a4143434f554e545f574954484f55545f535460448201526b1052d25391d7d49150d3d49160a21b606482015260840161072b565b610823612418565b60008381526008602052604090206003015461088f5760405162461bcd60e51b815260206004820152602560248201527f4552524f523a53544b2d3037303a494e5354414e43455f4e4f545f5245474953604482015264151154915160da1b606482015260840161072b565b6000838152600960209081526040808320858452825291829020825161012081018452815460e08201908152600183015461010083015281526002820154928101929092526003808201546001600160a01b03811694840194909452919290916060840191600160a01b900460ff169081111561091c57634e487b7160e01b600052602160045260246000fd5b600381111561093b57634e487b7160e01b600052602160045260246000fd5b81526020016004820154815260200160058201548152602001600682015481525050905060008160a00151116109bf5760405162461bcd60e51b815260206004820152602360248201527f4552524f523a53544b2d3037313a42554e444c455f4e4f545f5245474953544560448201526214915160ea1b606482015260840161072b565b92915050565b6109cd611c14565b6000848152600860205260409020600301548490610a3b5760405162461bcd60e51b815260206004820152602560248201527f4552524f523a53544b2d3030333a494e5354414e43455f4e4f545f5245474953604482015264151154915160da1b606482015260840161072b565b600081815260086020526040902060010154461415610aa85760405162461bcd60e51b8152602060048201526024808201527f4552524f523a53544b2d3030343a494e5354414e43455f4f4e5f544849535f436044820152632420a4a760e11b606482015260840161072b565b60008411610af85760405162461bcd60e51b815260206004820152601c60248201527f4552524f523a53544b2d3033303a42554e444c455f49445f5a45524f00000000604482015260640161072b565b6001600160a01b038316610b4e5760405162461bcd60e51b815260206004820181905260248201527f4552524f523a53544b2d3033313a544f4b454e5f414444524553535f5a45524f604482015260640161072b565b610b5a85858585611c6e565b5050505050565b60008111610bbb5760405162461bcd60e51b815260206004820152602160248201527f4552524f523a53544b2d3034303a5354414b494e475f414d4f554e545f5a45526044820152604f60f81b606482015260840161072b565b6000610bc7848461081b565b9050600081606001516003811115610bef57634e487b7160e01b600052602160045260246000fd5b1480610c1e5750600181606001516003811115610c1c57634e487b7160e01b600052602160045260246000fd5b145b610c785760405162461bcd60e51b815260206004820152602560248201527f4552524f523a53544b2d3034313a42554e444c455f434c4f5345445f4f525f42604482015264155493915160da1b606482015260840161072b565b6000848152600a6020908152604080832086845282528083203380855292529091206004810154610ce45780546001600160a01b0319166001600160a01b0383161781556040805180820190915286815260200185905260018101869055600281018590554260048201555b6040805160a08101825282546001600160a01b03168152815180830183526001840154815260028401546020828101919091528201526003830154918101919091526004820154606082015260058201546080820152600090610d46906105b4565b610d5090866128f5565b9050610d5c8282611e3b565b610d668386611edb565b50505050505050565b610d77611c14565b60008381526008602052604090206003015415610de85760405162461bcd60e51b815260206004820152602960248201527f4552524f523a53544b2d3032303a494e5354414e43455f414c52454144595f526044820152681151d254d51154915160ba1b606482015260840161072b565b60008211610e385760405162461bcd60e51b815260206004820152601b60248201527f4552524f523a53544b2d3032313a434841494e5f49445f5a45524f0000000000604482015260640161072b565b6001600160a01b038116610ea35760405162461bcd60e51b815260206004820152602c60248201527f4552524f523a53544b2d3032323a52454749535452595f434f4e54524143545f60448201526b414444524553535f5a45524f60a01b606482015260840161072b565b6000610eb0848484611f71565b905080610eff5760405162461bcd60e51b815260206004820152601e60248201527f4552524f523a53544b2d3032333a494e5354414e43455f494e56414c49440000604482015260640161072b565b5060008381526008602052604081208481556001808201949094556002810180546001600160a01b0319166001600160a01b0394909416939093179092554260039283015581549283018255527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0155565b6000610f7f6012600a612973565b905090565b6000806301e1338083600254610f9a9190612a41565b610fa4919061290d565b9050620f4240610fb48286612a41565b610fbe919061290d565b949350505050565b60035460009082106110295760405162461bcd60e51b815260206004820152602660248201527f4552524f523a53544b2d3036313a494e5354414e43455f494e4445585f544f4f6044820152655f4c4152474560d01b606482015260840161072b565b6003828154811061104a57634e487b7160e01b600052603260045260246000fd5b906000526020600020015490505b919050565b6105fb6003620f424061290d565b60008061107785611914565b9050600061108586866114b9565b9050611096818360200151866105fe565b9695505050505050565b600081116110fc5760405162461bcd60e51b8152602060048201526024808201527f4552524f523a53544b2d3035303a5749544844524157414c5f414d4f554e545f6044820152635a45524f60e01b606482015260840161072b565b6000838152600a60209081526040808320858452825280832033808552925290912060058101546111845760405162461bcd60e51b815260206004820152602c60248201527f4552524f523a53544b2d3035313a4143434f554e545f574954484f55545f535460448201526b1052d25391d7d49150d3d49160a21b606482015260840161072b565b6040805160a08101825282546001600160a01b031681528151808301835260018401548152600284015460208281019190915282015260038301549181019190915260048201546060820152600582015460808201526111e3906105b4565b8160030160008282546111f691906128f5565b909155505060001983141561120d57806003015492505b611217818461206b565b610b5a8284612173565b60008281526006602090815260408083206001600160a01b0385168452909152902054806109bf5760405162461bcd60e51b815260206004820152601f60248201527f4552524f523a53544b2d3036303a5354414b494e475f524154455f5a45524f00604482015260640161072b565b611299611c14565b60008281526008602052604090206003015482906113075760405162461bcd60e51b815260206004820152602560248201527f4552524f523a53544b2d3030313a494e5354414e43455f4e4f545f5245474953604482015264151154915160da1b606482015260840161072b565b60008181526008602052604090206001015446146113785760405162461bcd60e51b815260206004820152602860248201527f4552524f523a53544b2d3030323a494e5354414e43455f4e4f545f4f4e5f544860448201526724a9afa1a420a4a760c11b606482015260840161072b565b600061138384612254565b604051632d0821b760e01b8152600481018590529091506000906001600160a01b03831690632d0821b79060240160006040518083038186803b1580156113c957600080fd5b505afa1580156113dd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526114059190810190612636565b90506000826001600160a01b031663038696bb83602001516040518263ffffffff1660e01b815260040161143b91815260200190565b60206040518083038186803b15801561145357600080fd5b505afa158015611467573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061148b91906124fd565b905061149d8686838560600151611c6e565b505050505050565b6114ad611c14565b6114b760006122e4565b565b6000806114c6848461081b565b905060008160a00151116115285760405162461bcd60e51b815260206004820152602360248201527f4552524f523a53544b2d3038323a42554e444c455f4e4f545f5245474953544560448201526214915160ea1b606482015260840161072b565b50506000918252600b6020908152604080842092845291905290205490565b60006105d783836114b9565b600081815260086020908152604080832081516080810183528154815260018201549381019390935260028101546001600160a01b03169183019190915260030154606082018190526115f65760405162461bcd60e51b815260206004820152602560248201527f4552524f523a53544b2d3038333a494e5354414e43455f4e4f545f5245474953604482015264151154915160da1b606482015260840161072b565b50506000908152600c602052604090205490565b611612611c14565b600084116116625760405162461bcd60e51b815260206004820152601b60248201527f4552524f523a53544b2d3031323a434841494e5f49445f5a45524f0000000000604482015260640161072b565b6001600160a01b0383166116b85760405162461bcd60e51b815260206004820181905260248201527f4552524f523a53544b2d3031333a544f4b454e5f414444524553535f5a45524f604482015260640161072b565b600082116117125760405162461bcd60e51b815260206004820152602160248201527f4552524f523a53544b2d3031343a544f4b454e5f444543494d414c535f5a45526044820152604f60f81b606482015260840161072b565b600081116117625760405162461bcd60e51b815260206004820152601f60248201527f4552524f523a53544b2d3031353a5354414b494e475f524154455f5a45524f00604482015260640161072b565b60008481526006602090815260408083206001600160a01b03871680855290835281842085905587845260078352818420908452909152902082905546841415611848576000839050806001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156117e457600080fd5b505afa1580156117f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061181c919061280d565b60008681526007602090815260408083206001600160a01b0389168452909152902060ff919091169055505b50505050565b604080518082019091526000808252602082015260045482106118bf5760405162461bcd60e51b8152602060048201526024808201527f4552524f523a53544b2d3036333a42554e444c455f494e4445585f544f4f5f4c6044820152634152474560e01b606482015260840161072b565b600482815481106118e057634e487b7160e01b600052603260045260246000fd5b9060005260206000209060020201604051806040016040529081600082015481526020016001820154815250509050919050565b6040805160808101825260008082526020820181905291810182905260608101919091526000828152600860205260409020600301546119a45760405162461bcd60e51b815260206004820152602560248201527f4552524f523a53544b2d3036323a494e5354414e43455f4e4f545f5245474953604482015264151154915160da1b606482015260840161072b565b5060009081526008602090815260409182902082516080810184528154815260018201549281019290925260028101546001600160a01b031692820192909252600390910154606082015290565b6000806119ff858561081b565b905060008160a0015111611a615760405162461bcd60e51b815260206004820152602360248201527f4552524f523a53544b2d3038313a42554e444c455f4e4f545f5245474953544560448201526214915160ea1b606482015260840161072b565b50506000928352600a602090815260408085209385529281528284206001600160a01b0390921684525290206003015490565b611a9c611c14565b6001600160a01b038116611b015760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161072b565b611b0a816122e4565b50565b611b15611c14565b6001461415611b8c5760405162461bcd60e51b815260206004820152603760248201527f4552524f523a53544b2d3031303a4449505f414444524553535f4348414e474560448201527f5f4e4f545f414c4c4f5745445f4f4e5f4d41494e4e4554000000000000000000606482015260840161072b565b6001600160a01b038116611bf25760405162461bcd60e51b815260206004820152602760248201527f4552524f523a53544b2d3031313a4449505f434f4e54524143545f414444524560448201526653535f5a45524f60c81b606482015260840161072b565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146114b75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161072b565b600084815260086020526040902060030154611cda5760405162461bcd60e51b815260206004820152602560248201527f4552524f523a53544b2d3039303a494e5354414e43455f4e4f545f5245474953604482015264151154915160da1b606482015260840161072b565b600084815260096020908152604080832086845290915290206005810154611db85760408051808201825286815260209081018690528683556001808401878155600089815260089093529282208101546002808601919091556003850180546001600160a01b0389166001600160a01b0319909116179055426005860155600480549283018155909252835491027f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b81019190915590547f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c909101555b6002826003811115611dda57634e487b7160e01b600052602160045260246000fd5b148015611de957506004810154155b15611df5574260048201555b818160030160146101000a81548160ff02191690836003811115611e2957634e487b7160e01b600052602160045260246000fd5b02179055504260069091015550505050565b60018201546000908152600b602090815260408083206002860154845290915281208054839290611e6d9084906128f5565b909155505060018201546000908152600c602052604081208054839290611e959084906128f5565b9250508190555080600d6000828254611eae91906128f5565b9250508190555080826003016000828254611ec991906128f5565b90915550504260059092019190915550565b6001546005546040516323b872dd60e01b81526001600160a01b0385811660048301529182166024820152604481018490529116906323b872dd906064015b602060405180830381600087803b158015611f3457600080fd5b505af1158015611f48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f6c9190612519565b505050565b60004683141561200f576000611f8683612334565b905084816001600160a01b0316631551100f6040518163ffffffff1660e01b815260040160206040518083038186803b158015611fc257600080fd5b505afa158015611fd6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ffa9190612551565b146120095760009150506105d7565b50612061565b828260405160200161203d92919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b604051602081830303815290604052805190602001208414612061575060006105d7565b5060019392505050565b81600301548111156120e55760405162461bcd60e51b815260206004820152603760248201527f4552524f523a53544b2d3130303a5749544844524157414c5f414d4f554e545f60448201527f455843454544535f5354414b494e475f42414c414e4345000000000000000000606482015260840161072b565b60018201546000908152600b602090815260408083206002860154845290915281208054839290612117908490612a60565b909155505060018201546000908152600c60205260408120805483929061213f908490612a60565b9250508190555080600d60008282546121589190612a60565b9250508190555080826003016000828254611ec99190612a60565b6005546001600160a01b0316301461221b576001546005546040516323b872dd60e01b81526001600160a01b0391821660048201528482166024820152604481018490529116906323b872dd90606401602060405180830381600087803b1580156121dd57600080fd5b505af11580156121f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122159190612519565b506105eb565b60015460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb90604401611f1a565b6000818152600860205260408120600301546122c05760405162461bcd60e51b815260206004820152602560248201527f4552524f523a53544b2d3131303a494e5354414e43455f4e4f545f5245474953604482015264151154915160da1b606482015260840161072b565b6000828152600860205260409020600201546109bf906001600160a01b0316612334565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604051631c2d8fb360e31b81526e496e7374616e63655365727669636560881b600482015260009082906001600160a01b0382169063e16c7d989060240160206040518083038186803b15801561238a57600080fd5b505afa15801561239e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d791906124fd565b6040518060a0016040528060006001600160a01b031681526020016123fd604051806040016040528060008019168152602001600081525090565b81526020016000815260200160008152602001600081525090565b6040805161012081018252600060e0820181815261010083018290528252602082018190529181018290529060608201906123fd565b600082601f83011261245e578081fd5b815167ffffffffffffffff81111561247857612478612a8d565b602061248c601f8301601f191682016128c4565b828152858284870101111561249f578384fd5b835b838110156124bc5785810183015182820184015282016124a1565b838111156124cc57848385840101525b5095945050505050565b805161105881612ab8565b6000602082840312156124f2578081fd5b81356105d781612aa3565b60006020828403121561250e578081fd5b81516105d781612aa3565b60006020828403121561252a578081fd5b815180151581146105d7578182fd5b60006020828403121561254a578081fd5b5035919050565b600060208284031215612562578081fd5b5051919050565b6000806040838503121561257b578081fd5b50508035926020909101359150565b60008060006060848603121561259e578081fd5b833592506020840135915060408401356125b781612aa3565b809150509250925092565b600080600080608085870312156125d7578081fd5b843593506020850135925060408501356125f081612aa3565b9150606085013561260081612ab8565b939692955090935050565b60008060006060848603121561261f578081fd5b505081359360208301359350604090920135919050565b600060208284031215612647578081fd5b815167ffffffffffffffff8082111561265e578283fd5b8184019150610140808387031215612674578384fd5b61267d816128c4565b90508251815260208301516020820152604083015160408201526126a3606084016124d6565b60608201526080830151828111156126b9578485fd5b6126c58782860161244e565b60808301525060a0838101519082015260c0808401519082015260e0808401519082015261010080840151908201526101209283015192810192909252509392505050565b600081830360c081121561271c578182fd5b61272660a06128c4565b833561273181612aa3565b81526040601f1983011215612744578283fd5b61274e60406128c4565b91506020840135825260408401356020830152816020820152606084013560408201526080840135606082015260a08401356080820152809250505092915050565b600080604083850312156127a2578182fd5b8235915060208301356127b481612aa3565b809150509250929050565b600080600080608085870312156127d4578182fd5b8435935060208501356127e681612aa3565b93969395505050506040820135916060013590565b6000806040838503121561257b578182fd5b60006020828403121561281e578081fd5b815160ff811681146105d7578182fd5b8151805182526020908101519082015261010081016020830151604083015260018060a01b03604084015116606083015260608301516004811061288257634e487b7160e01b600052602160045260246000fd5b80608084015250608083015160a083015260a083015160c083015260c083015160e083015292915050565b8151815260208083015190820152604081016109bf565b604051601f8201601f1916810167ffffffffffffffff811182821017156128ed576128ed612a8d565b604052919050565b6000821982111561290857612908612a77565b500190565b60008261292857634e487b7160e01b81526012600452602481fd5b500490565b80825b600180861161293f575061296a565b81870482111561295157612951612a77565b8086161561295e57918102915b9490941c938002612930565b94509492505050565b60006105d7600019848460008261298c575060016105d7565b81612999575060006105d7565b81600181146129af57600281146129b9576129e6565b60019150506105d7565b60ff8411156129ca576129ca612a77565b6001841b9150848211156129e0576129e0612a77565b506105d7565b5060208310610133831016604e8410600b8410161715612a19575081810a83811115612a1457612a14612a77565b6105d7565b612a26848484600161292d565b808604821115612a3857612a38612a77565b02949350505050565b6000816000190483118215151615612a5b57612a5b612a77565b500290565b600082821015612a7257612a72612a77565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114611b0a57600080fd5b60048110611b0a57600080fdfea264697066735822122022c9265e4e6d4dfde8971db695d2ce5da296d0dcb67ef4cc7487033417cdc18c64736f6c63430008020033";

type GifStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GifStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GifStaking__factory extends ContractFactory {
  constructor(...args: GifStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GifStaking> {
    return super.deploy(overrides || {}) as Promise<GifStaking>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GifStaking {
    return super.attach(address) as GifStaking;
  }
  override connect(signer: Signer): GifStaking__factory {
    return super.connect(signer) as GifStaking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GifStakingInterface {
    return new utils.Interface(_abi) as GifStakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GifStaking {
    return new Contract(address, _abi, signerOrProvider) as GifStaking;
  }
}
