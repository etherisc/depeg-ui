/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { GifStaking, GifStakingInterface } from "../GifStaking";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DIP_CONTRACT_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DIP_DECIMALS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DIP_TO_TOKEN_PARITY_LEVEL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DIP_TO_TOKEN_PARITY_LEVEL_DECIMALS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAINNET_ID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ONE_YEAR_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REWARD_100_PERCENTAGE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REWARD_MAX_PERCENTAGE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOKEN_MAX_DECIMALS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bundles",
    outputs: [
      {
        internalType: "uint256",
        name: "numberOfBundles",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "targetTokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "targetAmount",
        type: "uint256",
      },
    ],
    name: "calculateRequiredStakingAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "stakingAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "calculateRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "rewardAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "staker",
            type: "address",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "instanceId",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "bundleId",
                type: "uint256",
              },
            ],
            internalType: "struct GifStaking.BundleKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct GifStaking.StakeInfo",
        name: "stakeInfo",
        type: "tuple",
      },
    ],
    name: "calculateRewardsIncrement",
    outputs: [
      {
        internalType: "uint256",
        name: "rewardsAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "dipAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "calculateTokenAmountFromStaking",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
    ],
    name: "getBundleInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes32",
                name: "instanceId",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "bundleId",
                type: "uint256",
              },
            ],
            internalType: "struct GifStaking.BundleKey",
            name: "key",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "chainId",
                type: "uint256",
              },
            ],
            internalType: "struct GifStaking.TokenKey",
            name: "tokenKey",
            type: "tuple",
          },
          {
            internalType: "string",
            name: "tokenSymbol",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "tokenDecimals",
            type: "uint8",
          },
          {
            internalType: "enum IBundle.BundleState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "closedSince",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct GifStaking.BundleInfo",
        name: "info",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
    ],
    name: "getBundleKey",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "instanceId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "bundleId",
            type: "uint256",
          },
        ],
        internalType: "struct GifStaking.BundleKey",
        name: "key",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
    ],
    name: "getBundleStakes",
    outputs: [
      {
        internalType: "uint256",
        name: "stakedDipAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDip",
    outputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "dip",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "getDipStakingRate",
    outputs: [
      {
        internalType: "uint256",
        name: "stakingRate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDipToTokenParityLevel",
    outputs: [
      {
        internalType: "uint256",
        name: "parityLevel",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
    ],
    name: "getInstanceId",
    outputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
    ],
    name: "getInstanceInfo",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            internalType: "enum GifStaking.InstanceState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "displayName",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "registry",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct GifStaking.InstanceInfo",
        name: "info",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOneYearDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "yearDuration",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getReward100PercentLevel",
    outputs: [
      {
        internalType: "uint256",
        name: "reward100PercentLevel",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "getStakeInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "staker",
            type: "address",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "instanceId",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "bundleId",
                type: "uint256",
              },
            ],
            internalType: "struct GifStaking.BundleKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct GifStaking.StakeInfo",
        name: "stakeInfo",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStakingWallet",
    outputs: [
      {
        internalType: "address",
        name: "instanceWallet",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "getSupportedCapitalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "captialCap",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "getTokenInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "chainId",
                type: "uint256",
              },
            ],
            internalType: "struct GifStaking.TokenKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "enum GifStaking.TokenState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
        ],
        internalType: "struct GifStaking.TokenInfo",
        name: "tokenInfo",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    name: "getTokenInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "chainId",
                type: "uint256",
              },
            ],
            internalType: "struct GifStaking.TokenKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "enum GifStaking.TokenState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
        ],
        internalType: "struct GifStaking.TokenInfo",
        name: "tokenInfo",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
    ],
    name: "getTokenKey",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
        ],
        internalType: "struct GifStaking.TokenKey",
        name: "tokenKey",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "instances",
    outputs: [
      {
        internalType: "uint256",
        name: "numberOfInstances",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
    ],
    name: "isRegisteredBundle",
    outputs: [
      {
        internalType: "bool",
        name: "isRegistered",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "registry",
        type: "address",
      },
    ],
    name: "registerGifInstance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "registerToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "registerToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dipTokenAddress",
        type: "address",
      },
    ],
    name: "setDipContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakingRate",
        type: "uint256",
      },
    ],
    name: "setDipStakingRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rewardPercentage",
        type: "uint256",
      },
    ],
    name: "setRewardPercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakes",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokens",
    outputs: [
      {
        internalType: "uint256",
        name: "numberOfTokens",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "enum IBundle.BundleState",
        name: "state",
        type: "uint8",
      },
    ],
    name: "updateBundleState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
    ],
    name: "updateBundleState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506200001d3362000057565b600880546001600160a01b031990811673c719d010b63e5bbf2c0551872cd5316ed26acd8317909155600e805490911630179055620000a7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b613ae380620000b76000396000f3fe608060405234801561001057600080fd5b50600436106102f05760003560e01c8063631e136c1161019d578063ad6b6b01116100e9578063b8f6a04a116100a2578063e8a9650a1161007c578063e8a9650a1461044c578063f2fde38b146106ab578063fddec1c3146106be578063fe4071d4146106d9576102f0565b8063b8f6a04a1461044c578063bbd7d20914610690578063c79606f0146106a3576102f0565b8063ad6b6b0114610611578063b37c960614610631578063b3fc986e14610651578063b54ded6e14610662578063b680a4f314610673578063b86faa061461067d576102f0565b80638ea13f22116101565780639d63848a116101305780639d63848a146105d85780639dfb5438146105e0578063ab617365146105e9578063ad09c7ce14610609576102f0565b80638ea13f22146105a85780638fee6407146105bb578063900ebd93146105ce576102f0565b8063631e136c146105375780636f9a9db914610542578063715018a614610555578063724140d81461055d5780637dbe07dc146105705780638da5cb5b14610583576102f0565b80631f69565f1161025c5780634d2ace661161021557806359447e4b116101ef57806359447e4b146104eb5780635ba30bae146104fe5780635c334e8f1461051157806361e4915814610524576102f0565b80634d2ace66146104c85780634e8f0ea0146104d057806354ad7acb146104e3576102f0565b80631f69565f146104545780632daedd521461047457806333c128e61461048757806341c4a5e81461049a5780634495c42a146104ad57806348a88706146104b5576102f0565b80630c4cd422116102ae5780630c4cd422146103715780630cd82abd146103d15780630d143700146103f15780630dd33fc01461040457806318442e631461044457806319787fcc1461044c576102f0565b8062e9da83146102f5578063040cf0201461031b5780630556592d14610330578063081ff95c14610338578063096536741461034b57806309824a801461035e575b600080fd5b6103086103033660046134cf565b6106ec565b6040519081526020015b60405180910390f35b61032e6103293660046132e8565b610716565b005b610308610727565b610308610346366004613309565b610736565b61032e6103593660046132b8565b6107fa565b61032e61036c36600461315f565b610877565b61038461037f366004613309565b610974565b6040805182516001600160a01b03168152602080840151805182840152015181830152908201516060808301919091528201516080808301919091529091015160a082015260c001610312565b6103e46103df3660046132e8565b610a54565b6040516103129190613610565b61032e6103ff366004613341565b610ca1565b6104346104123660046132e8565b6000918252600360209081526040808420928452919052902060070154151590565b6040519015158152602001610312565b600c54610308565b610308601281565b61046761046236600461315f565b610e3d565b604051610312919061373c565b61032e61048236600461338a565b610e88565b61032e610495366004613309565b611096565b6103086104a8366004613584565b61129e565b610308611331565b6103086104c33660046132e8565b611344565b600a54610308565b6103086104de3660046132b8565b611386565b61030861141c565b61032e6104f93660046131c2565b61142a565b61030861050c366004613309565b611527565b61032e61051f36600461338a565b611552565b610308610532366004613555565b6116d2565b6103086301e1338081565b61032e6105503660046132e8565b611742565b61032e611956565b61032e61056b3660046131f6565b61196a565b61030861057e3660046132e8565b6119d9565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610312565b6103086105b63660046132e8565b611a67565b6103086105c93660046132b8565b611a73565b610308620f424081565b600b54610308565b620f4240610308565b6105fc6105f73660046132b8565b611c1a565b60405161031291906136ad565b600d54610308565b61062461061f3660046132b8565b611ce0565b60405161031291906136c4565b61064461063f3660046132b8565b611ece565b60405161031291906137b1565b600e546001600160a01b0316610590565b6008546001600160a01b0316610590565b6301e13380610308565b61030861068b366004613309565b611f98565b61046761069e366004613197565b61203a565b610308600181565b61032e6106b936600461315f565b612231565b61059073c719d010b63e5bbf2c0551872cd5316ed26acd8381565b61032e6106e736600461315f565b6122aa565b6000808260800151426106ff91906139a8565b905061070f836040015182611344565b9392505050565b6107238282600019611552565b5050565b6107336012600a6138a8565b81565b60008061074384846116d2565b6001600160a01b0384166000908152600460208181526040808420898552909152909120015490915060ff166001808261077e60128061382a565b106107ab578261078f60128061382a565b61079991906139a8565b6107a490600a6138a8565b90506107ce565b6107b660128061382a565b6107c090846139a8565b6107cb90600a6138a8565b91505b80826107da868b613989565b6107e49190613989565b6107ee9190613842565b98975050505050505050565b6108026123b1565b6108106003620f4240613842565b8111156108725760405162461bcd60e51b815260206004820152602560248201527f4552524f523a53544b2d3031363a5245574152445f4558454544535f4d41585f60448201526456414c554560d81b60648201526084015b60405180910390fd5b600955565b61087f6123b1565b60008190506107238246836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156108c257600080fd5b505afa1580156108d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fa91906135bb565b846001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801561093357600080fd5b505afa158015610947573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261096f91908101906133b5565b61240b565b61097c612f3a565b50600083815260056020818152604080842086855282528084206001600160a01b03808716865290835293819020815160a081018352815490951685528151808301835260018201548152600282015481850152928501929092526003820154908401526004810154606084015201546080820181905261070f5760405162461bcd60e51b815260206004820152602c60248201527f4552524f523a53544b2d3038303a4143434f554e545f574954484f55545f535460448201526b1052d25391d7d49150d3d49160a21b6064820152608401610869565b610a5c612f90565b600083815260026020526040902060050154610ac85760405162461bcd60e51b815260206004820152602560248201527f4552524f523a53544b2d3037303a494e5354414e43455f4e4f545f5245474953604482015264151154915160da1b6064820152608401610869565b600083815260036020818152604080842086855282529283902083516101408101855281546101008201908152600183015461012083015281528451808601865260028301546001600160a01b031681529382015484840152918201929092526004820180549193840191610b3c906139ef565b80601f0160208091040260200160405190810160405280929190818152602001828054610b68906139ef565b8015610bb55780601f10610b8a57610100808354040283529160200191610bb5565b820191906000526020600020905b815481529060010190602001808311610b9857829003601f168201915b5050509183525050600582015460ff8082166020840152604090920191610100909104166003811115610bf857634e487b7160e01b600052602160045260246000fd5b6003811115610c1757634e487b7160e01b600052602160045260246000fd5b81526020016006820154815260200160078201548152602001600882015481525050905060008160c0015111610c9b5760405162461bcd60e51b815260206004820152602360248201527f4552524f523a53544b2d3037313a42554e444c455f4e4f545f5245474953544560448201526214915160ea1b6064820152608401610869565b92915050565b610ca96123b1565b6000848152600260205260409020600501548490610d175760405162461bcd60e51b815260206004820152602560248201527f4552524f523a53544b2d3030333a494e5354414e43455f4e4f545f5245474953604482015264151154915160da1b6064820152608401610869565b600081815260026020526040902060030154461415610d845760405162461bcd60e51b8152602060048201526024808201527f4552524f523a53544b2d3030343a494e5354414e43455f4f4e5f544849535f436044820152632420a4a760e11b6064820152608401610869565b60008411610dd45760405162461bcd60e51b815260206004820152601c60248201527f4552524f523a53544b2d3033303a42554e444c455f49445f5a45524f000000006044820152606401610869565b6001600160a01b038316610e2a5760405162461bcd60e51b815260206004820181905260248201527f4552524f523a53544b2d3033313a544f4b454e5f414444524553535f5a45524f6044820152606401610869565b610e36858585856126ea565b5050505050565b6040805160e081018252600060a0820181815260c0830182905282526020820181905260609282018390529181018290526080810191909152610e80824661203a565b90505b919050565b60008111610ee25760405162461bcd60e51b815260206004820152602160248201527f4552524f523a53544b2d3034303a5354414b494e475f414d4f554e545f5a45526044820152604f60f81b6064820152608401610869565b6000610eee8484610a54565b9050600081608001516003811115610f1657634e487b7160e01b600052602160045260246000fd5b1480610f455750600181608001516003811115610f4357634e487b7160e01b600052602160045260246000fd5b145b610f9f5760405162461bcd60e51b815260206004820152602560248201527f4552524f523a53544b2d3034313a42554e444c455f434c4f5345445f4f525f42604482015264155493915160da1b6064820152608401610869565b60008481526005602090815260408083208684528252808320338085529252909120600481015461100b5780546001600160a01b0319166001600160a01b0383161781556040805180820190915286815260200185905260018101869055600281018590554260048201555b6040805160a08101825282546001600160a01b0316815281518083018352600184015481526002840154602082810191909152820152600383015491810191909152600482015460608201526005820154608082015260009061106d906106ec565b611077908661382a565b905061108382826129b3565b61108d8386612a53565b50505050505050565b61109e6123b1565b6000838152600260205260409020600501541561110f5760405162461bcd60e51b815260206004820152602960248201527f4552524f523a53544b2d3032303a494e5354414e43455f414c52454144595f526044820152681151d254d51154915160ba1b6064820152608401610869565b6000821161115f5760405162461bcd60e51b815260206004820152601b60248201527f4552524f523a53544b2d3032313a434841494e5f49445f5a45524f00000000006044820152606401610869565b6001600160a01b0381166111ca5760405162461bcd60e51b815260206004820152602c60248201527f4552524f523a53544b2d3032323a52454749535452595f434f4e54524143545f60448201526b414444524553535f5a45524f60a01b6064820152608401610869565b60006111d7848484612ae9565b9050806112265760405162461bcd60e51b815260206004820152601e60248201527f4552524f523a53544b2d3032333a494e5354414e43455f494e56414c494400006044820152606401610869565b50600083815260026020526040812084815560038101939093556004830180546001600160a01b0319166001600160a01b03939093169290921790915542600590920191909155600a805460018101825591527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80155565b6000806112ab85856116d2565b90506000816112bc6012600a6138a8565b6112c69086613989565b6112d09190613842565b6001600160a01b03861660009081526004602081815260408084208b855290915290912001549091506113079060ff16600a6138b7565b6113136012600a6138a8565b61131d9083613989565b6113279190613842565b9695505050505050565b600061133f6012600a6138a8565b905090565b6000806301e133808360095461135a9190613989565b6113649190613842565b9050620f42406113748286613989565b61137e9190613842565b949350505050565b600a5460009082106113e95760405162461bcd60e51b815260206004820152602660248201527f4552524f523a53544b2d3036313a494e5354414e43455f494e4445585f544f4f6044820152655f4c4152474560d01b6064820152608401610869565b600a828154811061140a57634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050919050565b6107336003620f4240613842565b6114326123b1565b6001600160a01b03831660009081526004602090815260408083208584529091529020600501546114b05760405162461bcd60e51b815260206004820152602260248201527f4552524f523a53544b2d3031323a544f4b454e5f4e4f545f5245474953544552604482015261115160f21b6064820152608401610869565b600081116115005760405162461bcd60e51b815260206004820152601f60248201527f4552524f523a53544b2d3031353a5354414b494e475f524154455f5a45524f006044820152606401610869565b60009182526001602090815260408084206001600160a01b03909516845293905291902055565b60008061153385611ce0565b9050600061154186866119d9565b905061132781836060015186610736565b600081116115ae5760405162461bcd60e51b8152602060048201526024808201527f4552524f523a53544b2d3035303a5749544844524157414c5f414d4f554e545f6044820152635a45524f60e01b6064820152608401610869565b60008381526005602081815260408084208685528252808420338086529252909220908101546116355760405162461bcd60e51b815260206004820152602c60248201527f4552524f523a53544b2d3035313a4143434f554e545f574954484f55545f535460448201526b1052d25391d7d49150d3d49160a21b6064820152608401610869565b6040805160a08101825282546001600160a01b03168152815180830183526001840154815260028401546020828101919091528201526003830154918101919091526004820154606082015260058201546080820152611694906106ec565b8160030160008282546116a7919061382a565b90915550506000198314156116be57806003015492505b6116c88184612be3565b610e368284612ceb565b60008281526001602090815260408083206001600160a01b038516845290915290205480610c9b5760405162461bcd60e51b815260206004820152601f60248201527f4552524f523a53544b2d3036303a5354414b494e475f524154455f5a45524f006044820152606401610869565b61174a6123b1565b60008281526002602052604090206005015482906117b85760405162461bcd60e51b815260206004820152602560248201527f4552524f523a53544b2d3030313a494e5354414e43455f4e4f545f5245474953604482015264151154915160da1b6064820152608401610869565b60008181526002602052604090206003015446146118295760405162461bcd60e51b815260206004820152602860248201527f4552524f523a53544b2d3030323a494e5354414e43455f4e4f545f4f4e5f544860448201526724a9afa1a420a4a760c11b6064820152608401610869565b600061183484612dcc565b604051632d0821b760e01b8152600481018590529091506000906001600160a01b03831690632d0821b79060240160006040518083038186803b15801561187a57600080fd5b505afa15801561188e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526118b691908101906133fb565b90506000826001600160a01b031663038696bb83602001516040518263ffffffff1660e01b81526004016118ec91815260200190565b60206040518083038186803b15801561190457600080fd5b505afa158015611918573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061193c919061317b565b905061194e86868385606001516126ea565b505050505050565b61195e6123b1565b6119686000612e5c565b565b6119726123b1565b82468114156119cd5760405162461bcd60e51b815260206004820152602160248201527f4552524f523a53544b2d3030353a544f4b454e5f4f4e5f544849535f434841496044820152602760f91b6064820152608401610869565b610e368585858561240b565b6000806119e68484610a54565b905060008160c0015111611a485760405162461bcd60e51b815260206004820152602360248201527f4552524f523a53544b2d3038323a42554e444c455f4e4f545f5245474953544560448201526214915160ea1b6064820152608401610869565b5050600091825260066020908152604080842092845291905290205490565b600061070f83836119d9565b6000818152600260209081526040808320815160e08101909252805482526001810154849383019060ff166003811115611abd57634e487b7160e01b600052602160045260246000fd5b6003811115611adc57634e487b7160e01b600052602160045260246000fd5b8152602001600282018054611af0906139ef565b80601f0160208091040260200160405190810160405280929190818152602001828054611b1c906139ef565b8015611b695780601f10611b3e57610100808354040283529160200191611b69565b820191906000526020600020905b815481529060010190602001808311611b4c57829003601f168201915b50505091835250506003820154602082015260048201546001600160a01b031660408201526005820154606082015260069091015460809091015260a0810151909150611c065760405162461bcd60e51b815260206004820152602560248201527f4552524f523a53544b2d3038333a494e5354414e43455f4e4f545f5245474953604482015264151154915160da1b6064820152608401610869565b505060009081526007602052604090205490565b6040805180820190915260008082526020820152600c548210611c8b5760405162461bcd60e51b8152602060048201526024808201527f4552524f523a53544b2d3036333a42554e444c455f494e4445585f544f4f5f4c6044820152634152474560e01b6064820152608401610869565b600c8281548110611cac57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060020201604051806040016040529081600082015481526020016001820154815250509050919050565b611d2a6040805160e08101909152600080825260208201908152602001606081526020016000815260200160006001600160a01b0316815260200160008152602001600081525090565b600082815260026020526040902060050154611d965760405162461bcd60e51b815260206004820152602560248201527f4552524f523a53544b2d3036323a494e5354414e43455f4e4f545f5245474953604482015264151154915160da1b6064820152608401610869565b600082815260026020908152604091829020825160e08101909352805483526001810154909183019060ff166003811115611de157634e487b7160e01b600052602160045260246000fd5b6003811115611e0057634e487b7160e01b600052602160045260246000fd5b8152602001600282018054611e14906139ef565b80601f0160208091040260200160405190810160405280929190818152602001828054611e40906139ef565b8015611e8d5780601f10611e6257610100808354040283529160200191611e8d565b820191906000526020600020905b815481529060010190602001808311611e7057829003601f168201915b50505091835250506003820154602082015260048201546001600160a01b031660408201526005820154606082015260069091015460809091015292915050565b6040805180820190915260008082526020820152600b548210611f3d5760405162461bcd60e51b815260206004820152602160248201527f4552524f523a53544b2d3039303a544f4b454e5f4944585f544f4f5f4c4152476044820152604560f81b6064820152608401610869565b600b8281548110611f5e57634e487b7160e01b600052603260045260246000fd5b60009182526020918290206040805180820190915260029092020180546001600160a01b0316825260010154918101919091529050919050565b600080611fa58585610a54565b905060008160c00151116120075760405162461bcd60e51b815260206004820152602360248201527f4552524f523a53544b2d3038313a42554e444c455f4e4f545f5245474953544560448201526214915160ea1b6064820152608401610869565b505060009283526005602090815260408085209385529281528284206001600160a01b0390921684525290206003015490565b6040805160e081018252600060a0820181815260c083018290528252602080830182905260608385018190528301829052608083018290526001600160a01b038616825260048152838220858352905291909120600501546120e95760405162461bcd60e51b815260206004820152602260248201527f4552524f523a53544b2d3039313a544f4b454e5f4e4f545f5245474953544552604482015261115160f21b6064820152608401610869565b6001600160a01b038084166000908152600460209081526040808320868452825291829020825160e08101909352805490931660a08301908152600184015460c084015282526002808401549293929184019160ff169081111561215d57634e487b7160e01b600052602160045260246000fd5b600281111561217c57634e487b7160e01b600052602160045260246000fd5b8152602001600382018054612190906139ef565b80601f01602080910402602001604051908101604052809291908181526020018280546121bc906139ef565b80156122095780601f106121de57610100808354040283529160200191612209565b820191906000526020600020905b8154815290600101906020018083116121ec57829003601f168201915b5050509183525050600482015460ff1660208201526005909101546040909101529392505050565b6122396123b1565b6001600160a01b03811661229e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610869565b6122a781612e5c565b50565b6122b26123b1565b60014614156123295760405162461bcd60e51b815260206004820152603760248201527f4552524f523a53544b2d3031303a4449505f414444524553535f4348414e474560448201527f5f4e4f545f414c4c4f5745445f4f4e5f4d41494e4e45540000000000000000006064820152608401610869565b6001600160a01b03811661238f5760405162461bcd60e51b815260206004820152602760248201527f4552524f523a53544b2d3031313a4449505f434f4e54524143545f414444524560448201526653535f5a45524f60c81b6064820152608401610869565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146119685760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610869565b6124136123b1565b6001600160a01b0384166000908152600460209081526040808320868452909152902060050154156124965760405162461bcd60e51b815260206004820152602660248201527f4552524f523a53544b2d3130303a544f4b454e5f414c52454144595f5245474960448201526514d51154915160d21b6064820152608401610869565b6001600160a01b0384166124ec5760405162461bcd60e51b815260206004820181905260248201527f4552524f523a53544b2d3130313a544f4b454e5f414444524553535f5a45524f6044820152606401610869565b6000831161253c5760405162461bcd60e51b815260206004820152601b60248201527f4552524f523a53544b2d3130323a434841494e5f49445f5a45524f00000000006044820152606401610869565b60008260ff161161258f5760405162461bcd60e51b815260206004820152601b60248201527f4552524f523a53544b2d3130333a444543494d414c535f5a45524f00000000006044820152606401610869565b60128260ff1611156125e35760405162461bcd60e51b815260206004820181905260248201527f4552524f523a53544b2d3130343a444543494d414c535f544f4f5f4c415247456044820152606401610869565b6001600160a01b0384166000818152600460209081526040808320878452825291829020825180840190935283835291810186905281546001600160a01b03191690921781556001810185905582519091612645916003840191850190612fec565b5060048101805460ff90941660ff199094169390931790925550426005820155600b805460018181018355600092909252825460029091027f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9810180546001600160a01b0319166001600160a01b03909316929092179091559101547f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01dba909101555050565b6000848152600260205260409020600501546127565760405162461bcd60e51b815260206004820152602560248201527f4552524f523a53544b2d3131303a494e5354414e43455f4e4f545f5245474953604482015264151154915160da1b6064820152608401610869565b6000848152600260209081526040808320600301546001600160a01b038616845260048352818420818552909252909120600501546127e25760405162461bcd60e51b815260206004820152602260248201527f4552524f523a53544b2d3131313a544f4b454e5f4e4f545f5245474953544552604482015261115160f21b6064820152608401610869565b60008581526003602090815260408083208784529091529020600781015461293257604080518082018252878152602090810187905287835560018301879055815180830183526001600160a01b0387168082529082018590526002840180546001600160a01b03191682179055600380850186905560009182526004808452848320878452909352929020909101805491830191612880906139ef565b61288b929190613070565b506001600160a01b03841660009081526004602081815260408084208685529091528220015460058301805460ff191660ff909216919091179055426007830155600c80546001818101835591909252825460029092027fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c78101929092558201547fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c8909101555b600283600381111561295457634e487b7160e01b600052602160045260246000fd5b14801561296357506006810154155b1561296f574260068201555b60058101805484919061ff0019166101008360038111156129a057634e487b7160e01b600052602160045260246000fd5b0217905550426008909101555050505050565b6001820154600090815260066020908152604080832060028601548452909152812080548392906129e590849061382a565b9091555050600182015460009081526007602052604081208054839290612a0d90849061382a565b9250508190555080600d6000828254612a26919061382a565b9250508190555080826003016000828254612a41919061382a565b90915550504260059092019190915550565b600854600e546040516323b872dd60e01b81526001600160a01b0385811660048301529182166024820152604481018490529116906323b872dd906064015b602060405180830381600087803b158015612aac57600080fd5b505af1158015612ac0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ae49190613298565b505050565b600046831415612b87576000612afe83612eac565b905084816001600160a01b0316631551100f6040518163ffffffff1660e01b815260040160206040518083038186803b158015612b3a57600080fd5b505afa158015612b4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b7291906132d0565b14612b8157600091505061070f565b50612bd9565b8282604051602001612bb592919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b604051602081830303815290604052805190602001208414612bd95750600061070f565b5060019392505050565b8160030154811115612c5d5760405162461bcd60e51b815260206004820152603760248201527f4552524f523a53544b2d3132303a5749544844524157414c5f414d4f554e545f60448201527f455843454544535f5354414b494e475f42414c414e43450000000000000000006064820152608401610869565b600182015460009081526006602090815260408083206002860154845290915281208054839290612c8f9084906139a8565b9091555050600182015460009081526007602052604081208054839290612cb79084906139a8565b9250508190555080600d6000828254612cd091906139a8565b9250508190555080826003016000828254612a4191906139a8565b600e546001600160a01b03163014612d9357600854600e546040516323b872dd60e01b81526001600160a01b0391821660048201528482166024820152604481018490529116906323b872dd90606401602060405180830381600087803b158015612d5557600080fd5b505af1158015612d69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d8d9190613298565b50610723565b60085460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb90604401612a92565b600081815260026020526040812060050154612e385760405162461bcd60e51b815260206004820152602560248201527f4552524f523a53544b2d3133303a494e5354414e43455f4e4f545f5245474953604482015264151154915160da1b6064820152608401610869565b600082815260026020526040902060040154610e80906001600160a01b0316612eac565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604051631c2d8fb360e31b81526e496e7374616e63655365727669636560881b600482015260009082906001600160a01b0382169063e16c7d989060240160206040518083038186803b158015612f0257600080fd5b505afa158015612f16573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070f919061317b565b6040518060a0016040528060006001600160a01b03168152602001612f75604051806040016040528060008019168152602001600081525090565b81526020016000815260200160008152602001600081525090565b6040805161014081019091526000610100820181815261012083019190915281908152602001612fd0604080518082019091526000808252602082015290565b8152606060208201819052600060408301819052910190612f75565b828054612ff8906139ef565b90600052602060002090601f01602090048101928261301a5760008555613060565b82601f1061303357805160ff1916838001178555613060565b82800160010185558215613060579182015b82811115613060578251825591602001919060010190613045565b5061306c9291506130eb565b5090565b82805461307c906139ef565b90600052602060002090601f01602090048101928261309e5760008555613060565b82601f106130af5780548555613060565b8280016001018555821561306057600052602060002091601f016020900482015b828111156130605782548255916001019190600101906130d0565b5b8082111561306c57600081556001016130ec565b600061311361310e84613802565b6137d1565b905082815283838301111561312757600080fd5b61070f8360208301846139bf565b600082601f830112613145578081fd5b61070f83835160208501613100565b8051610e8381613a91565b600060208284031215613170578081fd5b813561070f81613a7c565b60006020828403121561318c578081fd5b815161070f81613a7c565b600080604083850312156131a9578081fd5b82356131b481613a7c565b946020939093013593505050565b6000806000606084860312156131d6578081fd5b83356131e181613a7c565b95602085013595506040909401359392505050565b6000806000806080858703121561320b578182fd5b843561321681613a7c565b935060208501359250604085013561322d81613a9e565b9150606085013567ffffffffffffffff811115613248578182fd5b8501601f81018713613258578182fd5b803561326661310e82613802565b81815288602083850101111561327a578384fd5b81602084016020830137908101602001929092525092959194509250565b6000602082840312156132a9578081fd5b8151801515811461070f578182fd5b6000602082840312156132c9578081fd5b5035919050565b6000602082840312156132e1578081fd5b5051919050565b600080604083850312156132fa578182fd5b50508035926020909101359150565b60008060006060848603121561331d578081fd5b8335925060208401359150604084013561333681613a7c565b809150509250925092565b60008060008060808587031215613356578182fd5b8435935060208501359250604085013561336f81613a7c565b9150606085013561337f81613a91565b939692955090935050565b60008060006060848603121561339e578081fd5b505081359360208301359350604090920135919050565b6000602082840312156133c6578081fd5b815167ffffffffffffffff8111156133dc578182fd5b8201601f810184136133ec578182fd5b61137e84825160208401613100565b60006020828403121561340c578081fd5b815167ffffffffffffffff80821115613423578283fd5b8184019150610140808387031215613439578384fd5b613442816137d1565b905082518152602083015160208201526040830151604082015261346860608401613154565b606082015260808301518281111561347e578485fd5b61348a87828601613135565b60808301525060a0838101519082015260c0808401519082015260e0808401519082015261010080840151908201526101209283015192810192909252509392505050565b600081830360c08112156134e1578182fd5b6134eb60a06137d1565b83356134f681613a7c565b81526040601f1983011215613509578283fd5b61351360406137d1565b91506020840135825260408401356020830152816020820152606084013560408201526080840135606082015260a08401356080820152809250505092915050565b60008060408385031215613567578182fd5b82359150602083013561357981613a7c565b809150509250929050565b600080600060608486031215613598578081fd5b8335925060208401356135aa81613a7c565b929592945050506040919091013590565b6000602082840312156135cc578081fd5b815161070f81613a9e565b6135e081613a6c565b9052565b600081518084526135fc8160208601602086016139bf565b601f01601f19169290920160200192915050565b6020808252825180518383015201516040820152600060208381015180516001600160a01b031660608501529081015160808401525060408301516101408060a08501526136626101608501836135e4565b915060ff60608601511660c0850152608085015161368360e08601826135d7565b5060a085015161010085015260c085015161012085015260e0909401519390920192909252919050565b815181526020808301519082015260408101610c9b565b6000602082528251602083015260208301516136df81613a6c565b80604084015250604083015160e060608401526137006101008401826135e4565b90506060840151608084015260018060a01b0360808501511660a084015260a084015160c084015260c084015160e08401528091505092915050565b6020808252825180516001600160a01b03168383015201516040820152600060208301516003811061377057613770613a40565b6060830152604083015160c0608084015261378e60e08401826135e4565b905060ff60608501511660a0840152608084015160c08401528091505092915050565b81516001600160a01b031681526020808301519082015260408101610c9b565b604051601f8201601f1916810167ffffffffffffffff811182821017156137fa576137fa613a56565b604052919050565b600067ffffffffffffffff82111561381c5761381c613a56565b50601f01601f191660200190565b6000821982111561383d5761383d613a2a565b500190565b60008261385d57634e487b7160e01b81526012600452602481fd5b500490565b80825b6001808611613874575061389f565b81870482111561388657613886613a2a565b8086161561389357918102915b9490941c938002613865565b94509492505050565b600061070f60001984846138c5565b600061070f60001960ff8516845b6000826138d45750600161070f565b816138e15750600061070f565b81600181146138f757600281146139015761392e565b600191505061070f565b60ff84111561391257613912613a2a565b6001841b91508482111561392857613928613a2a565b5061070f565b5060208310610133831016604e8410600b8410161715613961575081810a8381111561395c5761395c613a2a565b61070f565b61396e8484846001613862565b80860482111561398057613980613a2a565b02949350505050565b60008160001904831182151516156139a3576139a3613a2a565b500290565b6000828210156139ba576139ba613a2a565b500390565b60005b838110156139da5781810151838201526020016139c2565b838111156139e9576000848401525b50505050565b600281046001821680613a0357607f821691505b60208210811415613a2457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600481106122a7576122a7613a40565b6001600160a01b03811681146122a757600080fd5b600481106122a757600080fd5b60ff811681146122a757600080fdfea2646970667358221220d7cf16da7ec19db77ba11363334cf11a7de44fedeef0789203ed022b7900bfed64736f6c63430008020033";

type GifStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GifStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GifStaking__factory extends ContractFactory {
  constructor(...args: GifStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GifStaking> {
    return super.deploy(overrides || {}) as Promise<GifStaking>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GifStaking {
    return super.attach(address) as GifStaking;
  }
  override connect(signer: Signer): GifStaking__factory {
    return super.connect(signer) as GifStaking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GifStakingInterface {
    return new utils.Interface(_abi) as GifStakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GifStaking {
    return new Contract(address, _abi, signerOrProvider) as GifStaking;
  }
}
