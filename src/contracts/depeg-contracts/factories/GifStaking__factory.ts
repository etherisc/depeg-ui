/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { GifStaking, GifStakingInterface } from "../GifStaking";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DIP_CONTRACT_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DIP_DECIMALS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DIP_TO_TOKEN_PARITY_LEVEL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DIP_TO_TOKEN_PARITY_LEVEL_DECIMALS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAINNET_ID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ONE_YEAR_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REWARD_100_PERCENTAGE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REWARD_MAX_PERCENTAGE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "calculateRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "rewardAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "staker",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "instanceId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "bundleId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct GifStaking.StakeInfo",
        name: "stakeInfo",
        type: "tuple",
      },
    ],
    name: "calculateRewardsIncrement",
    outputs: [
      {
        internalType: "uint256",
        name: "rewardsAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "dipAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "calculateTokenAmountFromStaking",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
    ],
    name: "getBundleInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "enum IBundle.BundleState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "closedSince",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct GifStaking.BundleInfo",
        name: "info",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
    ],
    name: "getBundleStakes",
    outputs: [
      {
        internalType: "uint256",
        name: "stakedDipAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDip",
    outputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "dip",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "getDipStakingRate",
    outputs: [
      {
        internalType: "uint256",
        name: "stakingRate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDipToTokenParityLevel",
    outputs: [
      {
        internalType: "uint256",
        name: "parityLevel",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
    ],
    name: "getInstanceId",
    outputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
    ],
    name: "getInstanceInfo",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "registry",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
        ],
        internalType: "struct GifStaking.InstanceInfo",
        name: "info",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOneYearDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "yearDuration",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getReward100PercentLevel",
    outputs: [
      {
        internalType: "uint256",
        name: "reward100PercentLevel",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "getStakeInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "staker",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "instanceId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "bundleId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct GifStaking.StakeInfo",
        name: "stakeInfo",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStakingWallet",
    outputs: [
      {
        internalType: "address",
        name: "instanceWallet",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "getSupportedCapitalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "captialCap",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "instances",
    outputs: [
      {
        internalType: "uint256",
        name: "numberOfInstances",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "registry",
        type: "address",
      },
    ],
    name: "registerGifInstance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dipTokenAddress",
        type: "address",
      },
    ],
    name: "setDipContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenDecimals",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakingRate",
        type: "uint256",
      },
    ],
    name: "setDipStakingRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rewardPercentage",
        type: "uint256",
      },
    ],
    name: "setRewardPercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakes",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
      {
        internalType: "enum IBundle.BundleState",
        name: "state",
        type: "uint8",
      },
    ],
    name: "updateBundleState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
    ],
    name: "updateBundleState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a33610053565b600180546001600160a01b031990811673c719d010b63e5bbf2c0551872cd5316ed26acd831790915560048054909116301790556100a3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6126f4806100b26000396000f3fe608060405234801561001057600080fd5b50600436106102485760003560e01c80636f9a9db91161013b578063ad6b6b01116100b8578063c79606f01161007c578063c79606f014610531578063e8a9650a14610339578063f2fde38b14610539578063fddec1c31461054c578063fe4071d41461056757610248565b8063ad6b6b01146104a3578063b3fc986e146104f2578063b54ded6e14610503578063b680a4f314610514578063b86faa061461051e57610248565b80638fee6407116100ff5780638fee640714610462578063900ebd931461047557806398549cd01461047f5780639dfb543814610492578063ad09c7ce1461049b57610248565b80636f9a9db9146103fc578063715018a61461040f5780637dbe07dc146104175780638da5cb5b1461042a5780638ea13f221461044f57610248565b806338ccae70116101c957806354ad7acb1161018d57806354ad7acb146103b05780635ba30bae146103b85780635c334e8f146103cb57806361e49158146103de578063631e136c146103f157610248565b806338ccae70146103675780634495c42a1461037a57806348a88706146103825780634d2ace66146103955780634e8f0ea01461039d57610248565b80630c4cd422116102105780630c4cd422146102b65780630cd82abd1461031957806319787fcc146103395780632daedd521461034157806333c128e61461035457610248565b8063040cf0201461024d5780630556592d14610262578063061dda941461027d578063081ff95c1461029057806309653674146102a3575b600080fd5b61026061025b3660046121dd565b61057a565b005b61026a61058b565b6040519081526020015b60405180910390f35b61026a61028b366004612362565b61059a565b61026a61029e3660046121fe565b6105c4565b6102606102b13660046121ad565b610682565b6102c96102c43660046121fe565b6106ff565b604051610274919081516001600160a01b031681526020808301519082015260408083015190820152606080830151908201526080808301519082015260a0918201519181019190915260c00190565b61032c6103273660046121dd565b610816565b6040516102749190612466565b61026a601281565b61026061034f366004612263565b6109b1565b6102606103623660046121fe565b610ba1565b610260610375366004612236565b610da3565b61026a610ee7565b61026a610390366004612433565b610efa565b60035461026a565b61026a6103ab3660046121ad565b610f3c565b61026a610fd3565b61026a6103c63660046121fe565b610fe1565b6102606103d9366004612263565b611016565b61026a6103ec3660046123c8565b611193565b61026a6301e1338081565b61026061040a3660046121dd565b611203565b610260611388565b61026a6104253660046121dd565b61139c565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610274565b61026a61045d3660046121dd565b61142a565b61026a6104703660046121ad565b611436565b61026a620f424081565b61026061048d3660046123f7565b6114ed565b620f424061026a565b600c5461026a565b6104b66104b13660046121ad565b611730565b604051610274919081518152602080830151908201526040808301516001600160a01b0316908201526060918201519181019190915260800190565b6004546001600160a01b0316610437565b6001546001600160a01b0316610437565b6301e1338061026a565b61026a61052c3660046121fe565b61180e565b61026a600181565b610260610547366004612155565b6118b0565b61043773c719d010b63e5bbf2c0551872cd5316ed26acd8381565b610260610575366004612155565b611929565b6105878282600019611016565b5050565b6105976012600a61256c565b81565b6000808260a00151426105ad9190612659565b90506105bd836060015182610efa565b9392505050565b6000806105d18484611193565b60008581526006602090815260408083206001600160a01b0388168452909152902054909150600180826106066012806124ee565b1061063357826106176012806124ee565b6106219190612659565b61062c90600a61256c565b9050610656565b61063e6012806124ee565b6106489084612659565b61065390600a61256c565b91505b8082610662868b61263a565b61066c919061263a565b6106769190612506565b98975050505050505050565b61068a611a30565b6106986003620f4240612506565b8111156106fa5760405162461bcd60e51b815260206004820152602560248201527f4552524f523a53544b2d3031363a5245574152445f4558454544535f4d41585f60448201526456414c554560d81b60648201526084015b60405180910390fd5b600255565b6107446040518060c0016040528060006001600160a01b0316815260200160008019168152602001600081526020016000815260200160008152602001600081525090565b50600083815260096020908152604080832085845282528083206001600160a01b03808616855290835292819020815160c0810183528154909416845260018101549284019290925260028201549083015260038101546060830152600481015460808301526005015460a082018190526105bd5760405162461bcd60e51b815260206004820152602c60248201527f4552524f523a53544b2d3038303a4143434f554e545f574954484f55545f535460448201526b1052d25391d7d49150d3d49160a21b60648201526084016106f1565b6108496040805160a081019091526000808252602082019081526020016000815260200160008152602001600081525090565b6000838152600760205260409020600301546108b55760405162461bcd60e51b815260206004820152602560248201527f4552524f523a53544b2d3037303a494e5354414e43455f4e4f545f5245474953604482015264151154915160da1b60648201526084016106f1565b6000838152600860209081526040808320858452825291829020825160a08101909352805483526001810154909183019060ff16600381111561090857634e487b7160e01b600052602160045260246000fd5b600381111561092757634e487b7160e01b600052602160045260246000fd5b81526020016002820154815260200160038201548152602001600482015481525050905060008160600151116109ab5760405162461bcd60e51b815260206004820152602360248201527f4552524f523a53544b2d3037313a42554e444c455f4e4f545f5245474953544560448201526214915160ea1b60648201526084016106f1565b92915050565b60008111610a0b5760405162461bcd60e51b815260206004820152602160248201527f4552524f523a53544b2d3034303a5354414b494e475f414d4f554e545f5a45526044820152604f60f81b60648201526084016106f1565b6000610a178484610816565b9050600081602001516003811115610a3f57634e487b7160e01b600052602160045260246000fd5b1480610a6e5750600181602001516003811115610a6c57634e487b7160e01b600052602160045260246000fd5b145b610ac85760405162461bcd60e51b815260206004820152602560248201527f4552524f523a53544b2d3034313a42554e444c455f434c4f5345445f4f525f42604482015264155493915160da1b60648201526084016106f1565b600084815260096020908152604080832086845282528083203380855292529091206004810154610b215780546001600160a01b0319166001600160a01b03831617815560018101869055600281018590554260048201555b6040805160c08101825282546001600160a01b03168152600183015460208201526002830154918101919091526003820154606082015260048201546080820152600582015460a0820152600090610b789061059a565b610b8290866124ee565b9050610b8e8282611a8a565b610b988386611b2a565b50505050505050565b610ba9611a30565b60008381526007602052604090206003015415610c1a5760405162461bcd60e51b815260206004820152602960248201527f4552524f523a53544b2d3032303a494e5354414e43455f414c52454144595f526044820152681151d254d51154915160ba1b60648201526084016106f1565b60008211610c6a5760405162461bcd60e51b815260206004820152601b60248201527f4552524f523a53544b2d3032313a434841494e5f49445f5a45524f000000000060448201526064016106f1565b6001600160a01b038116610cd55760405162461bcd60e51b815260206004820152602c60248201527f4552524f523a53544b2d3032323a52454749535452595f434f4e54524143545f60448201526b414444524553535f5a45524f60a01b60648201526084016106f1565b6000610ce2848484611bc3565b905080610d315760405162461bcd60e51b815260206004820152601e60248201527f4552524f523a53544b2d3032333a494e5354414e43455f494e56414c4944000060448201526064016106f1565b5060008381526007602052604081208481556001808201949094556002810180546001600160a01b0319166001600160a01b0394909416939093179092554260039283015581549283018255527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0155565b610dab611a30565b6000838152600760205260409020600301548390610e195760405162461bcd60e51b815260206004820152602560248201527f4552524f523a53544b2d3030333a494e5354414e43455f4e4f545f5245474953604482015264151154915160da1b60648201526084016106f1565b600081815260076020526040902060010154461415610e865760405162461bcd60e51b8152602060048201526024808201527f4552524f523a53544b2d3030343a494e5354414e43455f4f4e5f544849535f436044820152632420a4a760e11b60648201526084016106f1565b60008311610ed65760405162461bcd60e51b815260206004820152601c60248201527f4552524f523a53544b2d3033303a42554e444c455f49445f5a45524f0000000060448201526064016106f1565b610ee1848484611cbd565b50505050565b6000610ef56012600a61256c565b905090565b6000806301e1338083600254610f10919061263a565b610f1a9190612506565b9050620f4240610f2a828661263a565b610f349190612506565b949350505050565b6003546000908210610f9f5760405162461bcd60e51b815260206004820152602660248201527f4552524f523a53544b2d3036313a494e5354414e43455f494e4445585f544f4f6044820152655f4c4152474560d01b60648201526084016106f1565b60038281548110610fc057634e487b7160e01b600052603260045260246000fd5b906000526020600020015490505b919050565b6105976003620f4240612506565b600080610fed85611730565b90506000610ffb868661139c565b905061100c818360200151866105c4565b9695505050505050565b600081116110725760405162461bcd60e51b8152602060048201526024808201527f4552524f523a53544b2d3035303a5749544844524157414c5f414d4f554e545f6044820152635a45524f60e01b60648201526084016106f1565b6000838152600960209081526040808320858452825280832033808552925290912060058101546110fa5760405162461bcd60e51b815260206004820152602c60248201527f4552524f523a53544b2d3035313a4143434f554e545f574954484f55545f535460448201526b1052d25391d7d49150d3d49160a21b60648201526084016106f1565b6040805160c08101825282546001600160a01b03168152600183015460208201526002830154918101919091526003820154606082015260048201546080820152600582015460a082015261114e9061059a565b81600301600082825461116191906124ee565b909155505060001983141561117857806003015492505b6111828184611d67565b61118c8284611e6f565b5050505050565b60008281526005602090815260408083206001600160a01b0385168452909152902054806109ab5760405162461bcd60e51b815260206004820152601f60248201527f4552524f523a53544b2d3036303a5354414b494e475f524154455f5a45524f0060448201526064016106f1565b61120b611a30565b60008281526007602052604090206003015482906112795760405162461bcd60e51b815260206004820152602560248201527f4552524f523a53544b2d3030313a494e5354414e43455f4e4f545f5245474953604482015264151154915160da1b60648201526084016106f1565b60008181526007602052604090206001015446146112ea5760405162461bcd60e51b815260206004820152602860248201527f4552524f523a53544b2d3030323a494e5354414e43455f4e4f545f4f4e5f544860448201526724a9afa1a420a4a760c11b60648201526084016106f1565b60006112f584611f54565b604051632d0821b760e01b8152600481018590529091506000906001600160a01b03831690632d0821b79060240160006040518083038186803b15801561133b57600080fd5b505afa15801561134f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611377919081019061228e565b905061118c85858360600151611cbd565b611390611a30565b61139a6000611fe4565b565b6000806113a98484610816565b9050600081606001511161140b5760405162461bcd60e51b815260206004820152602360248201527f4552524f523a53544b2d3038323a42554e444c455f4e4f545f5245474953544560448201526214915160ea1b60648201526084016106f1565b50506000918252600a6020908152604080842092845291905290205490565b60006105bd838361139c565b600081815260076020908152604080832081516080810183528154815260018201549381019390935260028101546001600160a01b03169183019190915260030154606082018190526114d95760405162461bcd60e51b815260206004820152602560248201527f4552524f523a53544b2d3038333a494e5354414e43455f4e4f545f5245474953604482015264151154915160da1b60648201526084016106f1565b50506000908152600b602052604090205490565b6114f5611a30565b600084116115455760405162461bcd60e51b815260206004820152601b60248201527f4552524f523a53544b2d3031323a434841494e5f49445f5a45524f000000000060448201526064016106f1565b6001600160a01b03831661159b5760405162461bcd60e51b815260206004820181905260248201527f4552524f523a53544b2d3031333a544f4b454e5f414444524553535f5a45524f60448201526064016106f1565b600082116115f55760405162461bcd60e51b815260206004820152602160248201527f4552524f523a53544b2d3031343a544f4b454e5f444543494d414c535f5a45526044820152604f60f81b60648201526084016106f1565b600081116116455760405162461bcd60e51b815260206004820152601f60248201527f4552524f523a53544b2d3031353a5354414b494e475f524154455f5a45524f0060448201526064016106f1565b60008481526005602090815260408083206001600160a01b03871680855290835281842085905587845260068352818420908452909152902082905546841415610ee1576000839050806001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156116c757600080fd5b505afa1580156116db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ff9190612445565b60008681526006602090815260408083206001600160a01b0389168452909152902060ff9190911690555050505050565b6040805160808101825260008082526020820181905291810182905260608101919091526000828152600760205260409020600301546117c05760405162461bcd60e51b815260206004820152602560248201527f4552524f523a53544b2d3036323a494e5354414e43455f4e4f545f5245474953604482015264151154915160da1b60648201526084016106f1565b5060009081526007602090815260409182902082516080810184528154815260018201549281019290925260028101546001600160a01b031692820192909252600390910154606082015290565b60008061181b8585610816565b9050600081606001511161187d5760405162461bcd60e51b815260206004820152602360248201527f4552524f523a53544b2d3038313a42554e444c455f4e4f545f5245474953544560448201526214915160ea1b60648201526084016106f1565b505060009283526009602090815260408085209385529281528284206001600160a01b0390921684525290206003015490565b6118b8611a30565b6001600160a01b03811661191d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106f1565b61192681611fe4565b50565b611931611a30565b60014614156119a85760405162461bcd60e51b815260206004820152603760248201527f4552524f523a53544b2d3031303a4449505f414444524553535f4348414e474560448201527f5f4e4f545f414c4c4f5745445f4f4e5f4d41494e4e455400000000000000000060648201526084016106f1565b6001600160a01b038116611a0e5760405162461bcd60e51b815260206004820152602760248201527f4552524f523a53544b2d3031313a4449505f434f4e54524143545f414444524560448201526653535f5a45524f60c81b60648201526084016106f1565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461139a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106f1565b60018201546000908152600a602090815260408083206002860154845290915281208054839290611abc9084906124ee565b909155505060018201546000908152600b602052604081208054839290611ae49084906124ee565b9250508190555080600c6000828254611afd91906124ee565b9250508190555080826003016000828254611b1891906124ee565b90915550504260059092019190915550565b600154600480546040516323b872dd60e01b81526001600160a01b03868116938201939093529082166024820152604481018490529116906323b872dd906064015b602060405180830381600087803b158015611b8657600080fd5b505af1158015611b9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bbe919061218d565b505050565b600046831415611c61576000611bd883612034565b905084816001600160a01b0316631551100f6040518163ffffffff1660e01b815260040160206040518083038186803b158015611c1457600080fd5b505afa158015611c28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c4c91906121c5565b14611c5b5760009150506105bd565b50611cb3565b8282604051602001611c8f92919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b604051602081830303815290604052805190602001208414611cb3575060006105bd565b5060019392505050565b600083815260086020908152604080832085845290915290206003810154611ce9578281554260038201555b6002826003811115611d0b57634e487b7160e01b600052602160045260246000fd5b148015611d1a57506002810154155b15611d26574260028201555b60018082018054849260ff1990911690836003811115611d5657634e487b7160e01b600052602160045260246000fd5b021790555042600490910155505050565b8160030154811115611de15760405162461bcd60e51b815260206004820152603760248201527f4552524f523a53544b2d3039303a5749544844524157414c5f414d4f554e545f60448201527f455843454544535f5354414b494e475f42414c414e434500000000000000000060648201526084016106f1565b60018201546000908152600a602090815260408083206002860154845290915281208054839290611e13908490612659565b909155505060018201546000908152600b602052604081208054839290611e3b908490612659565b9250508190555080600c6000828254611e549190612659565b9250508190555080826003016000828254611b189190612659565b6004546001600160a01b03163014611f1b57600154600480546040516323b872dd60e01b81526001600160a01b0391821692810192909252848116602483015260448201849052909116906323b872dd90606401602060405180830381600087803b158015611edd57600080fd5b505af1158015611ef1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f15919061218d565b50610587565b60015460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb90604401611b6c565b600081815260076020526040812060030154611fc05760405162461bcd60e51b815260206004820152602560248201527f4552524f523a53544b2d3130303a494e5354414e43455f4e4f545f5245474953604482015264151154915160da1b60648201526084016106f1565b6000828152600760205260409020600201546109ab906001600160a01b0316612034565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604051631c2d8fb360e31b81526e496e7374616e63655365727669636560881b600482015260009082906001600160a01b0382169063e16c7d989060240160206040518083038186803b15801561208a57600080fd5b505afa15801561209e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bd9190612171565b600082601f8301126120d2578081fd5b815167ffffffffffffffff8111156120ec576120ec612686565b6020612100601f8301601f191682016124bd565b8281528582848701011115612113578384fd5b835b83811015612130578581018301518282018401528201612115565b8381111561214057848385840101525b5095945050505050565b8051610fce816126b1565b600060208284031215612166578081fd5b81356105bd8161269c565b600060208284031215612182578081fd5b81516105bd8161269c565b60006020828403121561219e578081fd5b815180151581146105bd578182fd5b6000602082840312156121be578081fd5b5035919050565b6000602082840312156121d6578081fd5b5051919050565b600080604083850312156121ef578081fd5b50508035926020909101359150565b600080600060608486031215612212578081fd5b8335925060208401359150604084013561222b8161269c565b809150509250925092565b60008060006060848603121561224a578283fd5b8335925060208401359150604084013561222b816126b1565b600080600060608486031215612277578283fd5b505081359360208301359350604090920135919050565b60006020828403121561229f578081fd5b815167ffffffffffffffff808211156122b6578283fd5b81840191506101408083870312156122cc578384fd5b6122d5816124bd565b90508251815260208301516020820152604083015160408201526122fb6060840161214a565b6060820152608083015182811115612311578485fd5b61231d878286016120c2565b60808301525060a0838101519082015260c0808401519082015260e0808401519082015261010080840151908201526101209283015192810192909252509392505050565b600060c08284031215612373578081fd5b61237d60c06124bd565b82356123888161269c565b808252506020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a08201528091505092915050565b600080604083850312156123da578182fd5b8235915060208301356123ec8161269c565b809150509250929050565b6000806000806080858703121561240c578182fd5b84359350602085013561241e8161269c565b93969395505050506040820135916060013590565b600080604083850312156121ef578182fd5b600060208284031215612456578081fd5b815160ff811681146105bd578182fd5b81518152602082015160a08201906004811061249257634e487b7160e01b600052602160045260246000fd5b8060208401525060408301516040830152606083015160608301526080830151608083015292915050565b604051601f8201601f1916810167ffffffffffffffff811182821017156124e6576124e6612686565b604052919050565b6000821982111561250157612501612670565b500190565b60008261252157634e487b7160e01b81526012600452602481fd5b500490565b80825b60018086116125385750612563565b81870482111561254a5761254a612670565b8086161561255757918102915b9490941c938002612529565b94509492505050565b60006105bd6000198484600082612585575060016105bd565b81612592575060006105bd565b81600181146125a857600281146125b2576125df565b60019150506105bd565b60ff8411156125c3576125c3612670565b6001841b9150848211156125d9576125d9612670565b506105bd565b5060208310610133831016604e8410600b8410161715612612575081810a8381111561260d5761260d612670565b6105bd565b61261f8484846001612526565b80860482111561263157612631612670565b02949350505050565b600081600019048311821515161561265457612654612670565b500290565b60008282101561266b5761266b612670565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461192657600080fd5b6004811061192657600080fdfea264697066735822122018dc45420e62e7523d3def3badbc878beca6f9cf1c3fc2dd181ae6a38f82c4e564736f6c63430008020033";

type GifStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GifStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GifStaking__factory extends ContractFactory {
  constructor(...args: GifStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GifStaking> {
    return super.deploy(overrides || {}) as Promise<GifStaking>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GifStaking {
    return super.attach(address) as GifStaking;
  }
  override connect(signer: Signer): GifStaking__factory {
    return super.connect(signer) as GifStaking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GifStakingInterface {
    return new utils.Interface(_abi) as GifStakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GifStaking {
    return new Contract(address, _abi, signerOrProvider) as GifStaking;
  }
}
