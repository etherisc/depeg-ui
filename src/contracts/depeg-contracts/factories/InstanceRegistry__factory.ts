/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  InstanceRegistry,
  InstanceRegistryInterface,
} from "../InstanceRegistry";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "oldDisplayName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newDisplayName",
        type: "string",
      },
    ],
    name: "LogInstanceRegistryInstanceDisplayNameUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "enum IInstanceDataProvider.InstanceState",
        name: "state",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isNewInstance",
        type: "bool",
      },
    ],
    name: "LogInstanceRegistryInstanceRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "enum IInstanceDataProvider.InstanceState",
        name: "oldState",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "enum IInstanceDataProvider.InstanceState",
        name: "newState",
        type: "uint8",
      },
    ],
    name: "LogInstanceRegistryInstanceStateUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum IInstanceDataProvider.TokenState",
        name: "state",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isNewToken",
        type: "bool",
      },
    ],
    name: "LogInstanceRegistryTokenRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum IInstanceDataProvider.TokenState",
        name: "oldState",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "enum IInstanceDataProvider.TokenState",
        name: "newState",
        type: "uint8",
      },
    ],
    name: "LogInstanceRegistryTokenStateUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "TOKEN_MAX_DECIMALS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
    ],
    name: "getInstanceId",
    outputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
    ],
    name: "getInstanceInfo",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            internalType: "enum IInstanceDataProvider.InstanceState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "displayName",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "registry",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct IInstanceDataProvider.InstanceInfo",
        name: "info",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
    ],
    name: "getTokenId",
    outputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getTokenInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "chainId",
                type: "uint256",
              },
            ],
            internalType: "struct IInstanceDataProvider.TokenKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "enum IInstanceDataProvider.TokenState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct IInstanceDataProvider.TokenInfo",
        name: "tokenInfo",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    name: "getTokenInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "chainId",
                type: "uint256",
              },
            ],
            internalType: "struct IInstanceDataProvider.TokenKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "enum IInstanceDataProvider.TokenState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct IInstanceDataProvider.TokenInfo",
        name: "tokenInfo",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "instances",
    outputs: [
      {
        internalType: "uint256",
        name: "numberOfInstances",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
    ],
    name: "isRegisteredInstance",
    outputs: [
      {
        internalType: "bool",
        name: "isRegistered",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "isRegisteredToken",
    outputs: [
      {
        internalType: "bool",
        name: "isRegistered",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    name: "isRegisteredToken",
    outputs: [
      {
        internalType: "bool",
        name: "isRegistered",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registry",
        type: "address",
      },
    ],
    name: "registerInstance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "registry",
        type: "address",
      },
    ],
    name: "registerInstance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "registerToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "registerToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokens",
    outputs: [
      {
        internalType: "uint256",
        name: "numberOfTokens",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "newDisplayName",
        type: "string",
      },
    ],
    name: "updateInstance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "enum IInstanceDataProvider.InstanceState",
        name: "newState",
        type: "uint8",
      },
    ],
    name: "updateInstance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "enum IInstanceDataProvider.TokenState",
        name: "newState",
        type: "uint8",
      },
    ],
    name: "updateToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611f228061007e6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80637639a230116100b8578063aa25929c1161007c578063aa25929c146102c5578063ad6b6b0114610300578063b8f6a04a14610320578063bbd7d20914610328578063e6c6b46d1461033b578063f2fde38b1461034e57610137565b80637639a23014610243578063834af1531461027c5780638da5cb5b1461028f5780639d63848a146102aa578063a5b78c51146102b257610137565b80633ec29e72116100ff5780633ec29e72146101f05780634d2ace66146102035780634e8f0ea014610215578063715018a614610228578063724140d81461023057610137565b80630857aef71461013c57806309824a80146101765780630c36b7971461018b57806314ff5ea31461019e5780631f69565f146101d0575b600080fd5b61016161014a366004611a0f565b600090815260026020526040902060050154151590565b60405190151581526020015b60405180910390f35b6101896101843660046118fe565b610361565b005b610189610199366004611961565b610462565b6101b16101ac366004611a0f565b61062a565b604080516001600160a01b03909316835260208301919091520161016d565b6101e36101de3660046118fe565b610705565b60405161016d9190611d69565b6101896101fe366004611a71565b61071d565b6003545b60405190815260200161016d565b610207610223366004611a0f565b6108a0565b610189610936565b61018961023e3660046119a5565b61094a565b6101616102513660046118fe565b6001600160a01b03166000908152600160209081526040808320468452909152902060050154151590565b61018961028a3660046118fe565b610986565b6000546040516001600160a01b03909116815260200161016d565b600454610207565b6101896102c0366004611ab6565b610a16565b6101616102d3366004611936565b6001600160a01b039190911660009081526001602090815260408083209383529290522060050154151590565b61031361030e366004611a0f565b610a50565b60405161016d9190611cf3565b610207601281565b6101e3610336366004611936565b610c3e565b610189610349366004611a3f565b610e17565b61018961035c3660046118fe565b610f8f565b610369611008565b600081905061045e8246836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156103ac57600080fd5b505afa1580156103c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e49190611b56565b846001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801561041d57600080fd5b505afa158015610431573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104599190810190611ae3565b611062565b5050565b6001600160a01b03831660009081526001602090815260408083208584529091529020600501546104e55760405162461bcd60e51b815260206004820152602260248201527f4552524f523a4952472d3031303a544f4b454e5f4e4f545f5245474953544552604482015261115160f21b60648201526084015b60405180910390fd5b600081600281111561050757634e487b7160e01b600052602160045260246000fd5b141561055f5760405162461bcd60e51b815260206004820152602160248201527f4552524f523a4952472d3031313a544f4b454e5f53544154455f494e56414c496044820152601160fa1b60648201526084016104dc565b6001600160a01b03831660009081526001602081815260408084208685529091529091206002908101805460ff811693859360ff199092169184908111156105b757634e487b7160e01b600052602160045260246000fd5b02179055506001600160a01b03841660009081526001602090815260408083208684529091529081902042600690910155517fe4938f3efa93c37f967db34630b38efbe64d48ecd48a9d8d95c50b82df24be289061061c908690869085908790611bf7565b60405180910390a150505050565b6004546000908190831061068a5760405162461bcd60e51b815260206004820152602160248201527f4552524f523a4952472d3035303a544f4b454e5f4944585f544f4f5f4c4152476044820152604560f81b60648201526084016104dc565b600483815481106106ab57634e487b7160e01b600052603260045260246000fd5b6000918252602090912060029091020154600480546001600160a01b0390921691859081106106ea57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600202016001015491509150915091565b61070d6117c9565b6107178246610c3e565b92915050565b6000828152600260205260409020600501546107895760405162461bcd60e51b815260206004820152602560248201527f4552524f523a4952472d3032323a494e5354414e43455f4e4f545f5245474953604482015264151154915160da1b60648201526084016104dc565b600082815260026020819052604082200180546107a590611e67565b80601f01602080910402602001604051908101604052809291908181526020018280546107d190611e67565b801561081e5780601f106107f35761010080835404028352916020019161081e565b820191906000526020600020905b81548152906001019060200180831161080157829003601f168201915b5050506000868152600260208181526040909220875195965061084995910193509086019150611814565b506000838152600260205260409081902042600690910155517f711a15f2221deba7f1f0eb3049b4fa3a9e9bde57837a465fe70dd4536f02b5879061089390859084908690611c75565b60405180910390a1505050565b60035460009082106109035760405162461bcd60e51b815260206004820152602660248201527f4552524f523a4952472d3034303a494e5354414e43455f494e4445585f544f4f6044820152655f4c4152474560d01b60648201526084016104dc565b6003828154811061092457634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050919050565b61093e611008565b610948600061131d565b565b610952611008565b82468114156109735760405162461bcd60e51b81526004016104dc90611caa565b61097f85858585611062565b5050505050565b61098e611008565b60006109998261136d565b905061045e816001600160a01b0316631551100f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156109d757600080fd5b505afa1580156109eb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0f9190611a27565b46846114af565b610a1e611008565b8146811415610a3f5760405162461bcd60e51b81526004016104dc90611caa565b610a4a8484846114af565b50505050565b610a9a6040805160e08101909152600080825260208201908152602001606081526020016000815260200160006001600160a01b0316815260200160008152602001600081525090565b600082815260026020526040902060050154610b065760405162461bcd60e51b815260206004820152602560248201527f4552524f523a4952472d3034313a494e5354414e43455f4e4f545f5245474953604482015264151154915160da1b60648201526084016104dc565b600082815260026020908152604091829020825160e08101909352805483526001810154909183019060ff166003811115610b5157634e487b7160e01b600052602160045260246000fd5b6003811115610b7057634e487b7160e01b600052602160045260246000fd5b8152602001600282018054610b8490611e67565b80601f0160208091040260200160405190810160405280929190818152602001828054610bb090611e67565b8015610bfd5780601f10610bd257610100808354040283529160200191610bfd565b820191906000526020600020905b815481529060010190602001808311610be057829003601f168201915b50505091835250506003820154602082015260048201546001600160a01b031660408201526005820154606082015260069091015460809091015292915050565b610c466117c9565b6001600160a01b0383166000908152600160209081526040808320858452909152902060050154610cc45760405162461bcd60e51b815260206004820152602260248201527f4552524f523a4952472d3035313a544f4b454e5f4e4f545f5245474953544552604482015261115160f21b60648201526084016104dc565b6001600160a01b03808416600090815260016020818152604080842087855282529283902083516101008101909452805490941660c084019081529184015460e08401529082526002808401549293929184019160ff1690811115610d3957634e487b7160e01b600052602160045260246000fd5b6002811115610d5857634e487b7160e01b600052602160045260246000fd5b8152602001600382018054610d6c90611e67565b80601f0160208091040260200160405190810160405280929190818152602001828054610d9890611e67565b8015610de55780601f10610dba57610100808354040283529160200191610de5565b820191906000526020600020905b815481529060010190602001808311610dc857829003601f168201915b5050509183525050600482015460ff166020820152600582015460408201526006909101546060909101529392505050565b600082815260026020526040902060050154610e835760405162461bcd60e51b815260206004820152602560248201527f4552524f523a4952472d3032303a494e5354414e43455f4e4f545f5245474953604482015264151154915160da1b60648201526084016104dc565b6000816003811115610ea557634e487b7160e01b600052602160045260246000fd5b1415610eff5760405162461bcd60e51b8152602060048201526024808201527f4552524f523a4952472d3032313a494e5354414e43455f53544154455f494e566044820152631053125160e21b60648201526084016104dc565b60008281526002602052604090206001908101805460ff81169284929160ff191690836003811115610f4157634e487b7160e01b600052602160045260246000fd5b02179055506000838152600260205260409081902042600690910155517f2f9cb37a1965ba809b836c1f303671cbab51572c1097ec9d13314b344ce29dc59061089390859084908690611c4c565b610f97611008565b6001600160a01b038116610ffc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104dc565b6110058161131d565b50565b6000546001600160a01b031633146109485760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104dc565b6001600160a01b0384166110b85760405162461bcd60e51b815260206004820181905260248201527f4552524f523a4952472d3130303a544f4b454e5f414444524553535f5a45524f60448201526064016104dc565b600083116111085760405162461bcd60e51b815260206004820152601b60248201527f4552524f523a4952472d3130313a434841494e5f49445f5a45524f000000000060448201526064016104dc565b60008260ff161161115b5760405162461bcd60e51b815260206004820152601b60248201527f4552524f523a4952472d3130323a444543494d414c535f5a45524f000000000060448201526064016104dc565b60128260ff1611156111af5760405162461bcd60e51b815260206004820181905260248201527f4552524f523a4952472d3130333a444543494d414c535f544f4f5f4c4152474560448201526064016104dc565b6001600160a01b03841660008181526001602081815260408084208885528252928390206005810154845180860190955285855293820188905280546001600160a01b031916909417845583820187905560028401805460ff1916909217909155835191159161122791600385019190860190611814565b5060048201805460ff191660ff861617905542600683015580156112ce574260058301556004805460018181018355600092909252835460029091027f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b810180546001600160a01b0319166001600160a01b0390931692909217909155908301547f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c909101555b60028201546040517fc1d27bf584baf168c5183f1b23d76c6989b0aeae6b25b7d6efb301fcebda75b49161130d918991899160ff909116908690611bc2565b60405180910390a1505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080823b116113cb5760405162461bcd60e51b815260206004820152602360248201527f4552524f523a4952472d3132303a52454749535452595f4e4f545f434f4e54526044820152621050d560ea1b60648201526084016104dc565b604051631c2d8fb360e31b81526e496e7374616e63655365727669636560881b600482015282906001600160a01b0382169063e16c7d989060240160206040518083038186803b15801561141e57600080fd5b505afa92505050801561144e575060408051601f3d908101601f1916820190925261144b9181019061191a565b60015b6114a65760405162461bcd60e51b815260206004820152602360248201527f4552524f523a4952472d3132313a4e4f545f52454749535452595f434f4e54526044820152621050d560ea1b60648201526084016104dc565b91505b50919050565b600082116114ff5760405162461bcd60e51b815260206004820152601b60248201527f4552524f523a4952472d3033303a434841494e5f49445f5a45524f000000000060448201526064016104dc565b6001600160a01b0381166115615760405162461bcd60e51b815260206004820152602360248201527f4552524f523a4952472d3033313a52454749535452595f414444524553535f5a60448201526245524f60e81b60648201526084016104dc565b600061156e8484846116ce565b9050806115c75760405162461bcd60e51b815260206004820152602160248201527f4552524f523a4952472d3033323a494e5354414e43455f49445f494e56414c496044820152601160fa1b60648201526084016104dc565b600084815260026020818152604080842060058101548982556001808301805460ff1916909117905582519384019283905292859052939115928492611611929184019190611814565b50600381018690556004810180546001600160a01b0319166001600160a01b038716179055426006820155811561167e57426005840155600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b018790555b805460018201546040517fc6141e9efbb8f4a2729e2d3b4b7667a2fcc9b83a48f421a33f8906b5ab8549af926116bd92909160ff909116908690611c28565b60405180910390a150505050505050565b60004683141561176c5760006116e38361136d565b905084816001600160a01b0316631551100f6040518163ffffffff1660e01b815260040160206040518083038186803b15801561171f57600080fd5b505afa158015611733573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117579190611a27565b146117665760009150506117c2565b506117be565b828260405160200161179a92919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b6040516020818303038152906040528051906020012084146117be575060006117c2565b5060015b9392505050565b604080516101008101909152600060c0820181815260e0830191909152819081526020016000815260200160608152602001600060ff16815260200160008152602001600081525090565b82805461182090611e67565b90600052602060002090601f0160209004810192826118425760008555611888565b82601f1061185b57805160ff1916838001178555611888565b82800160010185558215611888579182015b8281111561188857825182559160200191906001019061186d565b50611894929150611898565b5090565b5b808211156118945760008155600101611899565b600082601f8301126118bd578081fd5b81356118d06118cb82611e13565b611de2565b8181528460208386010111156118e4578283fd5b816020850160208301379081016020019190915292915050565b60006020828403121561190f578081fd5b81356117c281611ec8565b60006020828403121561192b578081fd5b81516117c281611ec8565b60008060408385031215611948578081fd5b823561195381611ec8565b946020939093013593505050565b600080600060608486031215611975578081fd5b833561198081611ec8565b92506020840135915060408401356003811061199a578182fd5b809150509250925092565b600080600080608085870312156119ba578081fd5b84356119c581611ec8565b93506020850135925060408501356119dc81611edd565b9150606085013567ffffffffffffffff8111156119f7578182fd5b611a03878288016118ad565b91505092959194509250565b600060208284031215611a20578081fd5b5035919050565b600060208284031215611a38578081fd5b5051919050565b60008060408385031215611a51578182fd5b82359150602083013560048110611a66578182fd5b809150509250929050565b60008060408385031215611a83578182fd5b82359150602083013567ffffffffffffffff811115611aa0578182fd5b611aac858286016118ad565b9150509250929050565b600080600060608486031215611aca578283fd5b8335925060208401359150604084013561199a81611ec8565b600060208284031215611af4578081fd5b815167ffffffffffffffff811115611b0a578182fd5b8201601f81018413611b1a578182fd5b8051611b286118cb82611e13565b818152856020838501011115611b3c578384fd5b611b4d826020830160208601611e3b565b95945050505050565b600060208284031215611b67578081fd5b81516117c281611edd565b60048110611b8257611b82611e9c565b9052565b60038110611b8257611b82611e9c565b60008151808452611bae816020860160208601611e3b565b601f01601f19169290920160200192915050565b6001600160a01b03851681526020810184905260808101611be66040830185611b86565b821515606083015295945050505050565b6001600160a01b03851681526020810184905260808101611c1b6040830185611b86565b611b4d6060830184611b86565b83815260608101611c3c6020830185611b72565b8215156040830152949350505050565b83815260608101611c606020830185611b72565b611c6d6040830184611b72565b949350505050565b600084825260606020830152611c8e6060830185611b96565b8281036040840152611ca08185611b96565b9695505050505050565b60208082526029908201527f4552524f523a4952472d3030313a43414c4c5f494e56414c49445f464f525f5360408201526820a6a2afa1a420a4a760b91b606082015260800190565b600060208252825160208301526020830151611d126040840182611b72565b50604083015160e06060840152611d2d610100840182611b96565b90506060840151608084015260018060a01b0360808501511660a084015260a084015160c084015260c084015160e08401528091505092915050565b6020808252825180516001600160a01b0316838301528101516040830152820151600090611d9a6060840182611b86565b50604083015160e06080840152611db5610100840182611b96565b905060ff60608501511660a0840152608084015160c084015260a084015160e08401528091505092915050565b604051601f8201601f1916810167ffffffffffffffff81118282101715611e0b57611e0b611eb2565b604052919050565b600067ffffffffffffffff821115611e2d57611e2d611eb2565b50601f01601f191660200190565b60005b83811015611e56578181015183820152602001611e3e565b83811115610a4a5750506000910152565b600281046001821680611e7b57607f821691505b602082108114156114a957634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461100557600080fd5b60ff8116811461100557600080fdfea2646970667358221220de39c91627779fb6648ad554d56106d913711e41f642ed62ee2003a5ce43e36264736f6c63430008020033";

type InstanceRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InstanceRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InstanceRegistry__factory extends ContractFactory {
  constructor(...args: InstanceRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<InstanceRegistry> {
    return super.deploy(overrides || {}) as Promise<InstanceRegistry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): InstanceRegistry {
    return super.attach(address) as InstanceRegistry;
  }
  override connect(signer: Signer): InstanceRegistry__factory {
    return super.connect(signer) as InstanceRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InstanceRegistryInterface {
    return new utils.Interface(_abi) as InstanceRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InstanceRegistry {
    return new Contract(address, _abi, signerOrProvider) as InstanceRegistry;
  }
}
