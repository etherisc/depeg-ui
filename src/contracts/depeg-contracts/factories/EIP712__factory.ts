/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { EIP712, EIP712Interface } from "../EIP712";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "EIP712_TYPE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "digest",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "getSigner",
    outputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "structHash",
        type: "bytes32",
      },
    ],
    name: "getTypedDataV4Hash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e06040523480156200001157600080fd5b50604051620009ba380380620009ba833981016040819052620000349162000253565b815162000049906000906020850190620000fa565b5080516200005f906001906020840190620000fa565b5081516020808401919091206002558151908201206003554660a052620000e8600254600354604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060601b60c0526200030d565b8280546200010890620002ba565b90600052602060002090601f0160209004810192826200012c576000855562000177565b82601f106200014757805160ff191683800117855562000177565b8280016001018555821562000177579182015b82811115620001775782518255916020019190600101906200015a565b506200018592915062000189565b5090565b5b808211156200018557600081556001016200018a565b600082601f830112620001b1578081fd5b81516001600160401b0380821115620001ce57620001ce620002f7565b604051601f8301601f19908116603f01168101908282118183101715620001f957620001f9620002f7565b8160405283815260209250868385880101111562000215578485fd5b8491505b8382101562000238578582018301518183018401529082019062000219565b838211156200024957848385830101525b9695505050505050565b6000806040838503121562000266578182fd5b82516001600160401b03808211156200027d578384fd5b6200028b86838701620001a0565b93506020850151915080821115620002a1578283fd5b50620002b085828601620001a0565b9150509250929050565b600281046001821680620002cf57607f821691505b60208210811415620002f157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b60805160a05160c05160601c61067a62000340600039600061016901526000610193015260006101bd015261067a6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630ff28b0c1461004657806374a640ff1461006c578063f7b2ec0d14610093575b600080fd5b6100596100543660046105b5565b6100be565b6040519081526020015b60405180910390f35b6100597f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81565b6100a66100a13660046105cd565b610112565b6040516001600160a01b039091168152602001610063565b600061010c6100cb61015c565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b60006101548484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061025392505050565b949350505050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156101b557507f000000000000000000000000000000000000000000000000000000000000000046145b156101e157507f0000000000000000000000000000000000000000000000000000000000000000610250565b61024d600254600354604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b90505b90565b60008060006102628585610277565b9150915061026f816102bd565b509392505050565b6000808251604114156102ae5760208301516040840151606085015160001a6102a2878285856104c8565b945094505050506102b6565b506000905060025b9250929050565b60008160048111156102df57634e487b7160e01b600052602160045260246000fd5b14156102ea576104c5565b600181600481111561030c57634e487b7160e01b600052602160045260246000fd5b141561035f5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064015b60405180910390fd5b600281600481111561038157634e487b7160e01b600052602160045260246000fd5b14156103cf5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610356565b60038160048111156103f157634e487b7160e01b600052602160045260246000fd5b141561044a5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610356565b600481600481111561046c57634e487b7160e01b600052602160045260246000fd5b14156104c55760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610356565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156104ff57506000905060036105ac565b8460ff16601b1415801561051757508460ff16601c14155b1561052857506000905060046105ac565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561057c573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166105a5576000600192509250506105ac565b9150600090505b94509492505050565b6000602082840312156105c6578081fd5b5035919050565b6000806000604084860312156105e1578182fd5b83359250602084013567ffffffffffffffff808211156105ff578384fd5b818601915086601f830112610612578384fd5b813581811115610620578485fd5b876020828501011115610631578485fd5b602083019450809350505050925092509256fea2646970667358221220cd79c333dd8a015f924cc0c5d6b7ba547a0df113464a6e418ad7d5254f66077f64736f6c63430008020033";

type EIP712ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EIP712ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EIP712__factory extends ContractFactory {
  constructor(...args: EIP712ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: PromiseOrValue<string>,
    version: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EIP712> {
    return super.deploy(name, version, overrides || {}) as Promise<EIP712>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    version: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, version, overrides || {});
  }
  override attach(address: string): EIP712 {
    return super.attach(address) as EIP712;
  }
  override connect(signer: Signer): EIP712__factory {
    return super.connect(signer) as EIP712__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EIP712Interface {
    return new utils.Interface(_abi) as EIP712Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): EIP712 {
    return new Contract(address, _abi, signerOrProvider) as EIP712;
  }
}
