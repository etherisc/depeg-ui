/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { DIP, DIPInterface } from "../DIP";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SYMBOL",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405180606001604052806028815260200162000ee8602891396040518060400160405280600381526020016204449560ec1b815250816003908051906020019062000060929190620001a3565b50805162000076906004906020840190620001a3565b505050620000b16200008d620000b760201b60201c565b6200009b6012600a620002b1565b620000ab90633b9aca00620003a9565b620000bb565b6200041e565b3390565b6001600160a01b038216620001165760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200012a919062000249565b90915550506001600160a01b038216600090815260208190526040812080548392906200015990849062000249565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001b190620003cb565b90600052602060002090601f016020900481019282620001d5576000855562000220565b82601f10620001f057805160ff191683800117855562000220565b8280016001018555821562000220579182015b828111156200022057825182559160200191906001019062000203565b506200022e92915062000232565b5090565b5b808211156200022e576000815560010162000233565b600082198211156200025f576200025f62000408565b500190565b80825b6001808611620002785750620002a8565b8187048211156200028d576200028d62000408565b808616156200029b57918102915b9490941c93800262000267565b94509492505050565b6000620002c560001960ff851684620002cc565b9392505050565b600082620002dd57506001620002c5565b81620002ec57506000620002c5565b8160018114620003055760028114620003105762000344565b6001915050620002c5565b60ff84111562000324576200032462000408565b6001841b9150848211156200033d576200033d62000408565b50620002c5565b5060208310610133831016604e8410600b84101617156200037c575081810a8381111562000376576200037662000408565b620002c5565b6200038b848484600162000264565b808604821115620003a057620003a062000408565b02949350505050565b6000816000190483118215151615620003c657620003c662000408565b500290565b600281046001821680620003e057607f821691505b602082108114156200040257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b610aba806200042e6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80633950935111610097578063a457c2d711610066578063a457c2d7146101bf578063a9059cbb146101d2578063dd62ed3e146101e5578063f76f8d78146101f8576100f5565b8063395093511461018957806370a082311461019c57806395d89b41146101af578063a3f4df7e146101b7576100f5565b806323b872dd116100d357806323b872dd1461014d5780632e0f2625146101605780632ff2e9dc1461017a578063313ce56714610182576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b61010261021a565b60405161010f919061086a565b60405180910390f35b61012b610126366004610841565b6102ac565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61012b61015b366004610806565b6102c4565b610168601281565b60405160ff909116815260200161010f565b61013f6102ea565b6012610168565b61012b610197366004610841565b610307565b61013f6101aa3660046107ba565b610329565b610102610348565b610102610357565b61012b6101cd366004610841565b610373565b61012b6101e0366004610841565b6103fe565b61013f6101f33660046107d4565b61040c565b6101026040518060400160405280600381526020016204449560ec1b81525081565b60606003805461022990610a0b565b80601f016020809104026020016040519081016040528092919081815260200182805461025590610a0b565b80156102a25780601f10610277576101008083540402835291602001916102a2565b820191906000526020600020905b81548152906001019060200180831161028557829003601f168201915b5050505050905090565b6000336102ba818585610437565b5060019392505050565b6000336102d285828561055b565b6102dd8585856105d5565b60019150505b9392505050565b6102f66012600a61091b565b61030490633b9aca006109ec565b81565b6000336102ba81858561031a838361040c565b61032491906108bd565b610437565b6001600160a01b0381166000908152602081905260409020545b919050565b60606004805461022990610a0b565b604051806060016040528060288152602001610a5d6028913981565b60003381610381828661040c565b9050838110156103e65760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6103f38286868403610437565b506001949350505050565b6000336102ba8185856105d5565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166104995760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103dd565b6001600160a01b0382166104fa5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103dd565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610567848461040c565b905060001981146105cf57818110156105c25760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103dd565b6105cf8484848403610437565b50505050565b6001600160a01b0383166106395760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103dd565b6001600160a01b03821661069b5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103dd565b6001600160a01b038316600090815260208190526040902054818110156107135760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103dd565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061074a9084906108bd565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161079691815260200190565b60405180910390a36105cf565b80356001600160a01b038116811461034357600080fd5b6000602082840312156107cb578081fd5b6102e3826107a3565b600080604083850312156107e6578081fd5b6107ef836107a3565b91506107fd602084016107a3565b90509250929050565b60008060006060848603121561081a578081fd5b610823846107a3565b9250610831602085016107a3565b9150604084013590509250925092565b60008060408385031215610853578182fd5b61085c836107a3565b946020939093013593505050565b6000602080835283518082850152825b818110156108965785810183015185820160400152820161087a565b818111156108a75783604083870101525b50601f01601f1916929092016040019392505050565b600082198211156108d0576108d0610a46565b500190565b80825b60018086116108e75750610912565b8187048211156108f9576108f9610a46565b8086161561090657918102915b9490941c9380026108d8565b94509492505050565b60006102e360001960ff851684600082610937575060016102e3565b81610944575060006102e3565b816001811461095a576002811461096457610991565b60019150506102e3565b60ff84111561097557610975610a46565b6001841b91508482111561098b5761098b610a46565b506102e3565b5060208310610133831016604e8410600b84101617156109c4575081810a838111156109bf576109bf610a46565b6102e3565b6109d184848460016108d5565b8086048211156109e3576109e3610a46565b02949350505050565b6000816000190483118215151615610a0657610a06610a46565b500290565b600281046001821680610a1f57607f821691505b60208210811415610a4057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfe446563656e7472616c697a656420496e737572616e63652050726f746f636f6c202d2044554d4d59a26469706673582212201bd389f6783dbac2df7bbda9df77f8c212aa757f24a6a8c94ff13a4e41ab97a564736f6c63430008020033446563656e7472616c697a656420496e737572616e63652050726f746f636f6c202d2044554d4d59";

type DIPConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DIPConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DIP__factory extends ContractFactory {
  constructor(...args: DIPConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DIP> {
    return super.deploy(overrides || {}) as Promise<DIP>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DIP {
    return super.attach(address) as DIP;
  }
  override connect(signer: Signer): DIP__factory {
    return super.connect(signer) as DIP__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DIPInterface {
    return new utils.Interface(_abi) as DIPInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): DIP {
    return new Contract(address, _abi, signerOrProvider) as DIP;
  }
}
