/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Testli, TestliInterface } from "../Testli";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint8",
        name: "idx",
        type: "uint8",
      },
    ],
    name: "getD1",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
        ],
        internalType: "struct Testli.D1",
        name: "d1",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "idx",
        type: "uint8",
      },
    ],
    name: "getD2",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct Testli.D2",
        name: "d1",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "saveD1",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "saveD2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506106d4806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063251511da14610051578063252b84251461007a5780632553260d1461008f5780637504e303146100a2575b600080fd5b61006461005f366004610567565b6100c2565b60405161007191906105da565b60405180910390f35b61008d6100883660046104b5565b6101d0565b005b61008d61009d3660046104b5565b610250565b6100b56100b0366004610567565b61030e565b6040516100719190610616565b6100e660405180606001604052806060815260200160008152602001600081525090565b60008260ff168154811061010a57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600302016040518060600160405290816000820180546101339061064d565b80601f016020809104026020016040519081016040528092919081815260200182805461015f9061064d565b80156101ac5780601f10610181576101008083540402835291602001916101ac565b820191906000526020600020905b81548152906001019060200180831161018f57829003601f168201915b50505050508152602001600182015481526020016002820154815250509050919050565b60408051606081018252838152602080820184905242928201929092526000805460018101825590805281518051929360039092027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630192610235928492019061041c565b50602082015181600101556040820151816002015550505050565b60408051606081018252828152426020808301918252928201858152600180548082018255600091909152835160039091027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6810191825592517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf78401559051805193949193610307937fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf80192919091019061041c565b5050505050565b61033260405180606001604052806000815260200160008152602001606081525090565b60018260ff168154811061035657634e487b7160e01b600052603260045260246000fd5b906000526020600020906003020160405180606001604052908160008201548152602001600182015481526020016002820180546103939061064d565b80601f01602080910402602001604051908101604052809291908181526020018280546103bf9061064d565b801561040c5780601f106103e15761010080835404028352916020019161040c565b820191906000526020600020905b8154815290600101906020018083116103ef57829003601f168201915b5050505050815250509050919050565b8280546104289061064d565b90600052602060002090601f01602090048101928261044a5760008555610490565b82601f1061046357805160ff1916838001178555610490565b82800160010185558215610490579182015b82811115610490578251825591602001919060010190610475565b5061049c9291506104a0565b5090565b5b8082111561049c57600081556001016104a1565b600080604083850312156104c7578182fd5b823567ffffffffffffffff808211156104de578384fd5b818501915085601f8301126104f1578384fd5b81358181111561050357610503610688565b604051601f8201601f19908116603f0116810190838211818310171561052b5761052b610688565b81604052828152886020848701011115610543578687fd5b82602086016020830137918201602090810196909652509694909301359450505050565b600060208284031215610578578081fd5b813560ff81168114610588578182fd5b9392505050565b60008151808452815b818110156105b457602081850181015186830182015201610598565b818111156105c55782602083870101525b50601f01601f19169290920160200192915050565b6000602082528251606060208401526105f6608084018261058f565b905060208401516040840152604084015160608401528091505092915050565b60006020825282516020830152602083015160408301526040830151606080840152610645608084018261058f565b949350505050565b60028104600182168061066157607f821691505b6020821081141561068257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220016184612b00380a58748e692e31196ab3ff0c4fedb030dc055ac0add0a4e47c64736f6c63430008020033";

type TestliConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestliConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Testli__factory extends ContractFactory {
  constructor(...args: TestliConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Testli> {
    return super.deploy(overrides || {}) as Promise<Testli>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Testli {
    return super.attach(address) as Testli;
  }
  override connect(signer: Signer): Testli__factory {
    return super.connect(signer) as Testli__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestliInterface {
    return new utils.Interface(_abi) as TestliInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Testli {
    return new Contract(address, _abi, signerOrProvider) as Testli;
  }
}
