/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { VersionTest, VersionTestInterface } from "../VersionTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "Version",
        name: "a",
        type: "uint48",
      },
      {
        internalType: "Version",
        name: "b",
        type: "uint48",
      },
    ],
    name: "eq",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Version",
        name: "a",
        type: "uint48",
      },
      {
        internalType: "Version",
        name: "b",
        type: "uint48",
      },
    ],
    name: "gt",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Version",
        name: "a",
        type: "uint48",
      },
      {
        internalType: "Version",
        name: "b",
        type: "uint48",
      },
    ],
    name: "gte",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "p",
        type: "uint16",
      },
    ],
    name: "tp",
    outputs: [
      {
        internalType: "VersionPart",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "VersionPart",
        name: "major",
        type: "uint16",
      },
      {
        internalType: "VersionPart",
        name: "minor",
        type: "uint16",
      },
      {
        internalType: "VersionPart",
        name: "patch",
        type: "uint16",
      },
    ],
    name: "tv",
    outputs: [
      {
        internalType: "Version",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506102c8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806325c5a3341461005c5780633d35284814610084578063bcaff465146100ae578063d0026873146100c1578063ff4561c5146100d4575b600080fd5b61006f61006a3660046101bc565b6100fa565b60405190151581526020015b60405180910390f35b610097610092366004610202565b610114565b60405165ffffffffffff909116815260200161007b565b61006f6100bc3660046101bc565b610129565b61006f6100cf3660046101bc565b61013f565b6100e76100e236600461024d565b610154565b60405161ffff909116815260200161007b565b600065ffffffffffff808416908316145b90505b92915050565b600061012184848461015c565b949350505050565b600065ffffffffffff808316908416101561010b565b600065ffffffffffff8083169084161161010b565b60008161010e565b600061ffff848116908481169084168061018c63ffff0000601089901b1665ffff0000000060208b901b16610271565b6101969190610271565b979650505050505050565b803565ffffffffffff811681146101b757600080fd5b919050565b600080604083850312156101cf57600080fd5b6101d8836101a1565b91506101e6602084016101a1565b90509250929050565b61ffff811681146101ff57600080fd5b50565b60008060006060848603121561021757600080fd5b8335610222816101ef565b92506020840135610232816101ef565b91506040840135610242816101ef565b809150509250925092565b60006020828403121561025f57600080fd5b813561026a816101ef565b9392505050565b8082018082111561010e57634e487b7160e01b600052601160045260246000fdfea264697066735822122085458c9c145b56c0ffe91a0ee333526468b566d370a247195513febb0846ab5564736f6c63430008130033";

type VersionTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VersionTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VersionTest__factory extends ContractFactory {
  constructor(...args: VersionTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VersionTest> {
    return super.deploy(overrides || {}) as Promise<VersionTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): VersionTest {
    return super.attach(address) as VersionTest;
  }
  override connect(signer: Signer): VersionTest__factory {
    return super.connect(signer) as VersionTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VersionTestInterface {
    return new utils.Interface(_abi) as VersionTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VersionTest {
    return new Contract(address, _abi, signerOrProvider) as VersionTest;
  }
}
