/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { ChainNft, ChainNftInterface } from "../ChainNft";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "registry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SYMBOL",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRegistry",
    outputs: [
      {
        internalType: "contract IChainRegistry",
        name: "registry",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "implementsIChainNft",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200213338038062002133833981016040819052620000349162000187565b6040518060600160405280602981526020016200210a602991396040805180820190915260048152632224a82960e11b602082015260006200007783826200025e565b5060016200008682826200025e565b5050506001600160a01b038116620000e45760405162461bcd60e51b815260206004820152601b60248201527f4552524f523a4352472d3031303a52454749535452595f5a45524f0000000000604482015260640160405180910390fd5b600a80546001600160a01b0319166001600160a01b03831617905546600c819055620001109062000153565b600d8190556200012290600a6200043f565b600e556001461480620001355750466005145b1562000146576001600f556200014c565b6002600f555b506200048c565b60005b811562000182578062000169816200044d565b91506200017a9050600a8362000469565b915062000156565b919050565b6000602082840312156200019a57600080fd5b81516001600160a01b0381168114620001b257600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620001e457607f821691505b6020821081036200020557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200025957600081815260208120601f850160051c81016020861015620002345750805b601f850160051c820191505b81811015620002555782815560010162000240565b5050505b505050565b81516001600160401b038111156200027a576200027a620001b9565b62000292816200028b8454620001cf565b846200020b565b602080601f831160018114620002ca5760008415620002b15750858301515b600019600386901b1c1916600185901b17855562000255565b600085815260208120601f198616915b82811015620002fb57888601518255948401946001909101908401620002da565b50858210156200031a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620003815781600019048211156200036557620003656200032a565b808516156200037357918102915b93841c939080029062000345565b509250929050565b6000826200039a5750600162000439565b81620003a95750600062000439565b8160018114620003c25760028114620003cd57620003ed565b600191505062000439565b60ff841115620003e157620003e16200032a565b50506001821b62000439565b5060208310610133831016604e8410600b841016171562000412575081810a62000439565b6200041e838362000340565b80600019048211156200043557620004356200032a565b0290505b92915050565b6000620001b2838362000389565b6000600182016200046257620004626200032a565b5060010190565b6000826200048757634e487b7160e01b600052601260045260246000fd5b500490565b611c6e806200049c6000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80636352211e116100c3578063a3f4df7e1161007c578063a3f4df7e146102ca578063b88d4fde146102d2578063c87b56dd146102e5578063d0def521146102f8578063e985e9c51461030b578063f76f8d781461034757600080fd5b80636352211e1461026f5780636701e8711461028257806370a0823114610289578063862440e21461029c57806395d89b41146102af578063a22cb465146102b757600080fd5b80632f745c59116101155780632f745c59146101ff57806342842e0e1461021257806342966c68146102255780634f558e79146102385780634f6ccce71461024b5780635ab1bd531461025e57600080fd5b806301ffc9a71461015d57806306fdde0314610185578063081812fc1461019a578063095ea7b3146101c557806318160ddd146101da57806323b872dd146101ec575b600080fd5b61017061016b366004611567565b61036a565b60405190151581526020015b60405180910390f35b61018d610395565b60405161017c91906115d1565b6101ad6101a83660046115e4565b610427565b6040516001600160a01b03909116815260200161017c565b6101d86101d3366004611619565b61044e565b005b6008545b60405190815260200161017c565b6101d86101fa366004611643565b610568565b6101de61020d366004611619565b610599565b6101d8610220366004611643565b61062f565b6101d86102333660046115e4565b61064a565b6101706102463660046115e4565b6106a0565b6101de6102593660046115e4565b6106bf565b600a546001600160a01b03166101ad565b6101ad61027d3660046115e4565b610752565b6001610170565b6101de61029736600461167f565b6107b2565b6101d86102aa366004611746565b610838565b61018d6108d4565b6101d86102c536600461178d565b6108e3565b61018d6108f2565b6101d86102e03660046117c9565b61090e565b61018d6102f33660046115e4565b610946565b6101de610306366004611845565b6109ef565b61017061031936600461187d565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61018d604051806040016040528060048152602001632224a82960e11b81525081565b60006001600160e01b0319821663780e9d6360e01b148061038f575061038f82610a56565b92915050565b6060600080546103a4906118b0565b80601f01602080910402602001604051908101604052809291908181526020018280546103d0906118b0565b801561041d5780601f106103f25761010080835404028352916020019161041d565b820191906000526020600020905b81548152906001019060200180831161040057829003601f168201915b5050505050905090565b600061043282610aa6565b506000908152600460205260409020546001600160a01b031690565b600061045982610752565b9050806001600160a01b0316836001600160a01b0316036104cb5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806104e757506104e78133610319565b6105595760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016104c2565b6105638383610b05565b505050565b6105723382610b73565b61058e5760405162461bcd60e51b81526004016104c2906118ea565b610563838383610bf2565b60006105a4836107b2565b82106106065760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016104c2565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6105638383836040518060200160405280600081525061090e565b600a546001600160a01b031633146106745760405162461bcd60e51b81526004016104c290611937565b61067d81610aa6565b61068681610d63565b6000818152600b6020526040812061069d91611503565b50565b6000818152600260205260408120546001600160a01b0316151561038f565b60006106ca60085490565b821061072d5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016104c2565b6008828154811061074057610740611978565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b03168061038f5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016104c2565b60006001600160a01b03821661081c5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016104c2565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b031633146108625760405162461bcd60e51b81526004016104c290611937565b60008151116108b35760405162461bcd60e51b815260206004820152601760248201527f4552524f523a4352472d3031313a5552495f454d50545900000000000000000060448201526064016104c2565b6108bc82610aa6565b6000828152600b6020526040902061056382826119dc565b6060600180546103a4906118b0565b6108ee338383610e06565b5050565b604051806060016040528060298152602001611c106029913981565b6109183383610b73565b6109345760405162461bcd60e51b81526004016104c2906118ea565b61094084848484610ed4565b50505050565b606061095182610aa6565b6000828152600b60205260409020805461096a906118b0565b80601f0160208091040260200160405190810160405280929190818152602001828054610996906118b0565b80156109e35780601f106109b8576101008083540402835291602001916109e3565b820191906000526020600020905b8154815290600101906020018083116109c657829003601f168201915b50505050509050919050565b600a546000906001600160a01b03163314610a1c5760405162461bcd60e51b81526004016104c290611937565b610a24610f07565b9050610a308382610f58565b81511561038f576000818152600b60205260409020610a4f83826119dc565b5092915050565b60006001600160e01b031982166380ac58cd60e01b1480610a8757506001600160e01b03198216635b5e139f60e01b145b8061038f57506301ffc9a760e01b6001600160e01b031983161461038f565b6000818152600260205260409020546001600160a01b031661069d5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016104c2565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610b3a82610752565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610b7f83610752565b9050806001600160a01b0316846001600160a01b03161480610bc657506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610bea5750836001600160a01b0316610bdf84610427565b6001600160a01b0316145b949350505050565b826001600160a01b0316610c0582610752565b6001600160a01b031614610c2b5760405162461bcd60e51b81526004016104c290611a9c565b6001600160a01b038216610c8d5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016104c2565b610c9a8383836001610f72565b826001600160a01b0316610cad82610752565b6001600160a01b031614610cd35760405162461bcd60e51b81526004016104c290611a9c565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000610d6e82610752565b9050610d7e816000846001610f72565b610d8782610752565b600083815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0385168085526003845282852080546000190190558785526002909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b816001600160a01b0316836001600160a01b031603610e675760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104c2565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610edf848484610bf2565b610eeb848484846110a6565b6109405760405162461bcd60e51b81526004016104c290611ae1565b6000600d54600c54600e54600f54610f1f9190611b49565b610f299190611b60565b610f34906064611b49565b610f3e9190611b60565b600f80549192506000610f5083611b73565b919050555090565b6108ee8282604051806020016040528060008152506111a7565b6001811115610fe15760405162461bcd60e51b815260206004820152603560248201527f455243373231456e756d657261626c653a20636f6e7365637574697665207472604482015274185b9cd9995c9cc81b9bdd081cdd5c1c1bdc9d1959605a1b60648201526084016104c2565b816001600160a01b03851661103d5761103881600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b611060565b836001600160a01b0316856001600160a01b0316146110605761106085826111da565b6001600160a01b03841661107c5761107781611277565b61109f565b846001600160a01b0316846001600160a01b03161461109f5761109f8482611326565b5050505050565b60006001600160a01b0384163b1561119c57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906110ea903390899088908890600401611b8c565b6020604051808303816000875af1925050508015611125575060408051601f3d908101601f1916820190925261112291810190611bc9565b60015b611182573d808015611153576040519150601f19603f3d011682016040523d82523d6000602084013e611158565b606091505b50805160000361117a5760405162461bcd60e51b81526004016104c290611ae1565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610bea565b506001949350505050565b6111b1838361136a565b6111be60008484846110a6565b6105635760405162461bcd60e51b81526004016104c290611ae1565b600060016111e7846107b2565b6111f19190611be6565b600083815260076020526040902054909150808214611244576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b60085460009061128990600190611be6565b600083815260096020526040812054600880549394509092849081106112b1576112b1611978565b9060005260206000200154905080600883815481106112d2576112d2611978565b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061130a5761130a611bf9565b6001900381819060005260206000200160009055905550505050565b6000611331836107b2565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160a01b0382166113c05760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016104c2565b6000818152600260205260409020546001600160a01b0316156114255760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104c2565b611433600083836001610f72565b6000818152600260205260409020546001600160a01b0316156114985760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104c2565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b50805461150f906118b0565b6000825580601f1061151f575050565b601f01602090049060005260206000209081019061069d91905b8082111561154d5760008155600101611539565b5090565b6001600160e01b03198116811461069d57600080fd5b60006020828403121561157957600080fd5b813561158481611551565b9392505050565b6000815180845260005b818110156115b157602081850181015186830182015201611595565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000611584602083018461158b565b6000602082840312156115f657600080fd5b5035919050565b80356001600160a01b038116811461161457600080fd5b919050565b6000806040838503121561162c57600080fd5b611635836115fd565b946020939093013593505050565b60008060006060848603121561165857600080fd5b611661846115fd565b925061166f602085016115fd565b9150604084013590509250925092565b60006020828403121561169157600080fd5b611584826115fd565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156116cb576116cb61169a565b604051601f8501601f19908116603f011681019082821181831017156116f3576116f361169a565b8160405280935085815286868601111561170c57600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261173757600080fd5b611584838335602085016116b0565b6000806040838503121561175957600080fd5b82359150602083013567ffffffffffffffff81111561177757600080fd5b61178385828601611726565b9150509250929050565b600080604083850312156117a057600080fd5b6117a9836115fd565b9150602083013580151581146117be57600080fd5b809150509250929050565b600080600080608085870312156117df57600080fd5b6117e8856115fd565b93506117f6602086016115fd565b925060408501359150606085013567ffffffffffffffff81111561181957600080fd5b8501601f8101871361182a57600080fd5b611839878235602084016116b0565b91505092959194509250565b6000806040838503121561185857600080fd5b611861836115fd565b9150602083013567ffffffffffffffff81111561177757600080fd5b6000806040838503121561189057600080fd5b611899836115fd565b91506118a7602084016115fd565b90509250929050565b600181811c908216806118c457607f821691505b6020821081036118e457634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60208082526021908201527f4552524f523a4352472d3030313a43414c4c45525f4e4f545f524547495354526040820152605960f81b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b601f82111561056357600081815260208120601f850160051c810160208610156119b55750805b601f850160051c820191505b818110156119d4578281556001016119c1565b505050505050565b815167ffffffffffffffff8111156119f6576119f661169a565b611a0a81611a0484546118b0565b8461198e565b602080601f831160018114611a3f5760008415611a275750858301515b600019600386901b1c1916600185901b1785556119d4565b600085815260208120601f198616915b82811015611a6e57888601518255948401946001909101908401611a4f565b5085821015611a8c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761038f5761038f611b33565b8082018082111561038f5761038f611b33565b600060018201611b8557611b85611b33565b5060010190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611bbf9083018461158b565b9695505050505050565b600060208284031215611bdb57600080fd5b815161158481611551565b8181038181111561038f5761038f611b33565b634e487b7160e01b600052603160045260246000fdfe44657a656e7472616c697a656420496e737572616e63652050726f746f636f6c205265676973747279a26469706673582212209745299c5eb5852457fd6fe77b8faadbc1c32fc6bef88a861e00a79be8e6d97a64736f6c6343000813003344657a656e7472616c697a656420496e737572616e63652050726f746f636f6c205265676973747279";

type ChainNftConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChainNftConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ChainNft__factory extends ContractFactory {
  constructor(...args: ChainNftConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    registry: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ChainNft> {
    return super.deploy(registry, overrides || {}) as Promise<ChainNft>;
  }
  override getDeployTransaction(
    registry: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(registry, overrides || {});
  }
  override attach(address: string): ChainNft {
    return super.attach(address) as ChainNft;
  }
  override connect(signer: Signer): ChainNft__factory {
    return super.connect(signer) as ChainNft__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChainNftInterface {
    return new utils.Interface(_abi) as ChainNftInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChainNft {
    return new Contract(address, _abi, signerOrProvider) as ChainNft;
  }
}
