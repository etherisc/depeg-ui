/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IInstanceServiceFacade,
  IInstanceServiceFacadeInterface,
} from "../IInstanceServiceFacade";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
    ],
    name: "getBundle",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "riskpoolId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "enum IInstanceServiceFacade.BundleState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "filter",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "capital",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockedCapital",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct IInstanceServiceFacade.Bundle",
        name: "bundle",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "componentId",
        type: "uint256",
      },
    ],
    name: "getComponent",
    outputs: [
      {
        internalType: "contract IComponent",
        name: "component",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "componentId",
        type: "uint256",
      },
    ],
    name: "getComponentState",
    outputs: [
      {
        internalType: "enum IInstanceServiceFacade.ComponentState",
        name: "componentState",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "componentId",
        type: "uint256",
      },
    ],
    name: "getComponentToken",
    outputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "token",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "componentId",
        type: "uint256",
      },
    ],
    name: "getComponentType",
    outputs: [
      {
        internalType: "enum IInstanceServiceFacade.ComponentType",
        name: "componentType",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getInstanceId",
    outputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getInstanceOperator",
    outputs: [
      {
        internalType: "address",
        name: "instanceOperator",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IInstanceServiceFacade__factory {
  static readonly abi = _abi;
  static createInterface(): IInstanceServiceFacadeInterface {
    return new utils.Interface(_abi) as IInstanceServiceFacadeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IInstanceServiceFacade {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IInstanceServiceFacade;
  }
}
