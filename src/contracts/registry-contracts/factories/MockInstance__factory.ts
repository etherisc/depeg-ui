/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { MockInstance, MockInstanceInterface } from "../MockInstance";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
    ],
    name: "getBundle",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "riskpoolId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "enum IInstanceServiceFacade.BundleState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "filter",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "capital",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockedCapital",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct IInstanceServiceFacade.Bundle",
        name: "bundle",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "componentId",
        type: "uint256",
      },
    ],
    name: "getComponent",
    outputs: [
      {
        internalType: "contract IComponent",
        name: "component",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "componentId",
        type: "uint256",
      },
    ],
    name: "getComponentState",
    outputs: [
      {
        internalType: "enum IInstanceServiceFacade.ComponentState",
        name: "componentState",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "componentId",
        type: "uint256",
      },
    ],
    name: "getComponentToken",
    outputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "token",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "componentId",
        type: "uint256",
      },
    ],
    name: "getComponentType",
    outputs: [
      {
        internalType: "enum IInstanceServiceFacade.ComponentType",
        name: "componentType",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getInstanceId",
    outputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getInstanceOperator",
    outputs: [
      {
        internalType: "address",
        name: "instanceOperator",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRegistry",
    outputs: [
      {
        internalType: "contract MockInstanceRegistry",
        name: "registry",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "riskpoolId",
        type: "uint256",
      },
      {
        internalType: "enum IInstanceServiceFacade.BundleState",
        name: "state",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "capital",
        type: "uint256",
      },
    ],
    name: "setBundleInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "componentId",
        type: "uint256",
      },
      {
        internalType: "enum IInstanceServiceFacade.ComponentType",
        name: "t",
        type: "uint8",
      },
      {
        internalType: "enum IInstanceServiceFacade.ComponentState",
        name: "state",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "setComponentInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a336100b5565b60405161002690610105565b604051809103906000f080158015610042573d6000803e3d6000fd5b50600380546001600160a01b0319166001600160a01b0392909216918217905560405163e8f4ce0f60e01b815230600482015263e8f4ce0f90602401600060405180830381600087803b15801561009857600080fd5b505af11580156100ac573d6000803e3d6000fd5b50505050610112565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6101c180610b8d83390190565b610a6c806101216000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80635e966e451161008c5780638da5cb5b116100665780638da5cb5b1461015b578063c8987a93146101e7578063dd51c86a146101fa578063f2fde38b1461021a57600080fd5b80635e966e4514610191578063616ea626146101ca578063715018a6146101df57600080fd5b80633408e470116100c85780633408e4701461015557806339c6fa901461015b5780634f27da181461016c5780635ab1bd531461018057600080fd5b8063038696bb146100ef5780631551100f1461011f5780632d0821b714610135575b600080fd5b6101026100fd3660046107d4565b61022d565b6040516001600160a01b0390911681526020015b60405180910390f35b6101276102c5565b604051908152602001610116565b6101486101433660046107d4565b61031c565b604051610116919061085d565b46610127565b6000546001600160a01b0316610102565b61010261017a3660046107d4565b50600090565b6003546001600160a01b0316610102565b6101bd61019f3660046107d4565b60009081526001602081905260409091200154610100900460ff1690565b60405161011691906108f4565b6101dd6101d836600461092a565b6104cf565b005b6101dd610566565b6101dd6101f5366004610983565b61057a565b61020d6102083660046107d4565b6105d8565b60405161011691906109c6565b6101dd6102283660046109da565b61064d565b6000818152600160208190526040822001546201000090046001600160a01b031661029f5760405162461bcd60e51b815260206004820152601f60248201527f4552524f523a4449532d3032303a434f4d504f4e454e545f554e4b4e4f574e0060448201526064015b60405180910390fd5b50600090815260016020819052604090912001546201000090046001600160a01b031690565b6003546040516000916103019146916001600160a01b03169060200191825260601b6bffffffffffffffffffffffff1916602082015260340190565b60405160208183030381529060405280519060200120905090565b610324610770565b60008281526002602052604090206008015461038e5760405162461bcd60e51b815260206004820152602360248201527f4552524f523a4449532d3033303a42554e444c455f444f45535f4e4f545f45586044820152621254d560ea1b6064820152608401610296565b60026000838152602001908152602001600020604051806101400160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff1660038111156103ef576103ef6107ed565b6003811115610400576104006107ed565b8152602001600482018054610414906109fc565b80601f0160208091040260200160405190810160405280929190818152602001828054610440906109fc565b801561048d5780601f106104625761010080835404028352916020019161048d565b820191906000526020600020905b81548152906001019060200180831161047057829003601f168201915b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820154815250509050919050565b6104d76106c6565b600084815260016020819052604090912085815580820180549192869260ff19169083600281111561050b5761050b6107ed565b021790555060018101805484919061ff001916610100836006811115610533576105336107ed565b021790555060010180546001600160a01b03909216620100000262010000600160b01b0319909216919091179055505050565b61056e6106c6565b6105786000610720565b565b6105826106c6565b60008481526002602052604090208481556001808201859055600380830180548693919260ff19909116919084908111156105bf576105bf6107ed565b0217905550600581019190915542600890910155505050565b6000818152600160205260408120546106335760405162461bcd60e51b815260206004820152601f60248201527f4552524f523a4449532d3031303a434f4d504f4e454e545f554e4b4e4f574e006044820152606401610296565b506000908152600160208190526040909120015460ff1690565b6106556106c6565b6001600160a01b0381166106ba5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610296565b6106c381610720565b50565b6000546001600160a01b031633146105785760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610296565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604051806101400160405280600081526020016000815260200160008152602001600060038111156107a4576107a46107ed565b81526020016060815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000602082840312156107e657600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b60048110610813576108136107ed565b9052565b6000815180845260005b8181101561083d57602081850181015186830182015201610821565b506000602082860101526020601f19601f83011685010191505092915050565b60208152815160208201526020820151604082015260408201516060820152600060608301516108906080840182610803565b5060808301516101408060a08501526108ad610160850183610817565b915060a085015160c085015260c085015160e085015260e0850151610100818187015280870151915050610120818187015280870151838701525050508091505092915050565b6020810160078310610908576109086107ed565b91905290565b80356001600160a01b038116811461092557600080fd5b919050565b6000806000806080858703121561094057600080fd5b8435935060208501356003811061095657600080fd5b925060408501356007811061096a57600080fd5b91506109786060860161090e565b905092959194509250565b6000806000806080858703121561099957600080fd5b84359350602085013592506040850135600481106109b657600080fd5b9396929550929360600135925050565b6020810160038310610908576109086107ed565b6000602082840312156109ec57600080fd5b6109f58261090e565b9392505050565b600181811c90821680610a1057607f821691505b602082108103610a3057634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220469b4832a340f7dd5f4dab6b54ba7f9ad093cc6a230931d7c6886f2a935f251864736f6c63430008130033608060405234801561001057600080fd5b506101a1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063e16c7d981461003b578063e8f4ce0f1461006a575b600080fd5b61004e610049366004610122565b61009c565b6040516001600160a01b03909116815260200160405180910390f35b61009a61007836600461013b565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b005b60006e496e7374616e63655365727669636560881b82146101115760405162461bcd60e51b815260206004820152602560248201527f4552524f523a4452472d3030313a434f4e54524143545f4e4f545f5245474953604482015264151154915160da1b606482015260840160405180910390fd5b50506000546001600160a01b031690565b60006020828403121561013457600080fd5b5035919050565b60006020828403121561014d57600080fd5b81356001600160a01b038116811461016457600080fd5b939250505056fea2646970667358221220b83fd0009b293befb2c535c1288cb11f878dacb41ce9987fe007602f4b5ec04964736f6c63430008130033";

type MockInstanceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockInstanceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockInstance__factory extends ContractFactory {
  constructor(...args: MockInstanceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockInstance> {
    return super.deploy(overrides || {}) as Promise<MockInstance>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockInstance {
    return super.attach(address) as MockInstance;
  }
  override connect(signer: Signer): MockInstance__factory {
    return super.connect(signer) as MockInstance__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockInstanceInterface {
    return new utils.Interface(_abi) as MockInstanceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockInstance {
    return new Contract(address, _abi, signerOrProvider) as MockInstance;
  }
}
