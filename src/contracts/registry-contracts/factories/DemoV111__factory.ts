/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { DemoV111, DemoV111Interface } from "../DemoV111";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "Version",
        name: "version",
        type: "uint48",
      },
      {
        indexed: false,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "activatedBy",
        type: "address",
      },
    ],
    name: "LogVersionableActivated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "activate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "activateAndSetOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "blockNumber",
    outputs: [
      {
        internalType: "Blocknumber",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
    ],
    name: "getVersion",
    outputs: [
      {
        internalType: "Version",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Version",
        name: "_version",
        type: "uint48",
      },
    ],
    name: "getVersionInfo",
    outputs: [
      {
        components: [
          {
            internalType: "Version",
            name: "version",
            type: "uint48",
          },
          {
            internalType: "address",
            name: "implementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "activatedBy",
            type: "address",
          },
          {
            internalType: "Blocknumber",
            name: "activatedIn",
            type: "uint32",
          },
          {
            internalType: "Timestamp",
            name: "activatedAt",
            type: "uint40",
          },
        ],
        internalType: "struct Versionable.VersionInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "shift",
        type: "uint8",
      },
    ],
    name: "intToBytes",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Version",
        name: "_version",
        type: "uint48",
      },
    ],
    name: "isActivated",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "message",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ping",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newMessage",
        type: "string",
      },
    ],
    name: "setMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "ChainId",
        name: "x",
        type: "bytes5",
      },
    ],
    name: "toInt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Blocknumber",
        name: "x",
        type: "uint32",
      },
    ],
    name: "toInt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Timestamp",
        name: "x",
        type: "uint40",
      },
    ],
    name: "toInt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upgradable",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "value",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "Version",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "versionParts",
    outputs: [
      {
        internalType: "VersionPart",
        name: "major",
        type: "uint16",
      },
      {
        internalType: "VersionPart",
        name: "minor",
        type: "uint16",
      },
      {
        internalType: "VersionPart",
        name: "patch",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "versions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506200001d306200013f565b600254610100900460ff16158080156200003e5750600254600160ff909116105b806200005a5750303b1580156200005a575060025460ff166001145b620000c35760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6002805460ff191660011790558015620000e7576002805461ff0019166101001790555b620000f162000444565b801562000138576002805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5062000631565b3260006200014c620004ac565b65ffffffffffff8116600090815260208190526040902060010154909150600160a01b900463ffffffff1615620001d65760405162461bcd60e51b815260206004820152602760248201527f4552524f523a56524e2d3030313a56455253494f4e5f414c52454144595f41436044820152661512559055115160ca1b6064820152608401620000ba565b6001541562000299576001805460009190620001f4908290620005ef565b8154811062000207576200020762000605565b90600052602060002090600591828204019190066006029054906101000a900465ffffffffffff1690506200023d8282620004c2565b620002975760405162461bcd60e51b8152602060048201526024808201527f4552524f523a56524e2d3030323a56455253494f4e5f4e4f545f494e4352454160448201526353494e4760e01b6064820152608401620000ba565b505b60018054808201825560009190915260058082047fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf601805465ffffffffffff808616600694909506939093026101000a848102930219169190911790556040805160a0810182529182526001600160a01b03808616602084015284169082015260608101620003254390565b63ffffffff1681526020014264ffffffffff90811690915265ffffffffffff8084166000908152602081815260409182902085518154928701516001600160a01b039081166601000000000000026001600160d01b0319909416919095161791909117815584820151600190910180546060870151608090970151909516600160c01b0264ffffffffff60c01b1963ffffffff909716600160a01b026001600160c01b031990961692909416919091179390931793909316179055517ff7b17693e830f8b239607e857ac81b076450829d544c053d533d1b278d18cd8990620004379083908690869065ffffffffffff9390931683526001600160a01b03918216602084015216604082015260600190565b60405180910390a1505050565b600254610100900460ff16620004a05760405162461bcd60e51b815260206004820152602b60248201526000805160206200189183398151915260448201526a6e697469616c697a696e6760a81b6064820152608401620000ba565b620004aa620004d7565b565b6000620004bd60018060016200053e565b905090565b65ffffffffffff808216908316115b92915050565b600254610100900460ff16620005335760405162461bcd60e51b815260206004820152602b60248201526000805160206200189183398151915260448201526a6e697469616c697a696e6760a81b6064820152608401620000ba565b620004aa3362000587565b600061ffff84811690848116908416806200057063ffff0000601089901b1665ffff0000000060208b901b166200061b565b6200057c91906200061b565b979650505050505050565b603580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052601160045260246000fd5b81810381811115620004d157620004d1620005d9565b634e487b7160e01b600052603260045260246000fd5b80820180821115620004d157620004d1620005d9565b61125080620006416000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80638da5cb5b116100b8578063da09d4841161007c578063da09d484146102b6578063de788b2c146102ce578063e21f37ce14610341578063f2fde38b14610349578063f4d26fec1461035c578063f8b1cb3c1461036457600080fd5b80638da5cb5b14610225578063aa615ec814610240578063b88da75914610263578063bd4080ec14610276578063cd8e8d23146102a357600080fd5b806357e871e7116100ff57806357e871e7146101be5780635c36b186146101d257806366362612146101f25780636effeac414610206578063715018a61461021d57600080fd5b80631080d8951461013c5780631c5a9d9c14610165578063368b87721461017a5780633fa4f2451461018d57806354fd4d501461019f575b600080fd5b61014f61014a366004610d43565b61036c565b60405161015c9190610dbf565b60405180910390f35b610178610173366004610df5565b6103a2565b005b610178610188366004610e26565b6103ae565b6068545b60405190815260200161015c565b6101a76103c6565b60405165ffffffffffff909116815260200161015c565b60405163ffffffff4316815260200161015c565b604080518082019091526004815263706f6e6760e01b602082015261014f565b610191610200366004610ed7565b60d81c90565b610191610214366004610f01565b63ffffffff1690565b6101786103da565b6035546040516001600160a01b03909116815260200161015c565b61025361024e366004610f27565b6103ee565b604051901515815260200161015c565b6101a7610271366004610f4f565b61041a565b61027e6104b5565b6040805161ffff9485168152928416602084015292169181019190915260600161015c565b6101786102b1366004610f68565b6104d5565b6101916102c4366004610f9b565b64ffffffffff1690565b6102e16102dc366004610f27565b6105e9565b60408051825165ffffffffffff1681526020808401516001600160a01b039081169183019190915283830151169181019190915260608083015163ffffffff169082015260809182015164ffffffffff169181019190915260a00161015c565b61014f6106e6565b610178610357366004610df5565b610778565b61014f6107ee565b600154610191565b6040805160ff831684901b60f01b6001600160f01b03191660208201528151600281830301815260229091019091525b92915050565b6103ab8161080e565b50565b6103b6610ae1565b60676103c2828261104a565b5050565b60006103d56001806001610b3b565b905090565b6103e2610ae1565b6103ec6000610b80565b565b65ffffffffffff16600090815260208190526040902060010154600160a01b900463ffffffff16151590565b60015460009082106104735760405162461bcd60e51b815260206004820152601d60248201527f4552524f523a56524e2d3031303a494e4445585f544f4f5f4c4152474500000060448201526064015b60405180910390fd5b600182815481106104865761048661110a565b90600052602060002090600591828204019190066006029054906101000a900465ffffffffffff169050919050565b60008060006104ca6104c56103c6565b610bd2565b925092509250909192565b600254610100900460ff16158080156104f55750600254600160ff909116105b8061050f5750303b15801561050f575060025460ff166001145b61052b5760405162461bcd60e51b815260040161046a90611120565b6002805460ff19166001179055801561054e576002805461ff0019166101001790555b6105588383610c14565b6040518060400160405280602081526020017f7370656369616c206d657373616765202d20617320696e697469616c697a65648152506067908161059c919061104a565b5080156105e4576002805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a15b505050565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915261061d826103ee565b6106695760405162461bcd60e51b815260206004820152601d60248201527f4552524f523a56524e2d3032303a56455253494f4e5f554e4b4e4f574e000000604482015260640161046a565b5065ffffffffffff90811660009081526020818152604091829020825160a0810184528154948516815266010000000000009094046001600160a01b03908116928501929092526001015490811691830191909152600160a01b810463ffffffff166060830152600160c01b900464ffffffffff16608082015290565b6060606780546106f590610fc2565b80601f016020809104026020016040519081016040528092919081815260200182805461072190610fc2565b801561076e5780601f106107435761010080835404028352916020019161076e565b820191906000526020600020905b81548152906001019060200180831161075157829003601f168201915b5050505050905090565b610780610ae1565b6001600160a01b0381166107e55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161046a565b6103ab81610b80565b60606040518060600160405280602581526020016111f660259139905090565b3260006108196103c6565b9050610824816103ee565b156108815760405162461bcd60e51b815260206004820152602760248201527f4552524f523a56524e2d3030313a56455253494f4e5f414c52454144595f41436044820152661512559055115160ca1b606482015260840161046a565b6001541561094557600180546000919061089c908290611184565b815481106108ac576108ac61110a565b90600052602060002090600591828204019190066006029054906101000a900465ffffffffffff1690506108eb828265ffffffffffff90811691161190565b6109435760405162461bcd60e51b8152602060048201526024808201527f4552524f523a56524e2d3030323a56455253494f4e5f4e4f545f494e4352454160448201526353494e4760e01b606482015260840161046a565b505b60018054808201825560009190915260058082047fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf601805465ffffffffffff808616600694909506939093026101000a848102930219169190911790556040805160a0810182529182526001600160a01b038086166020840152841690820152606081016109d04390565b63ffffffff1681526020014264ffffffffff90811690915265ffffffffffff8084166000908152602081815260409182902085518154928701516001600160a01b039081166601000000000000026001600160d01b0319909416919095161791909117815584820151600190910180546060870151608090970151909516600160c01b0264ffffffffff60c01b1963ffffffff909716600160a01b026001600160c01b031990961692909416919091179390931793909316179055517ff7b17693e830f8b239607e857ac81b076450829d544c053d533d1b278d18cd89906105db9083908690869065ffffffffffff9390931683526001600160a01b03918216602084015216604082015260600190565b6035546001600160a01b031633146103ec5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161046a565b600061ffff8481169084811690841680610b6b63ffff0000601089901b1665ffff0000000060208b901b16611197565b610b759190611197565b979650505050505050565b603580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000808065ffffffffffff841661ffff602086901c16610bf28383611184565b9150601082901c6000610c058185611184565b92989197509195509350505050565b600254610100900460ff1615808015610c345750600254600160ff909116105b80610c4e5750303b158015610c4e575060025460ff166001145b610c6a5760405162461bcd60e51b815260040161046a90611120565b6002805460ff191660011790558015610c8d576002805461ff0019166101001790555b610c968361080e565b610c9e610ce9565b610ca782610778565b80156105e4576002805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020016105db565b600254610100900460ff16610d105760405162461bcd60e51b815260040161046a906111aa565b6103ec600254610100900460ff16610d3a5760405162461bcd60e51b815260040161046a906111aa565b6103ec33610b80565b60008060408385031215610d5657600080fd5b82359150602083013560ff81168114610d6e57600080fd5b809150509250929050565b6000815180845260005b81811015610d9f57602081850181015186830182015201610d83565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610dd26020830184610d79565b9392505050565b80356001600160a01b0381168114610df057600080fd5b919050565b600060208284031215610e0757600080fd5b610dd282610dd9565b634e487b7160e01b600052604160045260246000fd5b600060208284031215610e3857600080fd5b813567ffffffffffffffff80821115610e5057600080fd5b818401915084601f830112610e6457600080fd5b813581811115610e7657610e76610e10565b604051601f8201601f19908116603f01168101908382118183101715610e9e57610e9e610e10565b81604052828152876020848701011115610eb757600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208284031215610ee957600080fd5b81356001600160d81b031981168114610dd257600080fd5b600060208284031215610f1357600080fd5b813563ffffffff81168114610dd257600080fd5b600060208284031215610f3957600080fd5b813565ffffffffffff81168114610dd257600080fd5b600060208284031215610f6157600080fd5b5035919050565b60008060408385031215610f7b57600080fd5b610f8483610dd9565b9150610f9260208401610dd9565b90509250929050565b600060208284031215610fad57600080fd5b813564ffffffffff81168114610dd257600080fd5b600181811c90821680610fd657607f821691505b602082108103610ff657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156105e457600081815260208120601f850160051c810160208610156110235750805b601f850160051c820191505b818110156110425782815560010161102f565b505050505050565b815167ffffffffffffffff81111561106457611064610e10565b611078816110728454610fc2565b84610ffc565b602080601f8311600181146110ad57600084156110955750858301515b600019600386901b1c1916600185901b178555611042565b600085815260208120601f198616915b828110156110dc578886015182559484019460019091019084016110bd565b50858210156110fa5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b8181038181111561039c5761039c61116e565b8082018082111561039c5761039c61116e565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fe6865792066726f6d2075706772616461626c6544656d6f202d2044656d6f2076312e312e30a2646970667358221220478ce19ac9856be0db5058b2cbfe6167114c08d74ceefa437a91bbfb7d1b63c264736f6c63430008130033496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069";

type DemoV111ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DemoV111ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DemoV111__factory extends ContractFactory {
  constructor(...args: DemoV111ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DemoV111> {
    return super.deploy(overrides || {}) as Promise<DemoV111>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DemoV111 {
    return super.attach(address) as DemoV111;
  }
  override connect(signer: Signer): DemoV111__factory {
    return super.connect(signer) as DemoV111__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DemoV111Interface {
    return new utils.Interface(_abi) as DemoV111Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DemoV111 {
    return new Contract(address, _abi, signerOrProvider) as DemoV111;
  }
}
