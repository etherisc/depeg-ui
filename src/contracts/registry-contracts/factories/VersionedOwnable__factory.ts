/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  VersionedOwnable,
  VersionedOwnableInterface,
} from "../VersionedOwnable";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "Version",
        name: "version",
        type: "uint48",
      },
      {
        indexed: false,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "activatedBy",
        type: "address",
      },
    ],
    name: "LogVersionableActivated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "activate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "activateAndSetOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "blockNumber",
    outputs: [
      {
        internalType: "Blocknumber",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
    ],
    name: "getVersion",
    outputs: [
      {
        internalType: "Version",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Version",
        name: "_version",
        type: "uint48",
      },
    ],
    name: "getVersionInfo",
    outputs: [
      {
        components: [
          {
            internalType: "Version",
            name: "version",
            type: "uint48",
          },
          {
            internalType: "address",
            name: "implementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "activatedBy",
            type: "address",
          },
          {
            internalType: "Blocknumber",
            name: "activatedIn",
            type: "uint32",
          },
          {
            internalType: "Timestamp",
            name: "activatedAt",
            type: "uint40",
          },
        ],
        internalType: "struct Versionable.VersionInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "shift",
        type: "uint8",
      },
    ],
    name: "intToBytes",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Version",
        name: "_version",
        type: "uint48",
      },
    ],
    name: "isActivated",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "ChainId",
        name: "x",
        type: "bytes5",
      },
    ],
    name: "toInt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Blocknumber",
        name: "x",
        type: "uint32",
      },
    ],
    name: "toInt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Timestamp",
        name: "x",
        type: "uint40",
      },
    ],
    name: "toInt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "Version",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "versionParts",
    outputs: [
      {
        internalType: "VersionPart",
        name: "major",
        type: "uint16",
      },
      {
        internalType: "VersionPart",
        name: "minor",
        type: "uint16",
      },
      {
        internalType: "VersionPart",
        name: "patch",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "versions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506200001d306200013f565b600254610100900460ff16158080156200003e5750600254600160ff909116105b806200005a5750303b1580156200005a575060025460ff166001145b620000c35760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6002805460ff191660011790558015620000e7576002805461ff0019166101001790555b620000f162000444565b801562000138576002805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b506200063c565b3260006200014c620004ac565b65ffffffffffff8116600090815260208190526040902060010154909150600160a01b900463ffffffff1615620001d65760405162461bcd60e51b815260206004820152602760248201527f4552524f523a56524e2d3030313a56455253494f4e5f414c52454144595f41436044820152661512559055115160ca1b6064820152608401620000ba565b6001541562000299576001805460009190620001f4908290620005fa565b8154811062000207576200020762000610565b90600052602060002090600591828204019190066006029054906101000a900465ffffffffffff1690506200023d8282620004bd565b620002975760405162461bcd60e51b8152602060048201526024808201527f4552524f523a56524e2d3030323a56455253494f4e5f4e4f545f494e4352454160448201526353494e4760e01b6064820152608401620000ba565b505b60018054808201825560009190915260058082047fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf601805465ffffffffffff808616600694909506939093026101000a848102930219169190911790556040805160a0810182529182526001600160a01b03808616602084015284169082015260608101620003254390565b63ffffffff1681526020014264ffffffffff90811690915265ffffffffffff8084166000908152602081815260409182902085518154928701516001600160a01b039081166601000000000000026001600160d01b0319909416919095161791909117815584820151600190910180546060870151608090970151909516600160c01b0264ffffffffff60c01b1963ffffffff909716600160a01b026001600160c01b031990961692909416919091179390931793909316179055517ff7b17693e830f8b239607e857ac81b076450829d544c053d533d1b278d18cd8990620004379083908690869065ffffffffffff9390931683526001600160a01b03918216602084015216604082015260600190565b60405180910390a1505050565b600254610100900460ff16620004a05760405162461bcd60e51b815260206004820152602b60248201526000805160206200142383398151915260448201526a6e697469616c697a696e6760a81b6064820152608401620000ba565b620004aa620004d2565b565b6000620004b862000539565b905090565b65ffffffffffff808216908316115b92915050565b600254610100900460ff166200052e5760405162461bcd60e51b815260206004820152602b60248201526000805160206200142383398151915260448201526a6e697469616c697a696e6760a81b6064820152608401620000ba565b620004aa3362000549565b6000620004b8816000806200059b565b603580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600061ffff8481169084811690841680620005cd63ffff0000601089901b1665ffff0000000060208b901b1662000626565b620005d9919062000626565b979650505050505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115620004cc57620004cc620005e4565b634e487b7160e01b600052603260045260246000fd5b80820180821115620004cc57620004cc620005e4565b610dd7806200064c6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063aa615ec811610097578063da09d48411610066578063da09d48414610248578063de788b2c14610260578063f2fde38b146102d3578063f8b1cb3c146102e657600080fd5b8063aa615ec8146101d2578063b88da759146101f5578063bd4080ec14610208578063cd8e8d231461023557600080fd5b806366362612116100d357806366362612146101765780636effeac414610198578063715018a6146101af5780638da5cb5b146101b757600080fd5b80631080d895146101055780631c5a9d9c1461012e57806354fd4d501461014357806357e871e714610162575b600080fd5b610118610113366004610b57565b6102ee565b6040516101259190610b8d565b60405180910390f35b61014161013c366004610bf7565b610324565b005b61014b610330565b60405165ffffffffffff9091168152602001610125565b60405163ffffffff43168152602001610125565b61018a610184366004610c19565b60d81c90565b604051908152602001610125565b61018a6101a6366004610c43565b63ffffffff1690565b61014161033f565b6035546040516001600160a01b039091168152602001610125565b6101e56101e0366004610c69565b610353565b6040519015158152602001610125565b61014b610203366004610c91565b61037f565b61021061041a565b6040805161ffff94851681529284166020840152921691810191909152606001610125565b610141610243366004610caa565b61043a565b61018a610256366004610cdd565b64ffffffffff1690565b61027361026e366004610c69565b610448565b60408051825165ffffffffffff1681526020808401516001600160a01b039081169183019190915283830151169181019190915260608083015163ffffffff169082015260809182015164ffffffffff169181019190915260a001610125565b6101416102e1366004610bf7565b610545565b60015461018a565b6040805160ff831684901b60f01b6001600160f01b03191660208201528151600281830301815260229091019091525b92915050565b61032d816105bb565b50565b600061033a61089b565b905090565b6103476108a9565b6103516000610903565b565b65ffffffffffff16600090815260208190526040902060010154600160a01b900463ffffffff16151590565b60015460009082106103d85760405162461bcd60e51b815260206004820152601d60248201527f4552524f523a56524e2d3031303a494e4445585f544f4f5f4c4152474500000060448201526064015b60405180910390fd5b600182815481106103eb576103eb610d04565b90600052602060002090600591828204019190066006029054906101000a900465ffffffffffff169050919050565b600080600061042f61042a610330565b610955565b925092509250909192565b6104448282610997565b5050565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915261047c82610353565b6104c85760405162461bcd60e51b815260206004820152601d60248201527f4552524f523a56524e2d3032303a56455253494f4e5f554e4b4e4f574e00000060448201526064016103cf565b5065ffffffffffff90811660009081526020818152604091829020825160a0810184528154948516815266010000000000009094046001600160a01b03908116928501929092526001015490811691830191909152600160a01b810463ffffffff166060830152600160c01b900464ffffffffff16608082015290565b61054d6108a9565b6001600160a01b0381166105b25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103cf565b61032d81610903565b3260006105c6610330565b90506105d181610353565b1561062e5760405162461bcd60e51b815260206004820152602760248201527f4552524f523a56524e2d3030313a56455253494f4e5f414c52454144595f41436044820152661512559055115160ca1b60648201526084016103cf565b600154156106f2576001805460009190610649908290610d30565b8154811061065957610659610d04565b90600052602060002090600591828204019190066006029054906101000a900465ffffffffffff169050610698828265ffffffffffff90811691161190565b6106f05760405162461bcd60e51b8152602060048201526024808201527f4552524f523a56524e2d3030323a56455253494f4e5f4e4f545f494e4352454160448201526353494e4760e01b60648201526084016103cf565b505b60018054808201825560009190915260058082047fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf601805465ffffffffffff808616600694909506939093026101000a848102930219169190911790556040805160a0810182529182526001600160a01b0380861660208401528416908201526060810161077d4390565b63ffffffff1681526020014264ffffffffff90811690915265ffffffffffff8084166000908152602081815260409182902085518154928701516001600160a01b039081166601000000000000026001600160d01b0319909416919095161791909117815584820151600190910180546060870151608090970151909516600160c01b0264ffffffffff60c01b1963ffffffff909716600160a01b026001600160c01b031990961692909416919091179390931793909316179055517ff7b17693e830f8b239607e857ac81b076450829d544c053d533d1b278d18cd899061088e9083908690869065ffffffffffff9390931683526001600160a01b03918216602084015216604082015260600190565b60405180910390a1505050565b600061033a81600080610ab8565b6035546001600160a01b031633146103515760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103cf565b603580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000808065ffffffffffff841661ffff602086901c166109758383610d30565b9150601082901c60006109888185610d30565b92989197509195509350505050565b600254610100900460ff16158080156109b75750600254600160ff909116105b806109d15750303b1580156109d1575060025460ff166001145b610a345760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103cf565b6002805460ff191660011790558015610a57576002805461ff0019166101001790555b610a60836105bb565b610a68610afd565b610a7182610545565b8015610ab3576002805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200161088e565b505050565b600061ffff8481169084811690841680610ae863ffff0000601089901b1665ffff0000000060208b901b16610d43565b610af29190610d43565b979650505050505050565b600254610100900460ff16610b245760405162461bcd60e51b81526004016103cf90610d56565b610351600254610100900460ff16610b4e5760405162461bcd60e51b81526004016103cf90610d56565b61035133610903565b60008060408385031215610b6a57600080fd5b82359150602083013560ff81168114610b8257600080fd5b809150509250929050565b600060208083528351808285015260005b81811015610bba57858101830151858201604001528201610b9e565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610bf257600080fd5b919050565b600060208284031215610c0957600080fd5b610c1282610bdb565b9392505050565b600060208284031215610c2b57600080fd5b81356001600160d81b031981168114610c1257600080fd5b600060208284031215610c5557600080fd5b813563ffffffff81168114610c1257600080fd5b600060208284031215610c7b57600080fd5b813565ffffffffffff81168114610c1257600080fd5b600060208284031215610ca357600080fd5b5035919050565b60008060408385031215610cbd57600080fd5b610cc683610bdb565b9150610cd460208401610bdb565b90509250929050565b600060208284031215610cef57600080fd5b813564ffffffffff81168114610c1257600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111561031e5761031e610d1a565b8082018082111561031e5761031e610d1a565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea264697066735822122052f9479a50b319e379f8b498295cd1011d267bfb8460f6cc4144e71f0dd78b0864736f6c63430008130033496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069";

type VersionedOwnableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VersionedOwnableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VersionedOwnable__factory extends ContractFactory {
  constructor(...args: VersionedOwnableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VersionedOwnable> {
    return super.deploy(overrides || {}) as Promise<VersionedOwnable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): VersionedOwnable {
    return super.attach(address) as VersionedOwnable;
  }
  override connect(signer: Signer): VersionedOwnable__factory {
    return super.connect(signer) as VersionedOwnable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VersionedOwnableInterface {
    return new utils.Interface(_abi) as VersionedOwnableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VersionedOwnable {
    return new Contract(address, _abi, signerOrProvider) as VersionedOwnable;
  }
}
