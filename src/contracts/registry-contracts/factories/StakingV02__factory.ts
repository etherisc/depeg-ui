/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { StakingV02, StakingV02Interface } from "../StakingV02";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "NftId",
        name: "target",
        type: "uint96",
      },
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "NftId",
        name: "id",
        type: "uint96",
      },
    ],
    name: "LogStakingNewStakeCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "UFixed",
        name: "oldRewardRate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "UFixed",
        name: "newRewardRate",
        type: "uint256",
      },
    ],
    name: "LogStakingRewardRateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "LogStakingRewardReservesDecreased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "LogStakingRewardReservesIncreased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "NftId",
        name: "id",
        type: "uint96",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "LogStakingRewardsClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "NftId",
        name: "id",
        type: "uint96",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "LogStakingRewardsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "NftId",
        name: "target",
        type: "uint96",
      },
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "NftId",
        name: "id",
        type: "uint96",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "LogStakingStaked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "ChainId",
        name: "chain",
        type: "bytes5",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "UFixed",
        name: "oldStakingRate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "UFixed",
        name: "newStakingRate",
        type: "uint256",
      },
    ],
    name: "LogStakingStakingRateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "NftId",
        name: "target",
        type: "uint96",
      },
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "NftId",
        name: "id",
        type: "uint96",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "LogStakingUnstaked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldWallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "LogStakingWalletChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "Version",
        name: "version",
        type: "uint48",
      },
      {
        indexed: false,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "activatedBy",
        type: "address",
      },
    ],
    name: "LogVersionableActivated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DIP_CONTRACT_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DIP_DECIMALS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "EXP",
    outputs: [
      {
        internalType: "int8",
        name: "",
        type: "int8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAINNET_ID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_REWARD_RATE_EXP",
    outputs: [
      {
        internalType: "int8",
        name: "",
        type: "int8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_REWARD_RATE_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MULTIPLIER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MULTIPLIER_HALF",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROUNDING_DEFAULT",
    outputs: [
      {
        internalType: "enum UFixedType.Rounding",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "YEAR_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        internalType: "address",
        name: "activatedBy",
        type: "address",
      },
    ],
    name: "activate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "activatedBy",
        type: "address",
      },
    ],
    name: "activateAndSetOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "blockNumber",
    outputs: [
      {
        internalType: "Blocknumber",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "ChainId",
        name: "chain",
        type: "bytes5",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "dipAmount",
        type: "uint256",
      },
    ],
    name: "calculateCapitalSupport",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "ChainId",
        name: "chain",
        type: "bytes5",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "calculateRequiredStaking",
    outputs: [
      {
        internalType: "uint256",
        name: "dipAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "calculateRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "rewardAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "NftId",
            name: "id",
            type: "uint96",
          },
          {
            internalType: "NftId",
            name: "target",
            type: "uint96",
          },
          {
            internalType: "uint256",
            name: "stakeBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rewardBalance",
            type: "uint256",
          },
          {
            internalType: "Timestamp",
            name: "createdAt",
            type: "uint40",
          },
          {
            internalType: "Timestamp",
            name: "updatedAt",
            type: "uint40",
          },
          {
            internalType: "Version",
            name: "version",
            type: "uint48",
          },
        ],
        internalType: "struct IStaking.StakeInfo",
        name: "stakeInfo",
        type: "tuple",
      },
    ],
    name: "calculateRewardsIncrement",
    outputs: [
      {
        internalType: "uint256",
        name: "rewardsAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "NftId",
        name: "target",
        type: "uint96",
      },
    ],
    name: "capitalSupport",
    outputs: [
      {
        internalType: "uint256",
        name: "capitalAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "NftId",
        name: "stakeId",
        type: "uint96",
      },
    ],
    name: "claimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "NftId",
        name: "target",
        type: "uint96",
      },
      {
        internalType: "uint256",
        name: "dipAmount",
        type: "uint256",
      },
    ],
    name: "createStake",
    outputs: [
      {
        internalType: "NftId",
        name: "stakeId",
        type: "uint96",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "UFixed",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "enum UFixedType.Rounding",
        name: "rounding",
        type: "uint8",
      },
    ],
    name: "ftoi",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "UFixed",
        name: "a",
        type: "uint256",
      },
    ],
    name: "ftoi",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "NftId",
        name: "bundleNft",
        type: "uint96",
      },
    ],
    name: "getBundleInfo",
    outputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "riskpoolId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "string",
        name: "displayName",
        type: "string",
      },
      {
        internalType: "enum IInstanceServiceFacade.BundleState",
        name: "bundleState",
        type: "uint8",
      },
      {
        internalType: "Timestamp",
        name: "expiryAt",
        type: "uint40",
      },
      {
        internalType: "bool",
        name: "stakingSupported",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "unstakingSupported",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "stakeAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "NftId",
        name: "target",
        type: "uint96",
      },
    ],
    name: "getBundleState",
    outputs: [
      {
        internalType: "enum IChainRegistry.ObjectState",
        name: "objectState",
        type: "uint8",
      },
      {
        internalType: "enum IInstanceServiceFacade.BundleState",
        name: "bundleState",
        type: "uint8",
      },
      {
        internalType: "Timestamp",
        name: "expiryAt",
        type: "uint40",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDip",
    outputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "dip",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "NftId",
        name: "id",
        type: "uint96",
      },
    ],
    name: "getInfo",
    outputs: [
      {
        components: [
          {
            internalType: "NftId",
            name: "id",
            type: "uint96",
          },
          {
            internalType: "NftId",
            name: "target",
            type: "uint96",
          },
          {
            internalType: "uint256",
            name: "stakeBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rewardBalance",
            type: "uint256",
          },
          {
            internalType: "Timestamp",
            name: "createdAt",
            type: "uint40",
          },
          {
            internalType: "Timestamp",
            name: "updatedAt",
            type: "uint40",
          },
          {
            internalType: "Version",
            name: "version",
            type: "uint48",
          },
        ],
        internalType: "struct IStaking.StakeInfo",
        name: "info",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRegistry",
    outputs: [
      {
        internalType: "contract IChainRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStakingWallet",
    outputs: [
      {
        internalType: "address",
        name: "stakingWallet",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
    ],
    name: "getVersion",
    outputs: [
      {
        internalType: "Version",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Version",
        name: "_version",
        type: "uint48",
      },
    ],
    name: "getVersionInfo",
    outputs: [
      {
        components: [
          {
            internalType: "Version",
            name: "version",
            type: "uint48",
          },
          {
            internalType: "address",
            name: "implementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "activatedBy",
            type: "address",
          },
          {
            internalType: "Blocknumber",
            name: "activatedIn",
            type: "uint32",
          },
          {
            internalType: "Timestamp",
            name: "activatedAt",
            type: "uint40",
          },
        ],
        internalType: "struct IVersionable.VersionInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "implementsIStaking",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "shift",
        type: "uint8",
      },
    ],
    name: "intToBytes",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Version",
        name: "_version",
        type: "uint48",
      },
    ],
    name: "isActivated",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "NftId",
        name: "stakeId",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isStakeOwner",
    outputs: [
      {
        internalType: "bool",
        name: "isOwner",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "NftId",
        name: "target",
        type: "uint96",
      },
    ],
    name: "isStakingSupported",
    outputs: [
      {
        internalType: "bool",
        name: "isSupported",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "ObjectType",
        name: "targetType",
        type: "uint8",
      },
    ],
    name: "isStakingSupportedForType",
    outputs: [
      {
        internalType: "bool",
        name: "isSupported",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "NftId",
        name: "target",
        type: "uint96",
      },
    ],
    name: "isUnstakingSupported",
    outputs: [
      {
        internalType: "bool",
        name: "isSupported",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
    ],
    name: "itof",
    outputs: [
      {
        internalType: "UFixed",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "int8",
        name: "exp",
        type: "int8",
      },
    ],
    name: "itof",
    outputs: [
      {
        internalType: "UFixed",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "maxRewardRate",
    outputs: [
      {
        internalType: "UFixed",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rateDecimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "dipAmount",
        type: "uint256",
      },
    ],
    name: "refillRewardReserves",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "dips",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardRate",
    outputs: [
      {
        internalType: "UFixed",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "dips",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dipToken",
        type: "address",
      },
    ],
    name: "setDipContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registryAddress",
        type: "address",
      },
    ],
    name: "setRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "UFixed",
        name: "newRewardRate",
        type: "uint256",
      },
    ],
    name: "setRewardRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "ChainId",
        name: "chain",
        type: "bytes5",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "UFixed",
        name: "newStakingRate",
        type: "uint256",
      },
    ],
    name: "setStakingRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakingWalletNew",
        type: "address",
      },
    ],
    name: "setStakingWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "NftId",
        name: "stakeId",
        type: "uint96",
      },
      {
        internalType: "uint256",
        name: "dipAmount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "dips",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "NftId",
        name: "target",
        type: "uint96",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint256",
        name: "dipAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "ChainId",
        name: "chain",
        type: "bytes5",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "stakingRate",
    outputs: [
      {
        internalType: "UFixed",
        name: "rate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    name: "toChain",
    outputs: [
      {
        internalType: "ChainId",
        name: "",
        type: "bytes5",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "ChainId",
        name: "x",
        type: "bytes5",
      },
    ],
    name: "toInt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Blocknumber",
        name: "x",
        type: "uint32",
      },
    ],
    name: "toInt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Timestamp",
        name: "x",
        type: "uint40",
      },
    ],
    name: "toInt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "int8",
        name: "exp",
        type: "int8",
      },
    ],
    name: "toRate",
    outputs: [
      {
        internalType: "UFixed",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "NftId",
        name: "stakeId",
        type: "uint96",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "NftId",
        name: "stakeId",
        type: "uint96",
      },
    ],
    name: "unstakeAndClaimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "Version",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "versionParts",
    outputs: [
      {
        internalType: "VersionPart",
        name: "major",
        type: "uint16",
      },
      {
        internalType: "VersionPart",
        name: "minor",
        type: "uint16",
      },
      {
        internalType: "VersionPart",
        name: "patch",
        type: "uint16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "versions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "dipAmount",
        type: "uint256",
      },
    ],
    name: "withdrawRewardReserves",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506200001e303362000140565b600254610100900460ff16158080156200003f5750600254600160ff909116105b806200005b5750303b1580156200005b575060025460ff166001145b620000c45760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6002805460ff191660011790558015620000e8576002805461ff0019166101001790555b620000f262000444565b801562000139576002805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5062000632565b60006200014c620004ac565b65ffffffffffff8116600090815260208190526040902060010154909150600160a01b900463ffffffff1615620001d65760405162461bcd60e51b815260206004820152602760248201527f4552524f523a56524e2d3030313a56455253494f4e5f414c52454144595f41436044820152661512559055115160ca1b6064820152608401620000bb565b6001541562000299576001805460009190620001f4908290620005f0565b8154811062000207576200020762000606565b90600052602060002090600591828204019190066006029054906101000a900465ffffffffffff1690506200023d8282620004c3565b620002975760405162461bcd60e51b8152602060048201526024808201527f4552524f523a56524e2d3030323a56455253494f4e5f4e4f545f494e4352454160448201526353494e4760e01b6064820152608401620000bb565b505b60018054808201825560009190915260058082047fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf601805465ffffffffffff808616600694909506939093026101000a848102930219169190911790556040805160a0810182529182526001600160a01b03808616602084015284169082015260608101620003254390565b63ffffffff1681526020014264ffffffffff90811690915265ffffffffffff8084166000908152602081815260409182902085518154928701516001600160a01b039081166601000000000000026001600160d01b0319909416919095161791909117815584820151600190910180546060870151608090970151909516600160c01b0264ffffffffff60c01b1963ffffffff909716600160a01b026001600160c01b031990961692909416919091179390931793909316179055517ff7b17693e830f8b239607e857ac81b076450829d544c053d533d1b278d18cd8990620004379083908690869065ffffffffffff9390931683526001600160a01b03918216602084015216604082015260600190565b60405180910390a1505050565b600254610100900460ff16620004a05760405162461bcd60e51b815260206004820152602b60248201526000805160206200592f83398151915260448201526a6e697469616c697a696e6760a81b6064820152608401620000bb565b620004aa620004d8565b565b6000620004be6001600060016200053f565b905090565b65ffffffffffff808216908316115b92915050565b600254610100900460ff16620005345760405162461bcd60e51b815260206004820152602b60248201526000805160206200592f83398151915260448201526a6e697469616c697a696e6760a81b6064820152608401620000bb565b620004aa3362000588565b600061ffff84811690848116908416806200057163ffff0000601089901b1665ffff0000000060208b901b166200061c565b6200057d91906200061c565b979650505050505050565b603580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052601160045260246000fd5b81810381811115620004d257620004d2620005da565b634e487b7160e01b600052603260045260246000fd5b80820180821115620004d257620004d2620005da565b6152ed80620006426000396000f3fe608060405234801561001057600080fd5b50600436106104075760003560e01c806393bc9dfe11610220578063da09d48411610130578063f0de8228116100b8578063f8b1cb3c11610087578063f8b1cb3c14610a17578063fc1cd6cc14610a1f578063fc58bba814610a32578063fddec1c314610a45578063fe4071d414610a6057600080fd5b8063f0de8228146109d4578063f2fde38b146109dc578063f30ed598146109ef578063f682f20814610a0457600080fd5b8063e392983c116100ff578063e392983c1461098b578063e8a9650a1461099e578063ea67800a146109a6578063eb646d71146109b9578063efc38668146109c157600080fd5b8063da09d484146108da578063dd45daa1146108f2578063de788b2c14610905578063e0cf7b251461097857600080fd5b8063b17a1072116101b3578063b88da75911610182578063b88da7591461086c578063bd4080ec1461087f578063c79606f0146108ac578063d05b0452146108b4578063d93c04a0146108c757600080fd5b8063b17a107214610816578063b38ea17514610841578063b3fc986e1461084a578063b54ded6e1461085b57600080fd5b8063a91ee0dc116101ef578063a91ee0dc146107c2578063aa5c3ab4146107d5578063aa615ec8146107dd578063ac64bace146107f057600080fd5b806393bc9dfe146107815780639555c4db146107895780639b59d46e1461079c5780639e447fc6146107af57600080fd5b80634c3371cd1161031b57806378a987ba116102ae5780638da5cb5b1161027d5780638da5cb5b146107245780638e258689146107355780638f081e2e146107485780638f24f6011461075b57806392ae8ce01461076e57600080fd5b806378a987ba146106c85780637b0a47ee146106d15780637d8f1e81146106d957806385efd1b7146106fb57600080fd5b806366362612116102ea57806366362612146106825780636effeac414610696578063715018a6146106ad578063719f761a146106b557600080fd5b80634c3371cd1461059f57806354fd4d501461062a57806357e871e7146106495780635ab1bd531461065d57600080fd5b80631a3480b51161039e57806333d84ec01161036d57806333d84ec01461052a57806338381e631461053d5780633e1e5638146105505780634793b4ab1461056357806348a887061461058c57600080fd5b80631a3480b5146105075780631a860c3e1461050e5780631b08829c14610523578063313ce5671461050757600080fd5b80630dd4d811116103da5780630dd4d8111461045d5780631080d89514610470578063178156ca146104c05780631a12cd47146104ec57600080fd5b8063059f8b161461040c5780630c7785f4146104275780630d40ffc71461044a5780630dc0ba7214610452575b600080fd5b610414610a73565b6040519081526020015b60405180910390f35b61043a61043536600461468f565b610a82565b604051901515815260200161041e565b606954610414565b6104146301e1338081565b61041461046b3660046146d7565b610bcf565b6104b361047e36600461471f565b6040805160ff929092169290921b60f01b6001600160f01b031916602082015281516002818303018152602290910190915290565b60405161041e9190614794565b6104d36104ce3660046147a7565b610c04565b6040516001600160d81b0319909116815260200161041e565b6104f4601281565b60405160009190910b815260200161041e565b6012610414565b61052161051c3660046147c0565b610c15565b005b600161043a565b61041461053836600461468f565b610ec5565b61052161054b36600461468f565b61112d565b61052161055e3660046147dd565b611165565b61057661057136600461468f565b6114b1565b60405161041e9a99989796959493929190614848565b61041461059a3660046148bd565b6115a8565b6105b26105ad36600461468f565b6115f9565b60405161041e9190600060e0820190506001600160601b03808451168352806020850151166020840152506040830151604083015260608301516060830152608083015164ffffffffff80821660808501528060a08601511660a0850152505065ffffffffffff60c08401511660c083015292915050565b610632611750565b60405165ffffffffffff909116815260200161041e565b60405163ffffffff4316815260200161041e565b6072546001600160a01b03165b6040516001600160a01b03909116815260200161041e565b6104146106903660046148df565b60d81c90565b6104146106a436600461490e565b63ffffffff1690565b610521611760565b6105216106c336600461468f565b611774565b61041461014d81565b606854610414565b6106ec6106e736600461468f565b6117ce565b60405161041e9392919061492b565b61041461070936600461468f565b6001600160601b031660009081526070602052604090205490565b6035546001600160a01b031661066a565b610521610743366004614964565b611b8e565b6105216107563660046147a7565b611d44565b6104146107693660046149af565b611dba565b61041461077c3660046147a7565b611e5a565b606c54610414565b6105216107973660046149d8565b611e72565b6104146107aa3660046147dd565b611eac565b6105216107bd3660046147a7565b611ff9565b6105216107d03660046147c0565b6120c9565b606a54610414565b61043a6107eb366004614a0a565b6126e4565b61043a6107fe366004614a27565b60ff9081166000908152606e60205260409020541690565b610829610824366004614a44565b612710565b6040516001600160601b03909116815260200161041e565b6104f460021981565b606d546001600160a01b031661066a565b6067546001600160a01b031661066a565b61063261087a3660046147a7565b612896565b61088761292c565b6040805161ffff9485168152928416602084015292169181019190915260600161041e565b610414600181565b6104146108c23660046147a7565b61294c565b6105216108d5366004614a44565b612959565b6104146108e8366004614a8a565b64ffffffffff1690565b610414610900366004614aa5565b612b0e565b610918610913366004614a0a565b612bf8565b60408051825165ffffffffffff1681526020808401516001600160a01b039081169183019190915283830151169181019190915260608083015163ffffffff169082015260809182015164ffffffffff169181019190915260a00161041e565b61043a610986366004614ad0565b612cf5565b61043a61099936600461468f565b612d81565b610414601281565b6105216109b43660046147a7565b612e8f565b610414612eea565b6104146109cf3660046147dd565b612f02565b606b54610414565b6105216109ea3660046147c0565b61304d565b6109f7600281565b60405161041e9190614aee565b610414610a12366004614b6c565b6130c3565b600154610414565b610414610a2d366004614aa5565b613163565b610521610a40366004614a44565b61316f565b61066a73c719d010b63e5bbf2c0551872cd5316ed26acd8381565b610521610a6e3660046147c0565b6131a6565b610a7f6012600a614d10565b81565b607254604051633ee2fb0360e21b81526001600160601b038316600482015260009182916001600160a01b039091169063fb8bec0c90602401600060405180830381865afa158015610ad8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b009190810190614de0565b60409081015160ff8082166000908152606e602052929092205490925016610b2b5750600092915050565b610bb181607360009054906101000a90046001600160a01b03166001600160a01b03166353bed7c36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba69190614eee565b60ff90811691161490565b15610bc657610bbf83613365565b9392505050565b50600192915050565b6001600160d81b0319821660009081526071602090815260408083206001600160a01b03851684529091529020545b92915050565b6000610bfe8260d81b90565b905090565b610c1d6133fa565b6001600160a01b038116610c825760405162461bcd60e51b815260206004820152602160248201527f4552524f523a53544b2d3033303a5354414b494e475f57414c4c45545f5a45526044820152604f60f81b60648201526084015b60405180910390fd5b606d546001600160a01b0390811690821603610cea5760405162461bcd60e51b815260206004820152602160248201527f4552524f523a53544b2d3033313a5354414b494e475f57414c4c45545f53414d6044820152604560f81b6064820152608401610c79565b606d80546001600160a01b038381166001600160a01b0319831617909255163081148015610d2257506067546001600160a01b031615155b15610e73576067546040516370a0823160e01b81526001600160a01b03838116600483015260009216906370a0823190602401602060405180830381865afa158015610d72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d969190614f0b565b90508015610e715760675460405163a9059cbb60e01b81526001600160a01b03858116600483015260248201849052600092169063a9059cbb906044016020604051808303816000875af1158015610df2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e169190614f24565b905080610e6f5760405162461bcd60e51b815260206004820152602160248201527f4552524f523a53544b2d3033323a4449505f5452414e534645525f4641494c456044820152601160fa1b6064820152608401610c79565b505b505b604080513381526001600160a01b0380841660208301528416918101919091527f359112ed49b51aa57623cda8e6aba451d41c05a0cec07c303b7d94de22ea9b20906060015b60405180910390a15050565b607254604051633ee2fb0360e21b81526001600160601b038316600482015260009182916001600160a01b039091169063fb8bec0c90602401600060405180830381865afa158015610f1b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f439190810190614de0565b60408082015160ff9081166000908152606e602052919091205491925016610fbd5760405162461bcd60e51b815260206004820152602760248201527f4552524f523a53544b2d3232303a5441524745545f545950455f4e4f545f5355604482015266141413d495115160ca1b6064820152608401610c79565b6110188160400151607360009054906101000a90046001600160a01b03166001600160a01b03166353bed7c36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b82573d6000803e3d6000fd5b6110705760405162461bcd60e51b8152602060048201526024808201527f4552524f523a53544b2d3232313a5441524745545f545950455f4e4f545f42556044820152634e444c4560e01b6064820152608401610c79565b607254604051631f3dad0560e21b81526001600160601b03851660048201526000916001600160a01b031690637cf6b41490602401600060405180830381865afa1580156110c2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110ea9190810190614f46565b5050935050505061112582602001518260706000886001600160601b03166001600160601b0316815260200190815260200160002054611eac565b949350505050565b806111388133612cf5565b6111545760405162461bcd60e51b8152600401610c7990614fbc565b6111618233600019613454565b5050565b61116d6133fa565b6072546040516317005ce960e01b81526001600160d81b0319851660048201526001600160a01b03808516602483015285928592600092909116906317005ce990604401602060405180830381865afa1580156111ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f29190614ff3565b90506001600160601b03811661124a5760405162461bcd60e51b815260206004820152601c60248201527f4552524f523a53544b2d3030353a4e4f545f52454749535445524544000000006044820152606401610c79565b607254604051633ee2fb0360e21b81526001600160601b03831660048201526000916001600160a01b03169063fb8bec0c90602401600060405180830381865afa15801561129c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112c49190810190614de0565b90506113218160400151607360009054906101000a90046001600160a01b03166001600160a01b03166382bfefc86040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b82573d6000803e3d6000fd5b61136d5760405162461bcd60e51b815260206004820152601760248201527f4552524f523a53544b2d3030363a4e4f545f544f4b454e0000000000000000006044820152606401610c79565b6002816060015160058111156113855761138561481e565b146113d25760405162461bcd60e51b815260206004820181905260248201527f4552524f523a53544b2d3030373a544f4b454e5f4e4f545f415050524f5645446044820152606401610c79565b8461141f5760405162461bcd60e51b815260206004820152601f60248201527f4552524f523a53544b2d3131303a5354414b494e475f524154455f5a45524f006044820152606401610c79565b6001600160d81b0319871660008181526071602090815260408083206001600160a01b038b8116808652918452938290208054908b90556035548351951685529284019490945282810193909352606082018190526080820188905291517f7f4ed2d4096a23693f9cf036dc7b47ed499e7cb38fa3f0398100379330eaf13a9181900360a00190a15050505050505050565b607254604051631f3dad0560e21b81526001600160601b0383166004820152600091829182918291606091839182918291829182916001600160a01b0390911690637cf6b41490602401600060405180830381865afa158015611518573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526115409190810190614f46565b50939d50919b509950975095506115568b6117ce565b909650945061156690508b61362a565b92506115718b613365565b9150607060008c6001600160601b03166001600160601b031681526020019081526020016000205490509193959799509193959799565b6000806115c96115b784611e5a565b6115c46301e13380611e5a565b613697565b905060006115d9606854836136fb565b90506115f06108c26115ea87611e5a565b836136fb565b95945050505050565b6040805160e08101825260008082526020808301829052828401829052606083018290526080830182905260a0830182905260c083018290526001600160601b0385168252606f9052919091206003015461166c9064ffffffffff1661165d600090565b64ffffffffff90811691161190565b6116c65760405162461bcd60e51b815260206004820152602560248201527f4552524f523a53544b2d3139303a5354414b455f494e464f5f4e4f545f4558496044820152645354494e4760d81b6064820152608401610c79565b506001600160601b039081166000908152606f6020908152604091829020825160e08101845281548086168252600160601b900490941691840191909152600181015491830191909152600281015460608301526003015464ffffffffff8082166080840152600160281b82041660a0830152600160501b900465ffffffffffff1660c082015290565b6000610c10600160006001613710565b6117686133fa565b611772600061374a565b565b8061177f8133612cf5565b61179b5760405162461bcd60e51b8152600401610c7990614fbc565b6001600160601b0382166000908152606f6020526040902033906117be8161379c565b6117c882826138bd565b50505050565b607254604051633ee2fb0360e21b81526001600160601b038316600482015260009182918291859161186c916001600160a01b03169063fb8bec0c90602401600060405180830381865afa15801561182a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526118529190810190614de0565b602001514660d81b6001600160d81b031990811691161490565b6118cc5760405162461bcd60e51b815260206004820152602b60248201527f4552524f523a53544b2d3030313a444946464552454e545f434841494e5f4e4f60448201526a1517d4d5541413d495115560aa1b6064820152608401610c79565b607254604051633ee2fb0360e21b81526001600160601b03871660048201526000916001600160a01b03169063fb8bec0c90602401600060405180830381865afa15801561191e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526119469190810190614de0565b90506119a38160400151607360009054906101000a90046001600160a01b03166001600160a01b03166353bed7c36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b82573d6000803e3d6000fd5b6119fb5760405162461bcd60e51b8152602060048201526024808201527f4552524f523a53544b2d3233303a4f424a4543545f545950455f4e4f545f42556044820152634e444c4560e01b6064820152608401610c79565b6060810151607254604051631f3dad0560e21b81526001600160601b0389166004820152919650600091829182916001600160a01b0390911690637cf6b41490602401600060405180830381865afa158015611a5b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611a839190810190614f46565b6072546040516351da295d60e11b81526004810188905296995093975095506000946001600160a01b03909316935063a3b452ba926024019150611ac49050565b602060405180830381865afa158015611ae1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b059190615010565b604051632d0821b760e01b8152600481018590529091506000906001600160a01b03831690632d0821b790602401600060405180830381865afa158015611b50573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611b78919081019061503c565b60600151999b999a509198975050505050505050565b600254610100900460ff1615808015611bae5750600254600160ff909116105b80611bc85750303b158015611bc8575060025460ff166001145b611c2b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610c79565b6002805460ff191660011790558015611c4e576002805461ff0019166101001790555b611c5884836138fd565b611c60613bdc565b611c68611750565b6073805465ffffffffffff92909216600160a01b0265ffffffffffff60a01b19909216919091179055606780546001600160a01b031990811673c719d010b63e5bbf2c0551872cd5316ed26acd83179091556000606c819055606d80549092163017909155606b819055611cdb90611e5a565b606855611cec61014d600219612b0e565b606955611cf88361304d565b80156117c8576002805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a150505050565b611d4c6133fa565b60008111611d9c5760405162461bcd60e51b815260206004820152601d60248201527f4552524f523a53544b2d3039303a4449505f414d4f554e545f5a45524f0000006044820152606401610c79565b611db7611db16035546001600160a01b031690565b82613c0b565b50565b60006002826002811115611dd057611dd061481e565b03611e1657611e0f6002611de66012600a614d10565b611df09190615125565b611dfa9085615147565b6001611e086012600a614d10565b6000613ce5565b9050610bfe565b6000826002811115611e2a57611e2a61481e565b03611e4157611e0f836001611e086012600a614d10565b611e0f836001611e536012600a614d10565b6001613ce5565b6000611e686012600a614d10565b610bfe908361515a565b611e7c82826138fd565b611e84611750565b607360146101000a81548165ffffffffffff021916908365ffffffffffff1602179055505050565b6001600160d81b0319831660009081526071602090815260408083206001600160a01b0386168452909152812054611f375760405162461bcd60e51b815260206004820152602860248201527f4552524f523a53544b2d3231313a544f4b454e5f5354414b494e475f5241544560448201526717d393d517d4d15560c21b6064820152608401610c79565b6000836001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611f77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f9b9190614eee565b90506000611fe4611fb185610900601286615171565b6001600160d81b0319881660009081526071602090815260408083206001600160a01b038b1684529091529020546136fb565b9050611fef8161294c565b9695505050505050565b6120016133fa565b61200d81606954101590565b6120685760405162461bcd60e51b815260206004820152602660248201527f4552524f523a53544b2d3130303a5245574152445f455843454544535f4d41586044820152655f56414c554560d01b6064820152608401610c79565b60688054908290557f8fcdf74b8073f04543cf61e0a1b7b93ed00e71d8c419d743728f8f7d41ce4abd6120a36035546001600160a01b031690565b606854604080516001600160a01b03909316835260208301859052820152606001610eb9565b6120d16133fa565b6072546001600160a01b0316156121355760405162461bcd60e51b815260206004820152602260248201527f4552524f523a4352472d3035303a52454749535452595f414c52454144595f53604482015261115560f21b6064820152608401610c79565b6001600160a01b0381166121975760405162461bcd60e51b815260206004820152602360248201527f4552524f523a4352472d3035313a52454749535452595f414444524553535f5a60448201526245524f60e81b6064820152608401610c79565b6000819050806001600160a01b031663a0e2ad0c6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156121da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121fe9190614f24565b61225c5760405162461bcd60e51b815260206004820152602960248201527f4552524f523a53544b2d3035323a52454749535452595f4e4f545f49434841496044820152684e524547495354525960b81b6064820152608401610c79565b6122d9816001600160a01b03166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa15801561229d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122c19190615192565b6122c9613d36565b65ffffffffffff90811691161190565b6123315760405162461bcd60e51b815260206004820152602360248201527f4552524f523a53544b2d3035333a52454749535452595f56455253494f4e5f5a60448201526245524f60e81b6064820152608401610c79565b607280546001600160a01b038084166001600160a01b031992831617909255607380549285169290911682179055604080516391b9b82760e01b81529051600092606e9284926391b9b827916004808201926020929091908290030181865afa1580156123a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123c69190614eee565b60ff16815260208082019290925260409081016000908120805460ff19169415159490941790935560735481516334576e2d60e21b81529151606e9385936001600160a01b039093169263d15db8b492600480830193928290030181865afa158015612436573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061245a9190614eee565b60ff16815260208082019290925260409081016000908120805460ff19169415159490941790935560735481516325425a9160e01b81529151606e9385936001600160a01b03909316926325425a9192600480830193928290030181865afa1580156124ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124ee9190614eee565b60ff16815260208082019290925260409081016000908120805460ff1916941515949094179093556073548151631c009f8160e11b81529151606e9385936001600160a01b03909316926338013f0292600480830193928290030181865afa15801561255e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125829190614eee565b60ff16815260208082019290925260409081016000908120805460ff1916941515949094179093556073548151635ce4193b60e01b81529151606e9385936001600160a01b0390931692635ce4193b92600480830193928290030181865afa1580156125f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126169190614eee565b60ff1660ff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001606e6000607360009054906101000a90046001600160a01b03166001600160a01b03166353bed7c36040518163ffffffff1660e01b8152600401602060405180830381865afa15801561269a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126be9190614eee565b60ff1681526020810191909152604001600020805460ff19169115159190911790555050565b65ffffffffffff16600090815260208190526040902060010154600160a01b900463ffffffff16151590565b6072546040516373d4aaad60e01b81526001600160601b0384166004820152336024820181905260009290916001600160a01b03909116906373d4aaad906044016020604051808303816000875af1158015612770573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127949190614ff3565b6001600160601b038082166000818152606f602052604081208054938916600160601b026001600160c01b03199094169092179290921781556001810182905560028101919091559092506127e64290565b60038201805464ffffffffff191664ffffffffff9290921691909117905561280c611750565b81600301600a6101000a81548165ffffffffffff021916908365ffffffffffff16021790555061283c8385612959565b604080516001600160601b0387811682526001600160a01b038516602083015285168183015290517f0b7f33f010bdd01296afad5a65cddcba6622740b7ea55fb637e21aba38317bd19181900360600190a1505092915050565b60015460009082106128ea5760405162461bcd60e51b815260206004820152601d60248201527f4552524f523a56524e2d3031303a494e4445585f544f4f5f4c415247450000006044820152606401610c79565b600182815481106128fd576128fd6151af565b90600052602060002090600591828204019190066006029054906101000a900465ffffffffffff169050919050565b600080600061294161293c611750565b613d44565b925092509250909192565b6000610bfe826002611dba565b6001600160601b0382166000908152606f6020526040902060038101546129899064ffffffffff1661165d600090565b6129d55760405162461bcd60e51b815260206004820181905260248201527f4552524f523a53544b2d3135303a5354414b455f4e4f545f4558495354494e476044820152606401610c79565b60008211612a2f5760405162461bcd60e51b815260206004820152602160248201527f4552524f523a53544b2d3135313a5354414b494e475f414d4f554e545f5a45526044820152604f60f81b6064820152608401610c79565b8054612a4a90600160601b90046001600160601b0316612d81565b612aa25760405162461bcd60e51b815260206004820152602360248201527f4552524f523a53544b2d3135323a5354414b494e475f4e4f545f535550504f5260448201526215115160ea1b6064820152608401610c79565b33612aac8261379c565b612ab68284613d86565b612ac08184613e15565b815460018301546040517f3f91c6b282474fffabb2b7bbcd0c8e690e2cd55e38d29105aa76e80c6532e54692611d3692600160601b9091046001600160601b031691859189918991906151c5565b600080612b1c836012615202565b60000b1215612b6d5760405162461bcd60e51b815260206004820152601f60248201527f4552524f523a464d2d3031303a4558504f4e454e545f544f4f5f534d414c4c006044820152606401610c79565b612b7960126002615223565b60000b612b87836012615202565b60000b1315612bd85760405162461bcd60e51b815260206004820152601f60248201527f4552524f523a464d2d3031313a4558504f4e454e545f544f4f5f4c41524745006044820152606401610c79565b612be3826012615202565b612bee90600a61524a565b610bbf908461515a565b6040805160a081018252600080825260208201819052918101829052606081018290526080810191909152612c2c826126e4565b612c785760405162461bcd60e51b815260206004820152601d60248201527f4552524f523a56524e2d3032303a56455253494f4e5f554e4b4e4f574e0000006044820152606401610c79565b5065ffffffffffff90811660009081526020818152604091829020825160a0810184528154948516815266010000000000009094046001600160a01b03908116928501929092526001015490811691830191909152600160a01b810463ffffffff166060830152600160c01b900464ffffffffff16608082015290565b607254604051631c5da14d60e11b81526001600160601b03841660048201526000916001600160a01b03848116929116906338bb429a90602401602060405180830381865afa158015612d4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d709190615010565b6001600160a01b0316149392505050565b607254604051633ee2fb0360e21b81526001600160601b038316600482015260009182916001600160a01b039091169063fb8bec0c90602401600060405180830381865afa158015612dd7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612dff9190810190614de0565b60409081015160ff8082166000908152606e602052929092205490925016612e2a5750600092915050565b612e8181607360009054906101000a90046001600160a01b03166001600160a01b03166353bed7c36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b82573d6000803e3d6000fd5b15610bc657610bbf8361362a565b60008111612edf5760405162461bcd60e51b815260206004820152601d60248201527f4552524f523a53544b2d3038303a4449505f414d4f554e545f5a45524f0000006044820152606401610c79565b336111618183614097565b6002612ef86012600a614d10565b610a7f9190615125565b6001600160d81b0319831660009081526071602090815260408083206001600160a01b0386168452909152812054612f8d5760405162461bcd60e51b815260206004820152602860248201527f4552524f523a53544b2d3231303a544f4b454e5f5354414b494e475f5241544560448201526717d393d517d4d15560c21b6064820152608401610c79565b6001600160d81b0319841660009081526071602090815260408083206001600160a01b03871680855290835281842054825163313ce56760e01b81529251909493919263313ce5679260048083019391928290030181865afa158015612ff7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061301b9190614eee565b9050600061303761303186610900856012615171565b84613697565b90506130428161294c565b979650505050505050565b6130556133fa565b6001600160a01b0381166130ba5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610c79565b611db78161374a565b60006130d78260a0015164ffffffffff1690565b4210156131355760405162461bcd60e51b815260206004820152602660248201527f4552524f523a53544b2d3230303a555044415445445f41545f494e5f5448455f60448201526546555455524560d01b6064820152608401610c79565b60006131498360a0015164ffffffffff1690565b6131539042615259565b9050610bbf8360400151826115a8565b6000610bbf8383612b0e565b8161317a8133612cf5565b6131965760405162461bcd60e51b8152600401610c7990614fbc565b6131a1833384613454565b505050565b6131ae6133fa565b600146036132245760405162461bcd60e51b815260206004820152603760248201527f4552524f523a53544b2d3034303a4449505f414444524553535f4348414e474560448201527f5f4e4f545f414c4c4f5745445f4f4e5f4d41494e4e45540000000000000000006064820152608401610c79565b6001600160a01b03811661328a5760405162461bcd60e51b815260206004820152602760248201527f4552524f523a53544b2d3034313a4449505f434f4e54524143545f414444524560448201526653535f5a45524f60c81b6064820152608401610c79565b606780546001600160a01b0319166001600160a01b0383169081179091556040805163313ce56760e01b815290516012929163313ce5679160048083019260209291908290030181865afa1580156132e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061330a9190614eee565b60ff1614611db75760405162461bcd60e51b815260206004820152602260248201527f4552524f523a53544b2d3034323a4449505f444543494d414c535f494e56414c604482015261125160f21b6064820152608401610c79565b6000806000613373846117ce565b90935091506002905082600381111561338e5761338e61481e565b14806133ab575060038260038111156133a9576133a961481e565b145b156133ba575060019392505050565b6133c581600061165d565b80156133e157506133e181425b64ffffffffff90811691161090565b156133f0575060019392505050565b5060009392505050565b6035546001600160a01b031633146117725760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610c79565b6001600160601b038381166000908152606f6020526040908190208054915163031de17d60e21b8152600160601b90920490921660048201523090630c7785f490602401602060405180830381865afa1580156134b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134d99190614f24565b6135315760405162461bcd60e51b815260206004820152602360248201527f4552524f523a53544b2d3235303a554e5354414b455f4e4f545f535550504f5260448201526215115160ea1b6064820152608401610c79565b6000821161358b5760405162461bcd60e51b815260206004820152602160248201527f4552524f523a53544b2d3235313a554e5354414b455f414d4f554e545f5a45526044820152604f60f81b6064820152608401610c79565b6135948161379c565b600019821480156135a757816001015492505b6135b18284614104565b6135bb84846141db565b815460018301546040517f71c92eee6263ef73b9fab5adccc7d9b4bd936df0d06a13715bb26e1a555f98db9261360b926001600160601b03600160601b83048116938a93919091169189916151c5565b60405180910390a180156136235761362384836138bd565b5050505050565b6000806000613638846117ce565b9093509150600090508260038111156136535761365361481e565b14613662575060009392505050565b61366d81600061165d565b801561367e575061367e81426133d2565b1561368d575060009392505050565b5060019392505050565b60008082116136e85760405162461bcd60e51b815260206004820152601a60248201527f4552524f523a55464d2d3032303a44495649534f525f5a45524f0000000000006044820152606401610c79565b610bbf83670de0b6b3a7640000846144f8565b6000610bbf8383670de0b6b3a76400006144f8565b600061ffff848116908481169084168061374063ffff0000601089901b1665ffff0000000060208b901b16615147565b6130429190615147565b603580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6040805160e08101825282546001600160601b038082168352600160601b90910416602082015260018301549181019190915260028201546060820152600382015464ffffffffff8082166080840152600160281b82041660a0830152600160501b900465ffffffffffff1660c0820152600090613819906130c3565b905080606a600082825461382d9190615147565b92505081905550808260020160008282546138489190615147565b909155505060038201805469ffffffffff00000000001916600160281b64ffffffffff42160217905581546002830154604080516001600160601b039093168352602083018490528201527ff2502c501e885a216c3d8cad389bd394bedcf33e89924ecb6e2cd09be1977ac290606001610eb9565b6002810154606b548111156138d15750606b545b6138db82826145a7565b80606b60008282546138ed9190615259565b909155506131a1905083826141db565b6000613907611750565b9050613912816126e4565b1561396f5760405162461bcd60e51b815260206004820152602760248201527f4552524f523a56524e2d3030313a56455253494f4e5f414c52454144595f41436044820152661512559055115160ca1b6064820152608401610c79565b60015415613a3357600180546000919061398a908290615259565b8154811061399a5761399a6151af565b90600052602060002090600591828204019190066006029054906101000a900465ffffffffffff1690506139d9828265ffffffffffff90811691161190565b613a315760405162461bcd60e51b8152602060048201526024808201527f4552524f523a56524e2d3030323a56455253494f4e5f4e4f545f494e4352454160448201526353494e4760e01b6064820152608401610c79565b505b60018054808201825560009190915260058082047fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf601805465ffffffffffff808616600694909506939093026101000a848102930219169190911790556040805160a0810182529182526001600160a01b03808616602084015284169082015260608101613abe4390565b63ffffffff1681526020014264ffffffffff90811690915265ffffffffffff8084166000908152602081815260409182902085518154928701516001600160a01b039081166601000000000000026001600160d01b0319909416919095161791909117815584820151600190910180546060870151608090970151909516600160c01b0264ffffffffff60c01b1963ffffffff909716600160a01b026001600160c01b031990961692909416919091179390931793909316179055517ff7b17693e830f8b239607e857ac81b076450829d544c053d533d1b278d18cd8990613bcf9083908690869065ffffffffffff9390931683526001600160a01b03918216602084015216604082015260600190565b60405180910390a1505050565b600254610100900460ff16613c035760405162461bcd60e51b8152600401610c799061526c565b61177261464a565b80606b541015613c6d5760405162461bcd60e51b815260206004820152602760248201527f4552524f523a53544b2d3238303a4449505f52455345525645535f494e535546604482015266119250d251539560ca1b6064820152608401610c79565b80606b6000828254613c7f9190615259565b9091555050603554613c9a906001600160a01b0316826141db565b606b54604080516001600160a01b038516815260208101849052908101919091527f48cc84bb6be6c33e706b3191822b1c798e92c3be4703b854fa7d28655b6b916190606001610eb9565b600080613cf38686866144f8565b90506001836002811115613d0957613d0961481e565b148015613d26575060008480613d2157613d2161510f565b868809115b156115f057611fef600182615147565b6000610c1081600080613710565b6000808065ffffffffffff841661ffff602086901c16613d648383615259565b9150601082901c6000613d778185615259565b92989197509195509350505050565b8154600160601b90046001600160601b031660009081526070602052604081208054839290613db6908490615147565b9250508190555080606c6000828254613dcf9190615147565b9250508190555080826001016000828254613dea9190615147565b909155505050600301805469ffffffffff00000000001916600160281b4264ffffffffff1602179055565b6067546040516370a0823160e01b81526001600160a01b038481166004830152839216906370a0823190602401602060405180830381865afa158015613e5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613e839190614f0b565b1015613ee05760405162461bcd60e51b815260206004820152602660248201527f4552524f523a53544b2d3239303a4449505f42414c414e43455f494e535546466044820152651250d251539560d21b6064820152608401610c79565b606754604051636eb1769f60e11b81526001600160a01b0384811660048301523060248301528392169063dd62ed3e90604401602060405180830381865afa158015613f30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613f549190614f0b565b1015613fb35760405162461bcd60e51b815260206004820152602860248201527f4552524f523a53544b2d3239313a4449505f414c4c4f57414e43455f494e535560448201526711919250d251539560c21b6064820152608401610c79565b606754606d546040516323b872dd60e01b81526001600160a01b03858116600483015291821660248201526044810184905260009291909116906323b872dd906064016020604051808303816000875af1158015614015573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906140399190614f24565b9050806131a15760405162461bcd60e51b815260206004820152602660248201527f4552524f523a53544b2d3239323a4449505f5452414e534645525f46524f4d5f60448201526511905253115160d21b6064820152608401610c79565b80606b60008282546140a99190615147565b909155506140b990508282613e15565b606b54604080516001600160a01b038516815260208101849052908101919091527fb628bf08f5b4ded4b379092b99133f74d52fc917e939ffd5e85268edc58deff590606001610eb9565b81600101548111156141775760405162461bcd60e51b815260206004820152603660248201527f4552524f523a53544b2d3237303a554e5354414b494e475f414d4f554e545f456044820152755843454544535f5354414b494e475f42414c414e434560501b6064820152608401610c79565b8154600160601b90046001600160601b0316600090815260706020526040812080548392906141a7908490615259565b9250508190555080606c60008282546141c09190615259565b9250508190555080826001016000828254613dea9190615259565b606754606d546040516370a0823160e01b81526001600160a01b039182166004820152839291909116906370a0823190602401602060405180830381865afa15801561422b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061424f9190614f0b565b10156142ac5760405162461bcd60e51b815260206004820152602660248201527f4552524f523a53544b2d3330303a4449505f42414c414e43455f494e535546466044820152651250d251539560d21b6064820152608401610c79565b606d546000906001600160a01b0316301461442257606754606d54604051636eb1769f60e11b81526001600160a01b0391821660048201523060248201528492919091169063dd62ed3e90604401602060405180830381865afa158015614317573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061433b9190614f0b565b101561439a5760405162461bcd60e51b815260206004820152602860248201527f4552524f523a53544b2d3330313a4449505f414c4c4f57414e43455f494e535560448201526711919250d251539560c21b6064820152608401610c79565b606754606d546040516323b872dd60e01b81526001600160a01b0391821660048201528582166024820152604481018590529116906323b872dd906064016020604051808303816000875af11580156143f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061441b9190614f24565b905061449c565b60675460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018590529091169063a9059cbb906044016020604051808303816000875af1158015614475573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906144999190614f24565b90505b806131a15760405162461bcd60e51b815260206004820152602660248201527f4552524f523a53544b2d3330323a4449505f5452414e534645525f46524f4d5f60448201526511905253115160d21b6064820152608401610c79565b6000808060001985870985870292508281108382030391505080600003614532578382816145285761452861510f565b0492505050610bbf565b80841161453e57600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b808260020160008282546145bb9190615259565b909155505060038201805469ffffffffff00000000001916600160281b4264ffffffffff1602179055606a80548291906000906145f9908490615259565b909155505081546002830154604080516001600160601b039093168352602083018490528201527ff7d8d105f223293052b9281d8f374bd678486ab7a0bd8d61354accce2f72603e90606001610eb9565b600254610100900460ff166146715760405162461bcd60e51b8152600401610c799061526c565b6117723361374a565b6001600160601b0381168114611db757600080fd5b6000602082840312156146a157600080fd5b8135610bbf8161467a565b6001600160d81b031981168114611db757600080fd5b6001600160a01b0381168114611db757600080fd5b600080604083850312156146ea57600080fd5b82356146f5816146ac565b91506020830135614705816146c2565b809150509250929050565b60ff81168114611db757600080fd5b6000806040838503121561473257600080fd5b82359150602083013561470581614710565b60005b8381101561475f578181015183820152602001614747565b50506000910152565b60008151808452614780816020860160208601614744565b601f01601f19169290920160200192915050565b602081526000610bbf6020830184614768565b6000602082840312156147b957600080fd5b5035919050565b6000602082840312156147d257600080fd5b8135610bbf816146c2565b6000806000606084860312156147f257600080fd5b83356147fd816146ac565b9250602084013561480d816146c2565b929592945050506040919091013590565b634e487b7160e01b600052602160045260246000fd5b600481106148445761484461481e565b9052565b60006101408c83528b60208401528a604084015260018060a01b038a16606084015280608084015261487c8184018a614768565b91505061488c60a0830188614834565b64ffffffffff9590951660c082015292151560e0840152901515610100830152610120909101529695505050505050565b600080604083850312156148d057600080fd5b50508035926020909101359150565b6000602082840312156148f157600080fd5b8135610bbf816146ac565b63ffffffff81168114611db757600080fd5b60006020828403121561492057600080fd5b8135610bbf816148fc565b606081016006851061493f5761493f61481e565b84825261494f6020830185614834565b64ffffffffff83166040830152949350505050565b60008060006060848603121561497957600080fd5b8335614984816146c2565b92506020840135614994816146c2565b915060408401356149a4816146c2565b809150509250925092565b600080604083850312156149c257600080fd5b8235915060208301356003811061470557600080fd5b600080604083850312156149eb57600080fd5b82356146f5816146c2565b65ffffffffffff81168114611db757600080fd5b600060208284031215614a1c57600080fd5b8135610bbf816149f6565b600060208284031215614a3957600080fd5b8135610bbf81614710565b60008060408385031215614a5757600080fd5b8235614a628161467a565b946020939093013593505050565b803564ffffffffff81168114614a8557600080fd5b919050565b600060208284031215614a9c57600080fd5b610bbf82614a70565b60008060408385031215614ab857600080fd5b8235915060208301358060000b811461470557600080fd5b60008060408385031215614ae357600080fd5b82356146f58161467a565b6020810160038310614b0257614b0261481e565b91905290565b634e487b7160e01b600052604160045260246000fd5b604051610120810167ffffffffffffffff81118282101715614b4257614b42614b08565b60405290565b604051610140810167ffffffffffffffff81118282101715614b4257614b42614b08565b600060e08284031215614b7e57600080fd5b60405160e0810181811067ffffffffffffffff82111715614ba157614ba1614b08565b6040528235614baf8161467a565b81526020830135614bbf8161467a565b806020830152506040830135604082015260608301356060820152614be660808401614a70565b6080820152614bf760a08401614a70565b60a082015260c0830135614c0a816149f6565b60c08201529392505050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115614c67578160001904821115614c4d57614c4d614c16565b80851615614c5a57918102915b93841c9390800290614c31565b509250929050565b600082614c7e57506001610bfe565b81614c8b57506000610bfe565b8160018114614ca15760028114614cab57614cc7565b6001915050610bfe565b60ff841115614cbc57614cbc614c16565b50506001821b610bfe565b5060208310610133831016604e8410600b8410161715614cea575081810a610bfe565b614cf48383614c2c565b8060001904821115614d0857614d08614c16565b029392505050565b6000610bbf8383614c6f565b8051614a858161467a565b8051614a85816146ac565b8051614a8581614710565b805160068110614a8557600080fd5b600082601f830112614d5d57600080fd5b815167ffffffffffffffff80821115614d7857614d78614b08565b604051601f8301601f19908116603f01168101908282118183101715614da057614da0614b08565b81604052838152866020858801011115614db957600080fd5b611fef846020830160208901614744565b8051614a85816148fc565b8051614a85816149f6565b600060208284031215614df257600080fd5b815167ffffffffffffffff80821115614e0a57600080fd5b908301906101208286031215614e1f57600080fd5b614e27614b1e565b614e3083614d1c565b8152614e3e60208401614d27565b6020820152614e4f60408401614d32565b6040820152614e6060608401614d3d565b6060820152608083015182811115614e7757600080fd5b614e8387828601614d4c565b60808301525060a083015182811115614e9b57600080fd5b614ea787828601614d4c565b60a083015250614eb960c08401614dca565b60c0820152614eca60e08401614dca565b60e08201526101009150614edf828401614dd5565b91810191909152949350505050565b600060208284031215614f0057600080fd5b8151610bbf81614710565b600060208284031215614f1d57600080fd5b5051919050565b600060208284031215614f3657600080fd5b81518015158114610bbf57600080fd5b60008060008060008060c08789031215614f5f57600080fd5b8651955060208701519450604087015193506060870151614f7f816146c2565b608088015190935067ffffffffffffffff811115614f9c57600080fd5b614fa889828a01614d4c565b92505060a087015190509295509295509295565b6020808252601c908201527f4552524f523a53544b2d3031303a555345525f4e4f545f4f574e455200000000604082015260600190565b60006020828403121561500557600080fd5b8151610bbf8161467a565b60006020828403121561502257600080fd5b8151610bbf816146c2565b805160048110614a8557600080fd5b60006020828403121561504e57600080fd5b815167ffffffffffffffff8082111561506657600080fd5b90830190610140828603121561507b57600080fd5b615083614b48565b8251815260208301516020820152604083015160408201526150a76060840161502d565b60608201526080830151828111156150be57600080fd5b6150ca87828601614d4c565b60808301525060a0838101519082015260c0808401519082015260e0808401519082015261010080840151908201526101209283015192810192909252509392505050565b634e487b7160e01b600052601260045260246000fd5b60008261514257634e487b7160e01b600052601260045260246000fd5b500490565b80820180821115610bfe57610bfe614c16565b8082028115828204841417610bfe57610bfe614c16565b600082810b9082900b03607f198112607f82131715610bfe57610bfe614c16565b6000602082840312156151a457600080fd5b8151610bbf816149f6565b634e487b7160e01b600052603260045260246000fd5b6001600160601b0395861681526001600160a01b039490941660208501529190931660408301526060820192909252608081019190915260a00190565b600081810b9083900b01607f8113607f1982121715610bfe57610bfe614c16565b60008260000b8260000b028060000b915080821461524357615243614c16565b5092915050565b6000610bbf60ff841683614c6f565b81810381811115610bfe57610bfe614c16565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea264697066735822122087e337d5e7655499ee676497cb147244d363473d87275acedacac06080004b3464736f6c63430008130033496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069";

type StakingV02ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingV02ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StakingV02__factory extends ContractFactory {
  constructor(...args: StakingV02ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StakingV02> {
    return super.deploy(overrides || {}) as Promise<StakingV02>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): StakingV02 {
    return super.attach(address) as StakingV02;
  }
  override connect(signer: Signer): StakingV02__factory {
    return super.connect(signer) as StakingV02__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingV02Interface {
    return new utils.Interface(_abi) as StakingV02Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakingV02 {
    return new Contract(address, _abi, signerOrProvider) as StakingV02;
  }
}
